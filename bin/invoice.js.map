{
  "version": 3,
  "sources": ["../node_modules/fn-annotate/index.js", "../node_modules/util-deprecate/browser.js", "../node_modules/faunadb/node_modules/chalk/source/index.js", "../node_modules/boxen/index.js", "../node_modules/cross-fetch/dist/browser-ponyfill.js", "../node_modules/faunadb/src/_util.js", "../node_modules/faunadb/src/Expr.js", "../node_modules/faunadb/src/errors.js", "../node_modules/base64-js/index.js", "../node_modules/util/util.js", "../node_modules/faunadb/src/values.js", "../node_modules/object-assign/index.js", "../node_modules/faunadb/src/query.js", "../node_modules/faunadb/src/_json.js", "../node_modules/faunadb/src/PageHelper.js", "../node_modules/faunadb/src/RequestResult.js", "../node_modules/faunadb/src/_http/errors.js", "(disabled):http2", "../node_modules/faunadb/src/_http/http2Adapter.js", "../node_modules/event-target-shim/src/event.mjs", "../node_modules/event-target-shim/src/event-target.mjs", "../node_modules/abort-controller/src/abort-signal.ts", "../node_modules/abort-controller/src/abort-controller.ts", "../node_modules/abort-controller/polyfill.js", "(disabled):https", "(disabled):http", "../node_modules/faunadb/src/_http/fetchAdapter.js", "(disabled):os", "../node_modules/faunadb/src/_http/index.js", "../node_modules/faunadb/src/stream.js", "../node_modules/faunadb/src/Client.js", "../node_modules/faunadb/src/clientLogger.js", "../node_modules/faunadb/index.js", "../app/fun/sort.ts", "../app/globals.ts", "../app/fun/globalState.ts", "../app/fun/on.ts", "../app/router.ts", "../app/fun/asCurrency.ts", "../app/fun/ticksInSeconds.ts", "../app/services/ServiceCache.ts", "../app/services/StorageModel.ts", "../app/ux/Toaster.ts", "../app/services/getDatabaseTime.ts", "../app/services/invoices.ts", "../app/dom.ts", "../app/fun/asDateString.ts", "../app/fun/dom.ts", "../app/fun/hookupTriggers.ts", "../app/fun/behavior/input.ts", "../app/fun/behavior/form.ts", "../app/services/inventory.ts", "../app/invoice/PaymentManager.ts", "../app/fun/asNumber.ts", "../app/fun/sum.ts", "../app/fun/gotoUrl.ts", "../app/invoice/templates/invoice-form.tsx", "../app/invoice/templates/invoice-print.tsx", "../app/fun/isZero.ts", "../app/invoice/templates/invoices-grid.tsx", "../app/fun/get.ts", "../app/fun/setMode.ts", "../app/services/validateAccessToken.ts", "../app/identify.ts", "../app/ux/injectLabels.ts", "../app/services/admin.ts", "../app/services/gl.ts", "../app/fun/isUndefined.ts", "../app/fun/detect.ts", "../app/index.ts", "../app/invoice/invoice.ts"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = annotate;\n\nfunction annotate(fn) {\n\n  if (typeof fn !== 'function') {\n    throw new Error('Could not parse function signature for injection dependencies: Object is not a function');\n  }\n\n  if (!fn.length) return [];\n\n  var injects = /^()\\(?([^)=]*)\\)? *=>/.exec(fn + '') ||\n                /^[^(]+([^ \\(]*) *\\(([^\\)]*)\\)/.exec(fn + '');\n\n  if (!injects) {\n    throw new Error('Could not parse function signature for injection dependencies: ' + fn + '');\n  }\n\n  var argumentString = injects[2]\n\n  // Strip multi-line comments:\n  // Uses the lazy-quantifier (.*?): http://www.rexegg.com/regex-quantifiers.html#lazy_solution\n  .replace(/\\/\\*[\\S\\s]*?\\*\\//g, ' ')\n\n  // Strip single-line comments:\n  .replace(/\\/\\/.*/g, ' ');\n\n  function groupSubArguments(_, type, keys) {\n    return type + keys.split(',')\n    .map(function (arg) {\n      return arg && arg.trim();\n    })\n    .filter(Boolean)\n    .join('@');\n  }\n\n  argumentString = argumentString.replace(/(\\{)([^}]*)\\}/g, groupSubArguments);\n  argumentString = argumentString.replace(/(\\[)([^}]*)\\]/g, groupSubArguments);\n\n  return argumentString.split(',')\n  .map(function (arg) {\n    return arg && arg.trim();\n  })\n  .map(function (arg) {\n    if (arg[0] === '{') {\n      return arg.substring(1).split('@');\n    }\n    if (arg[0] === '[') {\n      return { items: arg.substring(1).split('@') };\n    }\n    return arg;\n  })\n  .filter(Boolean);\n\n}\n", "\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n", "", "", "var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n", "'use strict'\n\nvar packageJson = require('../package.json')\nvar chalk = require('chalk')\nvar boxen = require('boxen')\n\nvar crossGlobal =\n  typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof global !== 'undefined'\n    ? global\n    : self\n\n/**\n * Inherit the prototype methods from one constructor into another.\n * Source: https://github.com/kaelzhang/node-util-inherits\n * @param {function} ctor Constructor function which needs to inherit the prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n * @private\n */\nfunction inherits(ctor, superCtor) {\n  if (ctor === undefined || ctor === null) {\n    throw new TypeError(\n      'The constructor to \"inherits\" must not be null or undefined'\n    )\n  }\n\n  if (superCtor === undefined || superCtor === null) {\n    throw new TypeError(\n      'The super constructor to \"inherits\" must not be null or undefined'\n    )\n  }\n\n  if (superCtor.prototype === undefined) {\n    throw new TypeError(\n      'The super constructor to \"inherits\" must have a prototype'\n    )\n  }\n\n  ctor.super_ = superCtor\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true,\n    },\n  })\n}\n\n/**\n * Determines if the current environment is a NodeJS environment.\n * @private\n */\nfunction isNodeEnv() {\n  return (\n    typeof window === 'undefined' &&\n    typeof process !== 'undefined' &&\n    process.versions != null &&\n    process.versions.node != null\n  )\n}\n\n/**\n * Resolves environment variable if available.\n *\n * @param {string} envKey A name of env variable.\n * @return {void|string} Returns requested env variable or void.\n * @private\n */\nfunction getEnvVariable(envKey) {\n  var areEnvVarsAvailable = !!(\n    typeof process !== 'undefined' &&\n    process &&\n    process.env\n  )\n\n  if (areEnvVarsAvailable && process.env[envKey] != null) {\n    return process.env[envKey]\n  }\n}\n\n/**\n * JavaScript Client Detection\n * @private\n */\nfunction getBrowserDetails() {\n  var browser = navigator.appName\n  var browserVersion = '' + parseFloat(navigator.appVersion)\n  var nameOffset, verOffset, ix\n\n  // Opera\n  if ((verOffset = navigator.userAgent.indexOf('Opera')) != -1) {\n    browser = 'Opera'\n    browserVersion = navigator.userAgent.substring(verOffset + 6)\n    if ((verOffset = navigator.userAgent.indexOf('Version')) != -1) {\n      browserVersion = navigator.userAgent.substring(verOffset + 8)\n    }\n  }\n  // MSIE\n  else if ((verOffset = navigator.userAgent.indexOf('MSIE')) != -1) {\n    browser = 'Microsoft Internet Explorer'\n    browserVersion = navigator.userAgent.substring(verOffset + 5)\n  }\n\n  //IE 11 no longer identifies itself as MS IE, so trap it\n  //http://stackoverflow.com/questions/17907445/how-to-detect-ie11\n  else if (\n    browser == 'Netscape' &&\n    navigator.userAgent.indexOf('Trident/') != -1\n  ) {\n    browser = 'Microsoft Internet Explorer'\n    browserVersion = navigator.userAgent.substring(verOffset + 5)\n    if ((verOffset = navigator.userAgent.indexOf('rv:')) != -1) {\n      browserVersion = navigator.userAgent.substring(verOffset + 3)\n    }\n  }\n\n  // Chrome\n  else if ((verOffset = navigator.userAgent.indexOf('Chrome')) != -1) {\n    browser = 'Chrome'\n    browserVersion = navigator.userAgent.substring(verOffset + 7)\n  }\n  // Safari\n  else if ((verOffset = navigator.userAgent.indexOf('Safari')) != -1) {\n    browser = 'Safari'\n    browserVersion = navigator.userAgent.substring(verOffset + 7)\n    if ((verOffset = navigator.userAgent.indexOf('Version')) != -1) {\n      browserVersion = navigator.userAgent.substring(verOffset + 8)\n    }\n\n    // Chrome on iPad identifies itself as Safari. Actual results do not match what Google claims\n    //  at: https://developers.google.com/chrome/mobile/docs/user-agent?hl=ja\n    //  No mention of chrome in the user agent string. However it does mention CriOS, which presumably\n    //  can be keyed on to detect it.\n    if (navigator.userAgent.indexOf('CriOS') != -1) {\n      //Chrome on iPad spoofing Safari...correct it.\n      browser = 'Chrome'\n      //Don't believe there is a way to grab the accurate version number, so leaving that for now.\n    }\n  }\n  // Firefox\n  else if ((verOffset = navigator.userAgent.indexOf('Firefox')) != -1) {\n    browser = 'Firefox'\n    browserVersion = navigator.userAgent.substring(verOffset + 8)\n  }\n  // Other browsers\n  else if (\n    (nameOffset = navigator.userAgent.lastIndexOf(' ') + 1) <\n    (verOffset = navigator.userAgent.lastIndexOf('/'))\n  ) {\n    browser = navigator.userAgent.substring(nameOffset, verOffset)\n    browserVersion = navigator.userAgent.substring(verOffset + 1)\n    if (browser.toLowerCase() == browser.toUpperCase()) {\n      browser = navigator.appName\n    }\n  }\n  // trim the browser version string\n  if ((ix = browserVersion.indexOf(';')) != -1)\n    browserVersion = browserVersion.substring(0, ix)\n  if ((ix = browserVersion.indexOf(' ')) != -1)\n    browserVersion = browserVersion.substring(0, ix)\n  if ((ix = browserVersion.indexOf(')')) != -1)\n    browserVersion = browserVersion.substring(0, ix)\n\n  return [browser, browserVersion].join('-')\n}\n\nfunction getBrowserOsDetails() {\n  var os = 'unknown'\n  var clientStrings = [\n    { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },\n    { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },\n    { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },\n    { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },\n    { s: 'Windows Vista', r: /Windows NT 6.0/ },\n    { s: 'Windows Server 2003', r: /Windows NT 5.2/ },\n    { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },\n    { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },\n    { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },\n    { s: 'Windows 98', r: /(Windows 98|Win98)/ },\n    { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },\n    { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },\n    { s: 'Windows CE', r: /Windows CE/ },\n    { s: 'Windows 3.11', r: /Win16/ },\n    { s: 'Android', r: /Android/ },\n    { s: 'Open BSD', r: /OpenBSD/ },\n    { s: 'Sun OS', r: /SunOS/ },\n    { s: 'Chrome OS', r: /CrOS/ },\n    { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },\n    { s: 'iOS', r: /(iPhone|iPad|iPod)/ },\n    { s: 'Mac OS X', r: /Mac OS X/ },\n    { s: 'Mac OS', r: /(Mac OS|MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\n    { s: 'QNX', r: /QNX/ },\n    { s: 'UNIX', r: /UNIX/ },\n    { s: 'BeOS', r: /BeOS/ },\n    { s: 'OS/2', r: /OS\\/2/ },\n    {\n      s: 'Search Bot',\n      r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/,\n    },\n  ]\n  for (var id in clientStrings) {\n    var cs = clientStrings[id]\n    if (cs.r.test(navigator.userAgent)) {\n      os = cs.s\n      break\n    }\n  }\n\n  var osVersion = 'unknown'\n\n  if (/Windows/.test(os)) {\n    osVersion = /Windows (.*)/.exec(os)[1]\n    os = 'Windows'\n  }\n\n  switch (os) {\n    case 'Mac OS':\n    case 'Mac OS X':\n    case 'Android':\n      osVersion = /(?:Android|Mac OS|Mac OS X|MacPPC|MacIntel|Mac_PowerPC|Macintosh) ([\\.\\_\\d]+)/.exec(\n        navigator.userAgent\n      )[1]\n      break\n\n    case 'iOS':\n      osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(navigator.appVersion)\n      osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0)\n      break\n  }\n  return [os, osVersion].join('-')\n}\n\n/**\n * For checking process.env always use `hasOwnProperty`\n * Some providers could throw an error when trying to access env variables that does not exists\n * @private */\nfunction getNodeRuntimeEnv() {\n  var runtimeEnvs = [\n    {\n      name: 'Netlify',\n      check: function() {\n        return process.env.hasOwnProperty('NETLIFY_IMAGES_CDN_DOMAIN')\n      },\n    },\n    {\n      name: 'Vercel',\n      check: function() {\n        return process.env.hasOwnProperty('VERCEL')\n      },\n    },\n    {\n      name: 'Heroku',\n      check: function() {\n        return (\n          process.env.hasOwnProperty('PATH') &&\n          process.env.PATH.indexOf('.heroku') !== -1\n        )\n      },\n    },\n    {\n      name: 'AWS Lambda',\n      check: function() {\n        return process.env.hasOwnProperty('AWS_LAMBDA_FUNCTION_VERSION')\n      },\n    },\n    {\n      name: 'GCP Cloud Functions',\n      check: function() {\n        return (\n          process.env.hasOwnProperty('_') &&\n          process.env._.indexOf('google') !== -1\n        )\n      },\n    },\n    {\n      name: 'GCP Compute Instances',\n      check: function() {\n        return process.env.hasOwnProperty('GOOGLE_CLOUD_PROJECT')\n      },\n    },\n    {\n      name: 'Azure Cloud Functions',\n      check: function() {\n        return process.env.hasOwnProperty(\n          'WEBSITE_FUNCTIONS_AZUREMONITOR_CATEGORIES'\n        )\n      },\n    },\n    {\n      name: 'Azure Compute',\n      check: function() {\n        return (\n          process.env.hasOwnProperty('ORYX_ENV_TYPE') &&\n          process.env.hasOwnProperty('WEBSITE_INSTANCE_ID') &&\n          process.env.ORYX_ENV_TYPE === 'AppService'\n        )\n      },\n    },\n    {\n      name: 'Mongo Stitch',\n      check: function() {\n        return typeof crossGlobal.StitchError === 'function'\n      },\n    },\n    {\n      name: 'Render',\n      check: function() {\n        return process.env.hasOwnProperty('RENDER_SERVICE_ID')\n      },\n    },\n    {\n      name: 'Begin',\n      check: function() {\n        return process.env.hasOwnProperty('BEGIN_DATA_SCOPE_ID')\n      },\n    },\n  ]\n  var detectedEnv = runtimeEnvs.find(env => env.check())\n\n  return detectedEnv ? detectedEnv.name : 'unknown'\n}\n\n/**\n * If defined, returns the given value. Otherwise, returns the default value.\n * @param {any} obj The given value.\n * @param {any} def The default value.\n * @private\n */\nfunction defaults(obj, def) {\n  if (obj === undefined) {\n    return def\n  } else {\n    return obj\n  }\n}\n\n/**\n * Used for functions that take an options objects.\n * Fills in defaults for options not provided.\n * Throws errors for provided options that aren't recognized.\n * A default value of `undefined` is used to indicate that the option must be provided.\n * @private\n */\nfunction applyDefaults(provided, defaults) {\n  var out = {}\n\n  for (var providedKey in provided) {\n    if (!(providedKey in defaults)) {\n      throw new Error('No such option ' + providedKey)\n    }\n    out[providedKey] = provided[providedKey]\n  }\n\n  for (var defaultsKey in defaults) {\n    if (!(defaultsKey in out)) {\n      out[defaultsKey] = defaults[defaultsKey]\n    }\n  }\n\n  return out\n}\n\n/**\n * Returns a new object without any keys where the value would be null or undefined.\n * @private\n * */\nfunction removeNullAndUndefinedValues(object) {\n  var res = {}\n  for (var key in object) {\n    var val = object[key]\n    if (val !== null && val !== undefined) {\n      res[key] = val\n    }\n  }\n  return res\n}\n\n/**\n * Returns a new object without any keys where the value would be undefined.\n * @private\n * */\nfunction removeUndefinedValues(object) {\n  var res = {}\n  for (var key in object) {\n    var val = object[key]\n    if (val !== undefined) {\n      res[key] = val\n    }\n  }\n  return res\n}\n\n/**\n * Returns a boolean stating if the given object has a given property\n * @private\n * */\nfunction checkInstanceHasProperty(obj, prop) {\n  return typeof obj === 'object' && obj !== null && Boolean(obj[prop])\n}\n\nfunction formatUrl(base, path, query) {\n  query = typeof query === 'object' ? querystringify(query) : query\n  return [\n    base,\n    path ? (path.charAt(0) === '/' ? '' : '/' + path) : '',\n    query ? (query.charAt(0) === '?' ? '' : '?' + query) : '',\n  ].join('')\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || ''\n\n  var pairs = [],\n    value,\n    key\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?'\n\n  for (key in obj) {\n    if (checkInstanceHasProperty(obj, key)) {\n      value = obj[key]\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undefined || isNaN(value))) {\n        value = ''\n      }\n\n      key = encode(key)\n      value = encode(value)\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue\n      pairs.push(key + '=' + value)\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : ''\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input)\n  } catch (e) {\n    return null\n  }\n}\n\n/**\n * Merge two objects into one\n * @param obj1\n * @param obj2\n * @returns obj3 a new object based on obj1 and obj2\n */\nfunction mergeObjects(obj1, obj2) {\n  var obj3 = {}\n  for (var attrname in obj1) {\n    obj3[attrname] = obj1[attrname]\n  }\n  for (var attrname in obj2) {\n    obj3[attrname] = obj2[attrname]\n  }\n  return obj3\n}\n\n/**\n * Resolves which Fetch API compatible function to use. If an override is\n * provided, returns the override. If no override and the global (window) has\n * \"fetch\" property, return the native fetch. Otherwise returns the cross-fetch polyfill.\n *\n * @param {?function} fetchOverride An Fetch API compatible function to use.\n * @returns {function} A Fetch API compatible function.\n * @private\n */\nfunction resolveFetch(fetchOverride) {\n  if (typeof fetchOverride === 'function') {\n    return fetchOverride\n  }\n\n  if (typeof crossGlobal.fetch === 'function') {\n    // NB. Rebinding to global is needed for Safari\n    return crossGlobal.fetch.bind(crossGlobal)\n  }\n\n  return require('cross-fetch')\n}\n\nfunction notifyAboutNewVersion() {\n  var isNotified\n  const checkAndNotify = checkNewVersion => {\n    if (!isNodeEnv() || isNotified || !checkNewVersion) return\n    function onResponse(latestVersion) {\n      var isNewVersionAvailable = latestVersion > packageJson.version\n      if (isNewVersionAvailable) {\n        console.info(\n          boxen(\n            'New ' +\n              packageJson.name +\n              ' version available ' +\n              chalk.dim(packageJson.version) +\n              chalk.reset(' \u2192 ') +\n              chalk.green(latestVersion) +\n              `\\nChangelog: https://github.com/${packageJson.repository}/blob/main/CHANGELOG.md`,\n            { padding: 1, borderColor: 'yellow' }\n          )\n        )\n      }\n    }\n\n    isNotified = true\n    resolveFetch()('https://registry.npmjs.org/' + packageJson.name)\n      .then(resp => resp.json())\n      .then(json => onResponse(json['dist-tags'].latest))\n      .catch(err => {\n        console.error('Unable to check new driver version')\n        console.error(err)\n      })\n  }\n\n  return checkAndNotify\n}\n\nmodule.exports = {\n  notifyAboutNewVersion: notifyAboutNewVersion,\n  crossGlobal: crossGlobal,\n  mergeObjects: mergeObjects,\n  formatUrl: formatUrl,\n  querystringify: querystringify,\n  inherits: inherits,\n  isNodeEnv: isNodeEnv,\n  getEnvVariable: getEnvVariable,\n  defaults: defaults,\n  applyDefaults: applyDefaults,\n  removeNullAndUndefinedValues: removeNullAndUndefinedValues,\n  removeUndefinedValues: removeUndefinedValues,\n  checkInstanceHasProperty: checkInstanceHasProperty,\n  getBrowserDetails: getBrowserDetails,\n  getBrowserOsDetails: getBrowserOsDetails,\n  getNodeRuntimeEnv: getNodeRuntimeEnv,\n  resolveFetch: resolveFetch,\n}\n", "'use strict'\n\nvar util = require('./_util')\n\n/**\n * A representation of a FaunaDB Query Expression. Generally, you shouldn't need\n * to use this class directly; use the Query helpers defined in {@link module:query}.\n *\n * @param {Object} obj The object that represents a Query to be treated as an Expression.\n * @constructor\n */\nfunction Expr(obj) {\n  this.raw = obj\n}\n\nExpr.prototype._isFaunaExpr = true\n\nExpr.prototype.toJSON = function() {\n  return this.raw\n}\n\nExpr.prototype.toFQL = function() {\n  return exprToString(this.raw)\n}\n\nvar varArgsFunctions = [\n  'Do',\n  'Call',\n  'Union',\n  'Intersection',\n  'Difference',\n  'Equals',\n  'Add',\n  'BitAnd',\n  'BitOr',\n  'BitXor',\n  'Divide',\n  'Max',\n  'Min',\n  'Modulo',\n  'Multiply',\n  'Subtract',\n  'LT',\n  'LTE',\n  'GT',\n  'GTE',\n  'And',\n  'Or',\n]\n\n// FQL function names come across the wire as all lowercase letters\n// (like the key of this object). Not all are properly snake-cased\n// on the Core side, which causes improper capitalizations.\n//\n// JS Driver patch: https://faunadb.atlassian.net/browse/FE-540\n// Core update: https://faunadb.atlassian.net/browse/ENG-2110\n\nvar specialCases = {\n  containsstrregex: 'ContainsStrRegex',\n  endswith: 'EndsWith',\n  findstr: 'FindStr',\n  findstrregex: 'FindStrRegex',\n  gt: 'GT',\n  gte: 'GTE',\n  is_nonempty: 'is_non_empty',\n  lowercase: 'LowerCase',\n  lt: 'LT',\n  lte: 'LTE',\n  ltrim: 'LTrim',\n  ngram: 'NGram',\n  rtrim: 'RTrim',\n  regexescape: 'RegexEscape',\n  replacestr: 'ReplaceStr',\n  replacestrregex: 'ReplaceStrRegex',\n  startswith: 'StartsWith',\n  substring: 'SubString',\n  titlecase: 'TitleCase',\n  uppercase: 'UpperCase',\n}\n\n/**\n *\n * @param {Expr} expression A FQL expression\n * @returns {Boolean} Returns true for valid expressions\n * @private\n */\nfunction isExpr(expression) {\n  return (\n    expression instanceof Expr ||\n    util.checkInstanceHasProperty(expression, '_isFaunaExpr')\n  )\n}\n\n/**\n *\n * @param {Object} obj An object to print\n * @returns {String} String representation of object\n * @private\n */\nfunction printObject(obj) {\n  return (\n    '{' +\n    Object.keys(obj)\n      .map(function(k) {\n        return '\"' + k + '\"' + ': ' + exprToString(obj[k])\n      })\n      .join(', ') +\n    '}'\n  )\n}\n\n/**\n *\n * @param {Array} arr An array to print\n * @param {Function} toStr Function used for stringification\n * @returns {String} String representation of array\n * @private\n */\nfunction printArray(arr, toStr) {\n  return arr\n    .map(function(item) {\n      return toStr(item)\n    })\n    .join(', ')\n}\n\n/**\n *\n * @param {String} fn A snake-case FQL function name\n * @returns {String} The correpsonding camel-cased FQL function name\n * @private\n */\nfunction convertToCamelCase(fn) {\n  // For FQL functions with special formatting concerns, we\n  // use the specialCases object above to define their casing.\n  if (fn in specialCases) fn = specialCases[fn]\n\n  return fn\n    .split('_')\n    .map(function(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1)\n    })\n    .join('')\n}\n\nvar exprToString = function(expr, caller) {\n  // If expr is a Expr, we want to parse expr.raw instead\n  if (isExpr(expr)) {\n    if ('value' in expr) return expr.toString()\n    expr = expr.raw\n  }\n\n  // Return early to avoid extra work if null\n  if (expr === null) {\n    return 'null'\n  }\n\n  // Return stringified value if expression is not an Object or Array\n  switch (typeof expr) {\n    case 'string':\n      return JSON.stringify(expr)\n    case 'symbol':\n    case 'number':\n    case 'boolean':\n      return expr.toString()\n    case 'undefined':\n      return 'undefined'\n  }\n\n  // Handle expression Arrays\n  if (Array.isArray(expr)) {\n    var array = printArray(expr, exprToString)\n    return varArgsFunctions.indexOf(caller) != -1 ? array : '[' + array + ']'\n  }\n\n  // Parse expression Objects\n  if ('match' in expr) {\n    var matchStr = exprToString(expr['match'])\n    var terms = expr['terms'] || []\n\n    if (isExpr(terms)) terms = terms.raw\n\n    if (Array.isArray(terms) && terms.length == 0)\n      return 'Match(' + matchStr + ')'\n\n    if (Array.isArray(terms)) {\n      return (\n        'Match(' + matchStr + ', [' + printArray(terms, exprToString) + '])'\n      )\n    }\n\n    return 'Match(' + matchStr + ', ' + exprToString(terms) + ')'\n  }\n\n  if ('paginate' in expr) {\n    var exprKeys = Object.keys(expr)\n    if (exprKeys.length === 1) {\n      return 'Paginate(' + exprToString(expr['paginate']) + ')'\n    }\n\n    var expr2 = Object.assign({}, expr)\n    delete expr2['paginate']\n\n    return (\n      'Paginate(' +\n      exprToString(expr['paginate']) +\n      ', ' +\n      printObject(expr2) +\n      ')'\n    )\n  }\n\n  if ('let' in expr && 'in' in expr) {\n    var letExpr = ''\n\n    if (Array.isArray(expr['let']))\n      letExpr = '[' + printArray(expr['let'], printObject) + ']'\n    else letExpr = printObject(expr['let'])\n\n    return 'Let(' + letExpr + ', ' + exprToString(expr['in']) + ')'\n  }\n\n  if ('object' in expr) return printObject(expr['object'])\n\n  if ('merge' in expr) {\n    if (expr.lambda) {\n      return (\n        'Merge(' +\n        exprToString(expr.merge) +\n        ', ' +\n        exprToString(expr.with) +\n        ', ' +\n        exprToString(expr.lambda) +\n        ')'\n      )\n    }\n\n    return (\n      'Merge(' + exprToString(expr.merge) + ', ' + exprToString(expr.with) + ')'\n    )\n  }\n\n  if ('lambda' in expr) {\n    return (\n      'Lambda(' +\n      exprToString(expr['lambda']) +\n      ', ' +\n      exprToString(expr['expr']) +\n      ')'\n    )\n  }\n\n  if ('filter' in expr) {\n    return (\n      'Filter(' +\n      exprToString(expr['collection']) +\n      ', ' +\n      exprToString(expr['filter']) +\n      ')'\n    )\n  }\n\n  if ('call' in expr) {\n    return (\n      'Call(' +\n      exprToString(expr['call']) +\n      ', ' +\n      exprToString(expr['arguments']) +\n      ')'\n    )\n  }\n\n  if ('map' in expr) {\n    return (\n      'Map(' +\n      exprToString(expr['collection']) +\n      ', ' +\n      exprToString(expr['map']) +\n      ')'\n    )\n  }\n\n  if ('foreach' in expr) {\n    return (\n      'Foreach(' +\n      exprToString(expr['collection']) +\n      ', ' +\n      exprToString(expr['foreach']) +\n      ')'\n    )\n  }\n\n  var keys = Object.keys(expr)\n  var fn = keys[0]\n  fn = convertToCamelCase(fn)\n\n  // The filter prevents zero arity functions from having a null argument\n  // This only works under the assumptions\n  // that there are no functions where a single 'null' argument makes sense.\n  var args = keys\n    .filter(k => expr[k] !== null || keys.length > 1)\n    .map(k => exprToString(expr[k], fn))\n    .join(', ')\n\n  return fn + '(' + args + ')'\n}\n\nExpr.toString = exprToString\n\nmodule.exports = Expr\n", "'use strict'\n\nvar util = require('./_util')\n\n/**\n * FaunaDB error types. Request errors can originate from the client (e.g. bad\n * method parameters) or from the FaunaDB Server (e.g. invalid queries,\n * timeouts.) Server errors will subclass {@link module:errors~FaunaHTTPError}.\n * Stream errors will subclass {@link module:errors~StreamError}.\n *\n * @module errors\n */\n\n/**\n * The base exception type for all FaunaDB errors.\n *\n * @param {string} message\n * @extends Error\n * @constructor\n */\nfunction FaunaError(name, message, description) {\n  Error.call(this)\n\n  /**\n   * Name of this exception.\n   * @type {string}\n   */\n  this.name = name\n\n  /**\n   * Message for this exception.\n   * @type {string}\n   */\n  this.message = message\n\n  /**\n   * Description for this exception.\n   * @type {string}\n   */\n  this.description = description\n}\n\nutil.inherits(FaunaError, Error)\n\n/**\n * Exception thrown by this client library when an invalid\n * value is provided as a function argument.\n *\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction InvalidValue(message) {\n  FaunaError.call(this, 'InvalidValue', message)\n}\n\nutil.inherits(InvalidValue, FaunaError)\n\n/**\n * Exception thrown by this client library when an invalid\n * value is provided as a function argument.\n *\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction InvalidArity(min, max, actual, callerFunc) {\n  var arityInfo = `${callerFunc} function requires ${messageForArity(\n    min,\n    max\n  )} argument(s) but ${actual} were given`\n  var documentationLink = logDocumentationLink(callerFunc)\n\n  FaunaError.call(this, 'InvalidArity', `${arityInfo}\\n${documentationLink}`)\n\n  /**\n   * Minimum number of arguments.\n   * @type {number}\n   */\n  this.min = min\n\n  /**\n   * Maximum number of arguments.\n   * @type {number}\n   */\n  this.max = max\n\n  /**\n   * Actual number of arguments called with.\n   * @type {number}\n   */\n  this.actual = actual\n\n  function messageForArity(min, max) {\n    if (max === null) return 'at least ' + min\n    if (min === null) return 'up to ' + max\n    if (min === max) return min\n    return 'from ' + min + ' to ' + max\n  }\n\n  function logDocumentationLink(functionName) {\n    var docsURL = 'https://docs.fauna.com/fauna/current/api/fql/functions/'\n    return `For more info, see the docs: ${docsURL}${functionName.toLowerCase()}`\n  }\n}\n\nutil.inherits(InvalidArity, FaunaError)\n\n/**\n * Base exception type for errors returned by the FaunaDB server.\n *\n * @param {RequestResult} requestResult\n *\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction FaunaHTTPError(name, requestResult) {\n  var response = requestResult.responseContent\n  var errors = response.errors\n  var message = errors.length === 0 ? '(empty \"errors\")' : errors[0].code\n  var description =\n    errors.length === 0 ? '(empty \"errors\")' : errors[0].description\n  FaunaError.call(this, name, message, description)\n\n  /**\n   * A wrapped {@link RequestResult} object, containing the request and response\n   * context of the failed request.\n   *\n   * @type {RequestResult}\n   */\n  this.requestResult = requestResult\n}\n\nutil.inherits(FaunaHTTPError, FaunaError)\n\n/**\n * Convenience method to return the errors from the response object.\n *\n * @returns {Object}\n */\nFaunaHTTPError.prototype.errors = function() {\n  return this.requestResult.responseContent.errors\n}\n\n/**\n * Takes a {@link RequestResult} and throws an appropriate exception if\n * it contains a failed request.\n *\n * @param requestResult {RequestResult}\n */\nFaunaHTTPError.raiseForStatusCode = function(requestResult) {\n  var code = requestResult.statusCode\n  if (code < 200 || code >= 300) {\n    switch (code) {\n      case 400:\n        throw new BadRequest(requestResult)\n      case 401:\n        throw new Unauthorized(requestResult)\n      case 403:\n        throw new PermissionDenied(requestResult)\n      case 404:\n        throw new NotFound(requestResult)\n      case 405:\n        throw new MethodNotAllowed(requestResult)\n      case 429:\n        throw new TooManyRequests(requestResult)\n      case 500:\n        throw new InternalError(requestResult)\n      case 503:\n        throw new UnavailableError(requestResult)\n      default:\n        throw new FaunaHTTPError('UnknownError', requestResult)\n    }\n  }\n}\n\n/**\n * A HTTP 400 error.\n *\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction BadRequest(requestResult) {\n  FaunaHTTPError.call(this, 'BadRequest', requestResult)\n}\n\nutil.inherits(BadRequest, FaunaHTTPError)\n\n/**\n * A HTTP 401 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction Unauthorized(requestResult) {\n  FaunaHTTPError.call(this, 'Unauthorized', requestResult)\n}\n\nutil.inherits(Unauthorized, FaunaHTTPError)\n\n/**\n * A HTTP 403 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction PermissionDenied(requestResult) {\n  FaunaHTTPError.call(this, 'PermissionDenied', requestResult)\n}\n\nutil.inherits(PermissionDenied, FaunaHTTPError)\n\n/**\n * A HTTP 404 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction NotFound(requestResult) {\n  FaunaHTTPError.call(this, 'NotFound', requestResult)\n}\n\nutil.inherits(NotFound, FaunaHTTPError)\n\n/**\n * A HTTP 405 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction MethodNotAllowed(requestResult) {\n  FaunaHTTPError.call(this, 'MethodNotAllowed', requestResult)\n}\n\nutil.inherits(MethodNotAllowed, FaunaHTTPError)\n\n/**\n * A HTTP 429 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction TooManyRequests(requestResult) {\n  FaunaHTTPError.call(this, 'TooManyRequests', requestResult)\n}\n\nutil.inherits(TooManyRequests, FaunaHTTPError)\n\n/**\n * A HTTP 500 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction InternalError(requestResult) {\n  FaunaHTTPError.call(this, 'InternalError', requestResult)\n}\n\nutil.inherits(InternalError, FaunaHTTPError)\n\n/**\n * A HTTP 503 error.\n * @param {RequestResult} requestResult\n * @extends module:errors~FaunaHTTPError\n * @constructor\n */\nfunction UnavailableError(requestResult) {\n  FaunaHTTPError.call(this, 'UnavailableError', requestResult)\n}\n\nutil.inherits(UnavailableError, FaunaHTTPError)\n\n/**\n * The base exception type for all stream related errors.\n *\n * @constructor\n * @param {string} name The error class name.\n * @param {string} message The error message.\n * @param {string} description The error detailed description.\n * @extends module:errors~FaunaError\n */\nfunction StreamError(name, message, description) {\n  FaunaError.call(this, name, message, description)\n}\n\nutil.inherits(StreamError, FaunaError)\n\n/**\n * An error thrown by the client when streams are not supported by the current\n * platform.\n *\n * @constructor\n * @param {string} description The error description.\n * @extends module:errors~StreamError\n */\nfunction StreamsNotSupported(description) {\n  FaunaError.call(\n    this,\n    'StreamsNotSupported',\n    'streams not supported',\n    description\n  )\n}\n\nutil.inherits(StreamsNotSupported, StreamError)\n\n/**\n * An Error thrown by the server when something wrong happened with the\n * subscribed stream.\n * @constructor\n * @param {Object} event The error event.\n * @property {Object} event The error event.\n * @extends module:errors~StreamError\n */\nfunction StreamErrorEvent(event) {\n  var error = event.data || {}\n  FaunaError.call(this, 'StreamErrorEvent', error.code, error.description)\n  this.event = event\n}\n\nutil.inherits(StreamErrorEvent, StreamError)\n\n/**\n * An error thrown when attempting to operate on a closed Client instance.\n *\n * @param {string} message The error message.\n * @param {?string} description The error description.\n * @extends module:errors~FaunaError\n * @constructor\n */\nfunction ClientClosed(message, description) {\n  FaunaError.call(this, 'ClientClosed', message, description)\n}\n\nutil.inherits(ClientClosed, FaunaError)\n\nmodule.exports = {\n  FaunaError: FaunaError,\n  ClientClosed: ClientClosed,\n  FaunaHTTPError: FaunaHTTPError,\n  InvalidValue: InvalidValue,\n  InvalidArity: InvalidArity,\n  BadRequest: BadRequest,\n  Unauthorized: Unauthorized,\n  PermissionDenied: PermissionDenied,\n  NotFound: NotFound,\n  MethodNotAllowed: MethodNotAllowed,\n  TooManyRequests: TooManyRequests,\n  InternalError: InternalError,\n  UnavailableError: UnavailableError,\n  StreamError: StreamError,\n  StreamsNotSupported: StreamsNotSupported,\n  StreamErrorEvent: StreamErrorEvent,\n}\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "", "'use strict'\n\nvar base64 = require('base64-js')\nvar deprecate = require('util-deprecate')\nvar errors = require('./errors')\nvar Expr = require('./Expr')\nvar util = require('./_util')\nvar nodeUtil = util.isNodeEnv() ? require('util') : null\n\nvar customInspect = nodeUtil && nodeUtil.inspect.custom\nvar stringify = nodeUtil ? nodeUtil.inspect : JSON.stringify\n\n/**\n * FaunaDB value types. Generally, these collections do not need to be instantiated\n * directly; they can be constructed through helper methods in {@link module:query}.\n *\n * Instances of these collections will be returned in responses if the response object\n * contains these values. For example, a FaunaDB response containing\n *`{ \"@ref\": { \"id\": \"123\", \"collection\": { \"@ref\": { \"id\": \"frogs\", \"collection\": { \"@ref\": { \"id\": \"collectiones\" } } } } } }`\n * will be returned as `new values.Ref(\"123\", new values.Ref(\"frogs\", values.Native.COLLECTIONS))`.\n *\n * See the [FaunaDB Query API Documentation](https://app.fauna.com/documentation/reference/queryapi#simple-type)\n * for more information.\n *\n * @module values\n */\n\n/**\n * Base type for FaunaDB value objects.\n *\n * @extends Expr\n * @abstract\n * @constructor\n */\nfunction Value() {}\n\nValue.prototype._isFaunaValue = true\n\nutil.inherits(Value, Expr)\n\n/**\n * FaunaDB ref.\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {string} id\n *   The id portion of the ref.\n * @param {Ref} [collection]\n *   The collection portion of the ref.\n * @param {Ref} [database]\n *   The database portion of the ref.\n *\n * @extends module:values~Value\n * @constructor\n */\nfunction Ref(id, collection, database) {\n  if (!id) throw new errors.InvalidValue('id cannot be null or undefined')\n\n  this.value = { id: id }\n  if (collection) this.value['collection'] = collection\n  if (database) this.value['database'] = database\n}\n\nRef.prototype._isFaunaRef = true\n\nutil.inherits(Ref, Value)\n\n/**\n * Gets the collection part out of the Ref.\n *\n * @member {string}\n * @name module:values~Ref#collection\n */\nObject.defineProperty(Ref.prototype, 'collection', {\n  get: function() {\n    return this.value['collection']\n  },\n})\n\n/**\n * DEPRECATED. Gets the class part out of the Ref.\n *\n * @member {string}\n * @name module:values~Ref#class\n */\nObject.defineProperty(Ref.prototype, 'class', {\n  get: deprecate(function() {\n    return this.value['collection']\n  }, 'class is deprecated, use collection instead'),\n})\n\n/**\n * Gets the database part out of the Ref.\n *\n * @member {Ref}\n * @name module:values~Ref#database\n */\nObject.defineProperty(Ref.prototype, 'database', {\n  get: function() {\n    return this.value['database']\n  },\n})\n\n/**\n * Gets the id part out of the Ref.\n *\n * @member {Ref}\n * @name module:values~Ref#id\n */\nObject.defineProperty(Ref.prototype, 'id', {\n  get: function() {\n    return this.value['id']\n  },\n})\n\n/** @ignore */\nRef.prototype.toJSON = function() {\n  return { '@ref': this.value }\n}\n\nwrapToString(Ref, function() {\n  var constructors = {\n    collections: 'Collection',\n    databases: 'Database',\n    indexes: 'Index',\n    functions: 'Function',\n    roles: 'Role',\n    access_providers: 'AccessProvider',\n  }\n\n  var isNative = function(ref) {\n    return ref.collection === undefined\n  }\n\n  var toString = function(ref) {\n    if (isNative(ref)) {\n      var db = ref.database !== undefined ? ref.database.toString() : ''\n\n      if (ref.id === 'access_providers') return 'AccessProviders(' + db + ')'\n\n      return ref.id.charAt(0).toUpperCase() + ref.id.slice(1) + '(' + db + ')'\n    }\n\n    if (isNative(ref.collection)) {\n      var constructor = constructors[ref.collection.id]\n      if (constructor !== undefined) {\n        var db =\n          ref.database !== undefined ? ', ' + ref.database.toString() : ''\n        return constructor + '(\"' + ref.id + '\"' + db + ')'\n      }\n    }\n\n    return 'Ref(' + toString(ref.collection) + ', \"' + ref.id + '\")'\n  }\n\n  return toString(this)\n})\n\n/** @ignore */\nRef.prototype.valueOf = function() {\n  return this.value\n}\n\n/**\n * Whether these are both Refs and have the same value.\n * @param {any} other\n * @returns {boolean}\n */\nRef.prototype.equals = function(other) {\n  return (\n    (other instanceof Ref ||\n      util.checkInstanceHasProperty(other, '_isFaunaRef')) &&\n    this.id === other.id &&\n    ((this.collection === undefined && other.collection === undefined) ||\n      this.collection.equals(other.collection)) &&\n    ((this.database === undefined && other.database === undefined) ||\n      this.database.equals(other.database))\n  )\n}\n\nvar Native = {\n  COLLECTIONS: new Ref('collections'),\n  INDEXES: new Ref('indexes'),\n  DATABASES: new Ref('databases'),\n  FUNCTIONS: new Ref('functions'),\n  ROLES: new Ref('roles'),\n  KEYS: new Ref('keys'),\n  ACCESS_PROVIDERS: new Ref('access_providers'),\n}\n\nNative.fromName = function(name) {\n  switch (name) {\n    case 'collections':\n      return Native.COLLECTIONS\n    case 'indexes':\n      return Native.INDEXES\n    case 'databases':\n      return Native.DATABASES\n    case 'functions':\n      return Native.FUNCTIONS\n    case 'roles':\n      return Native.ROLES\n    case 'keys':\n      return Native.KEYS\n    case 'access_providers':\n      return Native.ACCESS_PROVIDERS\n  }\n  return new Ref(name)\n}\n\n/**\n * FaunaDB Set.\n * This represents a set returned as part of a response.\n * This looks like `{\"@set\": set_query}`.\n * For query sets see {@link match}, {@link union},\n * {@link intersection}, {@link difference}, and {@link join}.\n *\n * @extends module:values~Value\n * @constructor\n */\nfunction SetRef(value) {\n  /** Raw query object. */\n  this.value = value\n}\n\nutil.inherits(SetRef, Value)\n\nwrapToString(SetRef, function() {\n  return Expr.toString(this.value)\n})\n\n/** @ignore */\nSetRef.prototype.toJSON = function() {\n  return { '@set': this.value }\n}\n\n/** FaunaDB time. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {string|Date} value If a Date, this is converted to a string.\n * @extends module:values~Value\n * @constructor\n */\nfunction FaunaTime(value) {\n  if (value instanceof Date) {\n    value = value.toISOString()\n  } else if (!(value.charAt(value.length - 1) === 'Z')) {\n    throw new errors.InvalidValue(\"Only allowed timezone is 'Z', got: \" + value)\n  }\n\n  this.value = value\n}\n\nutil.inherits(FaunaTime, Value)\n\n/**\n * Returns the date wrapped by this object.\n * This is lossy as Dates have millisecond rather than nanosecond precision.\n *\n * @member {Date}\n * @name module:values~FaunaTime#date\n */\nObject.defineProperty(FaunaTime.prototype, 'date', {\n  get: function() {\n    return new Date(this.value)\n  },\n})\n\nwrapToString(FaunaTime, function() {\n  return 'Time(\"' + this.value + '\")'\n})\n\n/** @ignore */\nFaunaTime.prototype.toJSON = function() {\n  return { '@ts': this.value }\n}\n\n/** FaunaDB date. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {string|Date} value\n *   If a Date, this is converted to a string, with time-of-day discarded.\n * @extends module:values~Value\n * @constructor\n */\nfunction FaunaDate(value) {\n  if (value instanceof Date) {\n    // The first 10 characters 'YYYY-MM-DD' are the date portion.\n    value = value.toISOString().slice(0, 10)\n  }\n\n  /**\n   * ISO8601 date.\n   * @type {string}\n   */\n  this.value = value\n}\n\nutil.inherits(FaunaDate, Value)\n\n/**\n * @member {Date}\n * @name module:values~FaunaDate#date\n */\nObject.defineProperty(FaunaDate.prototype, 'date', {\n  get: function() {\n    return new Date(this.value)\n  },\n})\n\nwrapToString(FaunaDate, function() {\n  return 'Date(\"' + this.value + '\")'\n})\n\n/** @ignore */\nFaunaDate.prototype.toJSON = function() {\n  return { '@date': this.value }\n}\n\n/** FaunaDB bytes. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {Uint8Array|ArrayBuffer|string} value\n *    If ArrayBuffer it's converted to Uint8Array\n *    If string it must be base64 encoded and it's converted to Uint8Array\n * @extends module:values~Value\n * @constructor\n */\nfunction Bytes(value) {\n  if (value instanceof ArrayBuffer) {\n    this.value = new Uint8Array(value)\n  } else if (typeof value === 'string') {\n    this.value = base64.toByteArray(value)\n  } else if (value instanceof Uint8Array) {\n    this.value = value\n  } else {\n    throw new errors.InvalidValue(\n      'Bytes type expect argument to be either Uint8Array|ArrayBuffer|string, got: ' +\n        stringify(value)\n    )\n  }\n}\n\nutil.inherits(Bytes, Value)\n\nwrapToString(Bytes, function() {\n  return 'Bytes(\"' + base64.fromByteArray(this.value) + '\")'\n})\n\n/** @ignore */\nBytes.prototype.toJSON = function() {\n  return { '@bytes': base64.fromByteArray(this.value) }\n}\n\n/** FaunaDB query. See the [docs](https://app.fauna.com/documentation/reference/queryapi#special-type).\n *\n * @param {any} value\n * @extends module:values~Value\n * @constructor\n */\nfunction Query(value) {\n  this.value = value\n}\n\nutil.inherits(Query, Value)\n\nwrapToString(Query, function() {\n  return 'Query(' + Expr.toString(this.value) + ')'\n})\n\n/** @ignore */\nQuery.prototype.toJSON = function() {\n  return { '@query': this.value }\n}\n\n/** @ignore */\nfunction wrapToString(type, fn) {\n  type.prototype.toString = fn\n  type.prototype.inspect = fn\n\n  if (customInspect) {\n    type.prototype[customInspect] = fn\n  }\n}\n\nmodule.exports = {\n  Value: Value,\n  Ref: Ref,\n  Native: Native,\n  SetRef: SetRef,\n  FaunaTime: FaunaTime,\n  FaunaDate: FaunaDate,\n  Bytes: Bytes,\n  Query: Query,\n}\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "'use strict'\n\nvar annotate = require('fn-annotate')\nvar deprecate = require('util-deprecate')\nvar Expr = require('./Expr')\nvar errors = require('./errors')\nvar values = require('./values')\nvar objectAssign = require('object-assign')\nvar util = require('./_util')\n\n/**\n * This module contains functions used to construct FaunaDB Queries.\n *\n * See the [FaunaDB Query API Documentation](https://app.fauna.com/documentation/reference/queryapi)\n * for per-function documentation.\n *\n * @module query\n */\n\n/**\n * @typedef {(Expr|string|number|boolean|Object)} module:query~ExprTerm\n */\n\n/**\n * @typedef {(module:query~ExprTerm|Array<module:query~ExprTerm>)} module:query~ExprArg\n */\n\n// Type helpers\n\n/**\n * If one parameter is provided, constructs a literal Ref value.\n * The string `collections/widget/123` will be equivalent to `new values.Ref('123', new values.Ref('widget', values.Native.COLLECTIONS))`\n *\n * If two are provided, constructs a Ref() function that, when evaluated, returns a Ref value.\n *\n * @param {string|module:query~ExprArg} ref|cls\n *   Alone, the ref in path form. Combined with `id`, must be a collection ref.\n * @param {module:query~ExprArg} [id]\n *   A numeric id of the given collection.\n * @return {Expr}\n */\nfunction Ref() {\n  arity.between(1, 2, arguments, Ref.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ '@ref': wrap(arguments[0]) })\n    case 2:\n      return new Expr({ ref: wrap(arguments[0]), id: wrap(arguments[1]) })\n  }\n}\n\n/**\n * @param {Uint8Array|ArrayBuffer|module:query~ExprArg} bytes\n *   A base64 encoded string or a byte array\n * @return {Expr}\n */\nfunction Bytes(bytes) {\n  arity.exact(1, arguments, Bytes.name)\n  return new values.Bytes(bytes)\n}\n\n// Basic forms\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} msg\n *   The message to send back to the client.\n * @return {Expr}\n * */\nfunction Abort(msg) {\n  arity.exact(1, arguments, Abort.name)\n  return new Expr({ abort: wrap(msg) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} timestamp\n *   An Expr that will evaluate to a Time.\n * @param {module:query~ExprArg} expr\n *   The Expr to run at the given snapshot time.\n * @return {Expr}\n * */\nfunction At(timestamp, expr) {\n  arity.exact(2, arguments, At.name)\n  return new Expr({ at: wrap(timestamp), expr: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} bindings\n *   A set of bindings to use within the given expression.\n * @param {module:query~ExprArg} in\n *   The expression to run with the given bindings.\n * @return {Expr}\n * */\nfunction Let(vars, expr) {\n  arity.exact(2, arguments, Let.name)\n  var bindings = []\n\n  if (Array.isArray(vars)) {\n    bindings = vars.map(function(item) {\n      return wrapValues(item)\n    })\n  } else {\n    bindings = Object.keys(vars)\n      .filter(function(k) {\n        return vars[k] !== undefined\n      })\n      .map(function(k) {\n        var b = {}\n        b[k] = wrap(vars[k])\n        return b\n      })\n  }\n\n  if (typeof expr === 'function') {\n    if (Array.isArray(vars)) {\n      var expr_vars = []\n\n      vars.forEach(function(item) {\n        Object.keys(item).forEach(function(name) {\n          expr_vars.push(Var(name))\n        })\n      })\n\n      expr = expr.apply(null, expr_vars)\n    } else {\n      expr = expr.apply(\n        null,\n        Object.keys(vars).map(function(name) {\n          return Var(name)\n        })\n      )\n    }\n  }\n\n  return new Expr({ let: bindings, in: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} varName\n *   The name of the bound var.\n * @return {Expr}\n * */\nfunction Var(varName) {\n  arity.exact(1, arguments, Var.name)\n  return new Expr({ var: wrap(varName) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {module:query~ExprArg} condition\n *   An expression that returns a boolean.\n * @param {module:query~ExprArg} then\n *   The expression to run if condition is true.\n * @param {module:query~ExprArg} else\n *   The expression to run if the condition is false.\n * @return {Expr}\n * */\nfunction If(condition, then, _else) {\n  arity.exact(3, arguments, If.name)\n  return new Expr({ if: wrap(condition), then: wrap(then), else: wrap(_else) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {...module:query~ExprArg} args\n *   A series of expressions to run.\n * @return {Expr}\n * */\nfunction Do() {\n  arity.min(1, arguments, Do.name)\n  var args = argsToArray(arguments)\n  return new Expr({ do: wrap(args) })\n}\n\n/** See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * @param {...module:query~ExprArg} fields\n *   The object to be escaped.\n * @return {Expr}\n * */\nvar objectFunction = function(fields) {\n  arity.exact(1, arguments, objectFunction.name)\n  return new Expr({ object: wrapValues(fields) })\n}\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Directly produces a FaunaDB Lambda expression as described in the FaunaDB reference\n * documentation.\n *\n * @param {module:query~ExprArg} var\n *   The names of the variables to be bound in this lambda expression.\n * @param {module:query~ExprArg} expr\n *   The lambda expression.\n * @return {Expr}\n */\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Takes a Javascript function, and will transform it\n * into the appropriate FaunaDB query. For example:\n *\n * ```\n * Lambda(function(a) { return Add(a, a); });\n * // Returns { lambda: 'a', expr: { add: [{ var: a }, { var: a }] } }\n * ```\n * Note that the driver will handle wrapping all usages of the lambda's bound\n * variables with the {@link modules:query~Var} function.\n *\n * @param {function} func\n *   Takes the provided function and produces the appropriate FaunaDB query expression.\n * @return {Expr}\n *\n */ function Lambda() {\n  arity.between(1, 2, arguments, Lambda.name)\n  switch (arguments.length) {\n    case 1:\n      var value = arguments[0]\n      if (typeof value === 'function') {\n        return _lambdaFunc(value)\n      } else if (\n        value instanceof Expr ||\n        util.checkInstanceHasProperty(value, '_isFaunaExpr')\n      ) {\n        return value\n      } else {\n        throw new errors.InvalidValue(\n          'Lambda function takes either a Function or an Expr.'\n        )\n      }\n    case 2:\n      var var_name = arguments[0]\n      var expr = arguments[1]\n\n      return _lambdaExpr(var_name, expr)\n  }\n}\n\n/**\n * @private\n */\nfunction _lambdaFunc(func) {\n  var vars = annotate(func)\n  switch (vars.length) {\n    case 0:\n      throw new errors.InvalidValue(\n        'Provided Function must take at least 1 argument.'\n      )\n    case 1:\n      return _lambdaExpr(vars[0], func(Var(vars[0])))\n    default:\n      return _lambdaExpr(\n        vars,\n        func.apply(\n          null,\n          vars.map(function(name) {\n            return Var(name)\n          })\n        )\n      )\n  }\n}\n\n/**\n * @private\n */\nfunction _lambdaExpr(var_name, expr) {\n  return new Expr({ lambda: wrap(var_name), expr: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Invokes a given function passing in the provided arguments\n *\n * ```\n * Call(Ref(\"functions/a_function\"), 1, 2)\n * ```\n *\n * @param {module:query~ExprArg} ref\n *   The ref of the UserDefinedFunction to call\n * @param {...module:query~ExprArg} args\n *   A series of values to pass as arguments to the UDF.\n * @return {Expr}\n * */\nfunction Call(ref) {\n  arity.min(1, arguments, Call.name)\n  var args = argsToArray(arguments)\n  args.shift()\n  return new Expr({ call: wrap(ref), arguments: wrap(varargs(args)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#basic-forms).\n *\n * Constructs a `@query` type using the Lambda() or a function.\n *\n * ```\n * Query(Lambda(['a', 'b'], Add(Var('a'), Var('b'))))\n * Query(function (a, b) { return Add(a, b) })\n * ```\n *\n * @param {module:query~ExprArg|function} lambda\n *   A function to escape as a query.\n * @return {Expr}\n * */\nfunction Query(lambda) {\n  arity.exact(1, arguments, Query.name)\n  return new Expr({ query: wrap(lambda) })\n}\n\n// Collection functions\n\n/** See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection to be mapped over.\n * @param {module:query~ExprArg|function} lambda\n *   A function to be called for each element of the collection.\n * @return {Expr}\n * */\nfunction Map(collection, lambda_expr) {\n  arity.exact(2, arguments, Map.name)\n  return new Expr({ map: wrap(lambda_expr), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection to be iterated over.\n * @param {module:query~ExprArg|function} lambda\n *   A function to be called for each element of the collection.\n * @return {Expr}\n * */\nfunction Foreach(collection, lambda_expr) {\n  arity.exact(2, arguments, Foreach.name)\n  return new Expr({ foreach: wrap(lambda_expr), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection to be filtered.\n * @param {module:query~ExprArg|function} lambda\n *   A function that returns a boolean used to filter unwanted values.\n * @return {Expr}\n * */\nfunction Filter(collection, lambda_expr) {\n  arity.exact(2, arguments, Filter.name)\n  return new Expr({ filter: wrap(lambda_expr), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} number\n *   An expression resulting in the number of elements to take from the collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n * */\nfunction Take(number, collection) {\n  arity.exact(2, arguments, Take.name)\n  return new Expr({ take: wrap(number), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} number\n *   An expression resulting in the number of elements to drop from the collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n * */\nfunction Drop(number, collection) {\n  arity.exact(2, arguments, Drop.name)\n  return new Expr({ drop: wrap(number), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} elements\n *   An expression resulting in a collection of elements to prepend to the given collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction Prepend(elements, collection) {\n  arity.exact(2, arguments, Prepend.name)\n  return new Expr({ prepend: wrap(elements), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} elements\n *   An expression resulting in a collection of elements to append to the given collection.\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction Append(elements, collection) {\n  arity.exact(2, arguments, Append.name)\n  return new Expr({ append: wrap(elements), collection: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction IsEmpty(collection) {\n  arity.exact(1, arguments, IsEmpty.name)\n  return new Expr({ is_empty: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#collections).\n *\n * @param {module:query~ExprArg} collection\n *   An expression resulting in a collection.\n * @return {Expr}\n */\nfunction IsNonEmpty(collection) {\n  arity.exact(1, arguments, IsNonEmpty.name)\n  return new Expr({ is_nonempty: wrap(collection) })\n}\n\n// Type check functions\n\n/**\n * Check if the expression is a number.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isnumber\">IsNumber</a>\n */\nfunction IsNumber(expr) {\n  arity.exact(1, arguments, IsNumber.name)\n  return new Expr({ is_number: wrap(expr) })\n}\n\n/**\n * Check if the expression is a double.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdouble\">IsDouble</a>\n */\nfunction IsDouble(expr) {\n  arity.exact(1, arguments, IsDouble.name)\n  return new Expr({ is_double: wrap(expr) })\n}\n\n/**\n * Check if the expression is an integer.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isinteger\">IsInteger</a>\n */\nfunction IsInteger(expr) {\n  arity.exact(1, arguments, IsInteger.name)\n  return new Expr({ is_integer: wrap(expr) })\n}\n\n/**\n * Check if the expression is a boolean.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isboolean\">IsBoolean</a>\n */\nfunction IsBoolean(expr) {\n  arity.exact(1, arguments, IsBoolean.name)\n  return new Expr({ is_boolean: wrap(expr) })\n}\n\n/**\n * Check if the expression is null.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isnull\">IsNull</a>\n */\nfunction IsNull(expr) {\n  arity.exact(1, arguments, IsNull.name)\n  return new Expr({ is_null: wrap(expr) })\n}\n\n/**\n * Check if the expression is a byte array.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isbytes\">IsBytes</a>\n */\nfunction IsBytes(expr) {\n  arity.exact(1, arguments, IsBytes.name)\n  return new Expr({ is_bytes: wrap(expr) })\n}\n\n/**\n * Check if the expression is a timestamp.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/istimestamp\">IsTimestamp</a>\n */\nfunction IsTimestamp(expr) {\n  arity.exact(1, arguments, IsTimestamp.name)\n  return new Expr({ is_timestamp: wrap(expr) })\n}\n\n/**\n * Check if the expression is a date.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdate\">IsDate</a>\n */\nfunction IsDate(expr) {\n  arity.exact(1, arguments, IsDate.name)\n  return new Expr({ is_date: wrap(expr) })\n}\n\n/**\n * Check if the expression is a string.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isstring\">IsString</a>\n */\nfunction IsString(expr) {\n  arity.exact(1, arguments, IsString.name)\n  return new Expr({ is_string: wrap(expr) })\n}\n\n/**\n * Check if the expression is an array.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isarray\">IsArray</a>\n */\nfunction IsArray(expr) {\n  arity.exact(1, arguments, IsArray.name)\n  return new Expr({ is_array: wrap(expr) })\n}\n\n/**\n * Check if the expression is an object.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isobject\">IsObject</a>\n */\nfunction IsObject(expr) {\n  arity.exact(1, arguments, IsObject.name)\n  return new Expr({ is_object: wrap(expr) })\n}\n\n/**\n * Check if the expression is a reference.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isref\">IsRef</a>\n */\nfunction IsRef(expr) {\n  arity.exact(1, arguments, IsRef.name)\n  return new Expr({ is_ref: wrap(expr) })\n}\n\n/**\n * Check if the expression is a set.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isset\">IsSet</a>\n */\nfunction IsSet(expr) {\n  arity.exact(1, arguments, IsSet.name)\n  return new Expr({ is_set: wrap(expr) })\n}\n\n/**\n * Check if the expression is a document (either a reference or an instance).\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdoc\">IsDoc</a>\n */\nfunction IsDoc(expr) {\n  arity.exact(1, arguments, IsDoc.name)\n  return new Expr({ is_doc: wrap(expr) })\n}\n\n/**\n * Check if the expression is a lambda.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/islambda\">IsLambda</a>\n */\nfunction IsLambda(expr) {\n  arity.exact(1, arguments, IsLambda.name)\n  return new Expr({ is_lambda: wrap(expr) })\n}\n\n/**\n * Check if the expression is a collection.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/iscollection\">IsCollection</a>\n */\nfunction IsCollection(expr) {\n  arity.exact(1, arguments, IsCollection.name)\n  return new Expr({ is_collection: wrap(expr) })\n}\n\n/**\n * Check if the expression is a database.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isdatabase\">IsDatabase</a>\n */\nfunction IsDatabase(expr) {\n  arity.exact(1, arguments, IsDatabase.name)\n  return new Expr({ is_database: wrap(expr) })\n}\n\n/**\n * Check if the expression is an index.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isindex\">IsIndex</a>\n */\nfunction IsIndex(expr) {\n  arity.exact(1, arguments, IsIndex.name)\n  return new Expr({ is_index: wrap(expr) })\n}\n\n/**\n * Check if the expression is a function.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isfunction\">IsFunction</a>\n */\nfunction IsFunction(expr) {\n  arity.exact(1, arguments, IsFunction.name)\n  return new Expr({ is_function: wrap(expr) })\n}\n\n/**\n * Check if the expression is a key.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/iskey\">IsKey</a>\n */\nfunction IsKey(expr) {\n  arity.exact(1, arguments, IsKey.name)\n  return new Expr({ is_key: wrap(expr) })\n}\n\n/**\n * Check if the expression is a token.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/istoken\">IsToken</a>\n */\nfunction IsToken(expr) {\n  arity.exact(1, arguments, IsToken.name)\n  return new Expr({ is_token: wrap(expr) })\n}\n\n/**\n * Check if the expression is credentials.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/iscredentials\">IsCredentials</a>\n */\nfunction IsCredentials(expr) {\n  arity.exact(1, arguments, IsCredentials.name)\n  return new Expr({ is_credentials: wrap(expr) })\n}\n\n/**\n * Check if the expression is a role.\n *\n * @param {module:query~ExprArg} expr\n *   The expression to check\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/isrole\">IsRole</a>\n */\nfunction IsRole(expr) {\n  arity.exact(1, arguments, IsRole.name)\n  return new Expr({ is_role: wrap(expr) })\n}\n\n// Read functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n *\n * @param {module:query~ExprArg} ref\n *   An expression resulting in either a Ref or SetRef.\n * @param {?module:query~ExprArg} ts\n *   The snapshot time at which to get the document.\n * @return {Expr}\n */\nfunction Get(ref, ts) {\n  arity.between(1, 2, arguments, Get.name)\n  ts = util.defaults(ts, null)\n\n  return new Expr(params({ get: wrap(ref) }, { ts: wrap(ts) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n *\n * @param {module:query~ExprArg} secret\n *   The key or token secret to lookup.\n * @return {Expr}\n */\nfunction KeyFromSecret(secret) {\n  arity.exact(1, arguments, KeyFromSecret.name)\n  return new Expr({ key_from_secret: wrap(secret) })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/reduce).\n *\n * @param {module:query~ExprArg} lambda\n *   The accumulator function\n * @param {module:query~ExprArg} initial\n *   The initial value\n * @param {module:query~ExprArg} collection\n *   The colleciton to be reduced\n * @return {Expr}\n */\nfunction Reduce(lambda, initial, collection) {\n  arity.exact(3, arguments, Reduce.name)\n  return new Expr({\n    reduce: wrap(lambda),\n    initial: wrap(initial),\n    collection: wrap(collection),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n * You may want to utilize {@link Client#paginate} to obtain a {@link PageHelper},\n * rather than using this query function directly.\n *\n * @param {module:query~ExprArg} set\n *   An expression resulting in a SetRef to page over.\n * @param {?Object} opts\n *  An object representing options for pagination.\n *    - size: Maximum number of results to return.\n *    - after: Return the next page of results after this cursor (inclusive).\n *    - before: Return the previous page of results before this cursor (exclusive).\n *    - sources: If true, include the source sets along with each element.\n * @return {Expr}\n */\nfunction Paginate(set, opts) {\n  arity.between(1, 2, arguments, Paginate.name)\n  opts = util.defaults(opts, {})\n\n  return new Expr(objectAssign({ paginate: wrap(set) }, wrapValues(opts)))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n *\n * @param {module:query~ExprArg} ref\n *   An expression resulting in a Ref.\n * @param {?module:query~ExprArg} ts\n *   The snapshot time at which to check for the document's existence.\n * @return {Expr}\n */\nfunction Exists(ref, ts) {\n  arity.between(1, 2, arguments, Exists.name)\n  ts = util.defaults(ts, null)\n\n  return new Expr(params({ exists: wrap(ref) }, { ts: wrap(ts) }))\n}\n\n// Write functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref (usually a CollectionRef) to create.\n * @param {?module:query~ExprArg} params\n *   An object representing the parameters of the document.\n * @return {Expr}\n */\nfunction Create(collection_ref, params) {\n  arity.between(1, 2, arguments, Create.name)\n  return new Expr({ create: wrap(collection_ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to update.\n * @param {module:query~ExprArg} params\n *   An object representing the parameters of the document.\n * @return {Expr}\n */\nfunction Update(ref, params) {\n  arity.exact(2, arguments, Update.name)\n  return new Expr({ update: wrap(ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to replace.\n * @param {module:query~ExprArg} params\n *   An object representing the parameters of the document.\n * @return {Expr}\n */\nfunction Replace(ref, params) {\n  arity.exact(2, arguments, Replace.name)\n  return new Expr({ replace: wrap(ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to delete.\n * @return {Expr}\n */\nfunction Delete(ref) {\n  arity.exact(1, arguments, Delete.name)\n  return new Expr({ delete: wrap(ref) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to insert against\n * @param {module:query~ExprArg} ts\n *   The valid time of the inserted event\n * @param {module:query~ExprArg} action\n *   Whether the event should be a Create, Update, or Delete.\n * @param {module:query~ExprArg} params\n *   If this is a Create or Update, the parameters of the document.\n * @return {Expr}\n */\nfunction Insert(ref, ts, action, params) {\n  arity.exact(4, arguments, Insert.name)\n  return new Expr({\n    insert: wrap(ref),\n    ts: wrap(ts),\n    action: wrap(action),\n    params: wrap(params),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref of the document whose event should be removed.\n * @param {module:query~ExprArg} ts\n *   The valid time of the event.\n * @param {module:query~ExprArg} action\n *   The event action (Create, Update, or Delete) that should be removed.\n * @return {Expr}\n */\nfunction Remove(ref, ts, action) {\n  arity.exact(3, arguments, Remove.name)\n  return new Expr({ remove: wrap(ref), ts: wrap(ts), action: wrap(action) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a class.\n *     - name (required): the name of the class to create\n * @return {Expr}\n *\n * @deprecated use CreateCollection instead\n */\nfunction CreateClass(params) {\n  arity.exact(1, arguments, CreateClass.name)\n  return new Expr({ create_class: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a collection.\n *     - name (required): the name of the collection to create\n * @return {Expr}\n */\nfunction CreateCollection(params) {\n  arity.exact(1, arguments, CreateCollection.name)\n  return new Expr({ create_collection: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a database.\n *     - name (required): the name of the database to create\n * @return {Expr}\n */\nfunction CreateDatabase(params) {\n  arity.exact(1, arguments, CreateDatabase.name)\n  return new Expr({ create_database: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create an index.\n *     - name (required): the name of the index to create\n *     - source: One or more source objects describing source collections and (optional) field bindings.\n *     - terms: An array of term objects describing the fields to be indexed. Optional\n *     - values: An array of value objects describing the fields to be covered. Optional\n *     - unique: If true, maintains a uniqueness constraint on combined terms and values. Optional\n *     - partitions: The number of sub-partitions within each term. Optional\n * @return {Expr}\n */\nfunction CreateIndex(params) {\n  arity.exact(1, arguments, CreateIndex.name)\n  return new Expr({ create_index: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new key\n *     - database: Ref of the database the key will be scoped to. Optional.\n *     - role: The role of the new key\n * @return {Expr}\n */\nfunction CreateKey(params) {\n  arity.exact(1, arguments, CreateKey.name)\n  return new Expr({ create_key: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new user defined function.\n *     - name: The name of the function\n *     - body: A lambda function (escaped with `query`).\n * @return {Expr}\n */\nfunction CreateFunction(params) {\n  arity.exact(1, arguments, CreateFunction.name)\n  return new Expr({ create_function: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new role.\n *     - name: The name of the role\n *     - privileges: An array of privileges\n *     - membership: An array of membership bindings\n * @return {Expr}\n */\nfunction CreateRole(params) {\n  arity.exact(1, arguments, CreateRole.name)\n  return new Expr({ create_role: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#write-functions).\n *\n * @param {module:query~ExprArg} params\n *   An object of parameters used to create a new access provider.\n *     - name: A valid schema name\n *     - issuer: A unique string\n *     - jwks_uri: A valid HTTPS URI\n *     - roles: An array of role/predicate pairs where the predicate returns a boolean.\n *                   The array can also contain Role references.\n * @return {Expr}\n */\nfunction CreateAccessProvider(params) {\n  arity.exact(1, arguments, CreateAccessProvider.name)\n  return new Expr({ create_access_provider: wrap(params) })\n}\n\n// Sets\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref of the document for which to retrieve the singleton set.\n * @return {Expr}\n */\nfunction Singleton(ref) {\n  arity.exact(1, arguments, Singleton.name)\n  return new Expr({ singleton: wrap(ref) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} ref\n *   A Ref or SetRef to retrieve an event set from.\n * @return {Expr}\n */\nfunction Events(ref_set) {\n  arity.exact(1, arguments, Events.name)\n  return new Expr({ events: wrap(ref_set) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} index\n *   The Ref of the index to match against.\n * @param {...module:query~ExprArg} terms\n *   A list of terms used in the match.\n * @return {Expr}\n */\nfunction Match(index) {\n  arity.min(1, arguments, Match.name)\n  var args = argsToArray(arguments)\n  args.shift()\n  return new Expr({ match: wrap(index), terms: wrap(varargs(args)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {...module:query~ExprArg} sets\n *   A list of SetRefs to union together.\n * @return {Expr}\n */\nfunction Union() {\n  arity.min(1, arguments, Union.name)\n  return new Expr({ union: wrap(varargs(arguments)) })\n}\n\n/**\n * Merge two or more objects..\n *\n * @param {...module:query~ExprArg} merge merge the first object.\n * @param {...module:query~ExprArg} _with the second object or a list of objects\n * @param {...module:query~ExprArg} lambda a lambda to resolve possible conflicts\n * @return {Expr}\n * */\nfunction Merge(merge, _with, lambda) {\n  arity.between(2, 3, arguments, Merge.name)\n  return new Expr(\n    params({ merge: wrap(merge), with: wrap(_with) }, { lambda: wrap(lambda) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {...module:query~ExprArg} sets\n *   A list of SetRefs to intersect.\n * @return {Expr}\n * */\nfunction Intersection() {\n  arity.min(1, arguments, Intersection.name)\n  return new Expr({ intersection: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {...module:query~ExprArg} sets\n *   A list of SetRefs to diff.\n * @return {Expr}\n * */\nfunction Difference() {\n  arity.min(1, arguments, Difference.name)\n  return new Expr({ difference: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} set\n *   A SetRef to remove duplicates from.\n * @return {Expr}\n * */\nfunction Distinct(set) {\n  arity.exact(1, arguments, Distinct.name)\n  return new Expr({ distinct: wrap(set) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#sets).\n *\n * @param {module:query~ExprArg} source\n *   A SetRef of the source set\n * @param {module:query~ExprArg|function} target\n *   A Lambda that will accept each element of the source Set and return a Set\n * @return {Expr}\n */\nfunction Join(source, target) {\n  arity.exact(2, arguments, Join.name)\n  return new Expr({ join: wrap(source), with: wrap(target) })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/range).\n *\n * @param {module:query~ExprArg} set\n *   A SetRef of the source set\n * @param {module:query~ExprArg} from\n *   The lower bound\n * @param {module:query~ExprArg} to\n *   The upper bound\n * @return {Expr}\n */\nfunction Range(set, from, to) {\n  arity.exact(3, arguments, Range.name)\n  return new Expr({ range: wrap(set), from: wrap(from), to: wrap(to) })\n}\n\n// Authentication\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @param {module:query~ExprArg} ref\n *   A Ref with credentials to authenticate against\n * @param {module:query~ExprArg} params\n *   An object of parameters to pass to the login function\n *     - password: The password used to login\n * @return {Expr}\n * */\nfunction Login(ref, params) {\n  arity.exact(2, arguments, Login.name)\n  return new Expr({ login: wrap(ref), params: wrap(params) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @param {module:query~ExprArg} delete_tokens\n *   If true, log out all tokens associated with the current session.\n * @return {Expr}\n */\nfunction Logout(delete_tokens) {\n  arity.exact(1, arguments, Logout.name)\n  return new Expr({ logout: wrap(delete_tokens) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @param {module:query~ExprArg} ref\n *   The Ref to check the password against.\n * @param {module:query~ExprArg} password\n *   The credentials password to check.\n * @return {Expr}\n */\nfunction Identify(ref, password) {\n  arity.exact(2, arguments, Identify.name)\n  return new Expr({ identify: wrap(ref), password: wrap(password) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction Identity() {\n  arity.exact(0, arguments, Identity.name)\n  return new Expr({ identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction CurrentIdentity() {\n  arity.exact(0, arguments, CurrentIdentity.name)\n  return new Expr({ current_identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction HasIdentity() {\n  arity.exact(0, arguments, HasIdentity.name)\n  return new Expr({ has_identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\n\nfunction HasCurrentIdentity() {\n  arity.exact(0, arguments, HasCurrentIdentity.name)\n  return new Expr({ has_current_identity: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction CurrentToken() {\n  arity.exact(0, arguments, CurrentToken.name)\n  return new Expr({ current_token: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#authentication).\n *\n * @return {Expr}\n */\nfunction HasCurrentToken() {\n  arity.exact(0, arguments, HasCurrentToken.name)\n  return new Expr({ has_current_token: null })\n}\n\n// String functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} strings - A list of strings to concatenate.\n * @param {string} separator  - The separator to use between each string.\n * @return {string} a single combined string\n */\nfunction Concat(strings, separator) {\n  arity.min(1, arguments, Concat.name)\n  separator = util.defaults(separator, null)\n  return new Expr(\n    params({ concat: wrap(strings) }, { separator: wrap(separator) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} string - The string to casefold.\n * @param {string} normalizer - The algorithm to use. One of: NFKCCaseFold, NFC, NFD, NFKC, NFKD.\n * @return {string} a normalized string\n */\nfunction Casefold(string, normalizer) {\n  arity.min(1, arguments, Casefold.name)\n  return new Expr(\n    params({ casefold: wrap(string) }, { normalizer: wrap(normalizer) })\n  )\n}\n\n/**\n * Returns true if the string contains the given substring, or false if otherwise\n *\n * @param {string} value  - the string to evaluate\n * @param {string} search - the substring to search for\n * @return {boolean}      - was the search result found\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/containsstr\">FaunaDB ContainsStr Function</a>\n */\nfunction ContainsStr(value, search) {\n  arity.exact(2, arguments, ContainsStr.name)\n  return new Expr({ containsstr: wrap(value), search: wrap(search) })\n}\n\n/**\n * Returns true if the string contains the given pattern, or false if otherwise\n *\n * @param {string} value   - the string to evaluate\n * @param {string} pattern - the pattern to search for\n * @return {boolean}       - was the regex search result found\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/containsstrregex\">FaunaDB ContainsStrRegex Function</a>\n */\nfunction ContainsStrRegex(value, pattern) {\n  arity.exact(2, arguments, ContainsStrRegex.name)\n  return new Expr({ containsstrregex: wrap(value), pattern: wrap(pattern) })\n}\n\n/**\n * Returns true if the string starts with the given prefix value, or false if otherwise\n *\n * @param {string} value   - the string to evaluate\n * @param {string} search  - the prefix to search for\n * @return {boolean}       - does `value` start with `search`\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/startswith\">FaunaDB StartsWith Function</a>\n */\nfunction StartsWith(value, search) {\n  arity.exact(2, arguments, StartsWith.name)\n  return new Expr({ startswith: wrap(value), search: wrap(search) })\n}\n\n/**\n * Returns true if the string ends with the given suffix value, or false if otherwise\n *\n * @param {string} value   - the string to evaluate\n * @param {string} search  - the suffix to search for\n * @return {boolean}       - does `value` end with `search`\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/endswith\">FaunaDB EndsWith Function</a>\n */\nfunction EndsWith(value, search) {\n  arity.exact(2, arguments, EndsWith.name)\n  return new Expr({ endswith: wrap(value), search: wrap(search) })\n}\n\n/**\n * It takes a string and returns a regex which matches the input string verbatim.\n *\n * @param value      - the string to analyze\n * @return {string}  - a regex which matches the input string verbatim\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/regexescape\">FaunaDB RegexEscape Function</a>\n */\nfunction RegexEscape(value) {\n  arity.exact(1, arguments, RegexEscape.name)\n  return new Expr({ regexescape: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} find - Find the first position of this string in the search string\n * @param {int} start - An optional start offset into the search string\n * @return {int} location of the found string or -1 if not found\n */\nfunction FindStr(value, find, start) {\n  arity.between(2, 3, arguments, FindStr.name)\n  start = util.defaults(start, null)\n  return new Expr(\n    params({ findstr: wrap(value), find: wrap(find) }, { start: wrap(start) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} pattern - Find the first position of this pattern in the search string using a java regular expression syntax\n * @param {int} start - An optional start offset into the search string\n * @param {int} numResults - An optional number of results to return, max 1024\n * @return {Array} an array of object describing where the search pattern was located\n */\nfunction FindStrRegex(value, pattern, start, numResults) {\n  arity.between(2, 4, arguments, FindStrRegex.name)\n  start = util.defaults(start, null)\n  return new Expr(\n    params(\n      { findstrregex: wrap(value), pattern: wrap(pattern) },\n      { start: wrap(start), num_results: wrap(numResults) }\n    )\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to calculate the length in codepoints.\n * @return {int} the length of the string in codepoints\n */\nfunction Length(value) {\n  arity.exact(1, arguments, Length.name)\n  return new Expr({ length: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to LowerCase.\n * @return {string} the string converted to lowercase\n */\nfunction LowerCase(value) {\n  arity.exact(1, arguments, LowerCase.name)\n  return new Expr({ lowercase: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to trim leading white space.\n * @return {string} the string with leading white space removed\n */\nfunction LTrim(value) {\n  arity.exact(1, arguments, LTrim.name)\n  return new Expr({ ltrim: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {module:query~ExprArg} terms\n *   A document from which to produce ngrams.\n * @param {?Object} opts\n *   An object of options\n *     - min: The minimum ngram size.\n *     - max: The maximum ngram size.\n * @return {Array|Value}\n */\nfunction NGram(terms, min, max) {\n  arity.between(1, 3, arguments, NGram.name)\n  min = util.defaults(min, null)\n  max = util.defaults(max, null)\n\n  return new Expr(\n    params({ ngram: wrap(terms) }, { min: wrap(min), max: wrap(max) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to repeat.\n * @param {int} number - The number of times to repeat the string\n * @return {string} a string which was repeated\n */\nfunction Repeat(value, number) {\n  arity.between(1, 2, arguments, Repeat.name)\n  number = util.defaults(number, null)\n  return new Expr(params({ repeat: wrap(value) }, { number: wrap(number) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} find - The string to find in the search string\n * @param {string} replace - The string to replace in the search string\n * @return {String} all the occurrences of find substituted with replace string\n */\nfunction ReplaceStr(value, find, replace) {\n  arity.exact(3, arguments, ReplaceStr.name)\n  return new Expr({\n    replacestr: wrap(value),\n    find: wrap(find),\n    replace: wrap(replace),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - A string to search.\n * @param {string} pattern - The pattern to find in the search string using a java regular expression syntax\n * @param {string} replace - The string to replace in the search string\n * @param {boolean} first - Replace all or just the first\n * @return {string} all the occurrences of find pattern substituted with replace string\n */\nfunction ReplaceStrRegex(value, pattern, replace, first) {\n  arity.between(3, 4, arguments, ReplaceStrRegex.name)\n  first = util.defaults(first, null)\n  return new Expr(\n    params(\n      {\n        replacestrregex: wrap(value),\n        pattern: wrap(pattern),\n        replace: wrap(replace),\n      },\n      { first: wrap(first) }\n    )\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to remove white space from the end.\n * @return {string} the string with trailing whitespaces removed\n */\nfunction RTrim(value) {\n  arity.exact(1, arguments, RTrim.name)\n  return new Expr({ rtrim: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {int} num - The string of N Space(s).\n * @return {string} a string with spaces\n */\nfunction Space(num) {\n  arity.exact(1, arguments, Space.name)\n  return new Expr({ space: wrap(num) })\n}\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value  The string to SubString.\n * @param {int} start  The position the first character of the return string begins at\n * @param {int} length  An optional length, if omitted then returns to the end of string\n * @return {string}\n */\nfunction SubString(value, start, length) {\n  arity.between(1, 3, arguments, SubString.name)\n  start = util.defaults(start, null)\n  length = util.defaults(length, null)\n  return new Expr(\n    params(\n      { substring: wrap(value) },\n      { start: wrap(start), length: wrap(length) }\n    )\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to TitleCase.\n * @return {string}  A string converted to titlecase\n */\nfunction TitleCase(value) {\n  arity.exact(1, arguments, TitleCase.name)\n  return new Expr({ titlecase: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to Trim.\n * @return {string} a string with leading and trailing whitespace removed\n */\nfunction Trim(value) {\n  arity.exact(1, arguments, Trim.name)\n  return new Expr({ trim: wrap(value) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#string-functions).\n *\n * @param {string} value - The string to Uppercase.\n * @return {string} An uppercase string\n */\nfunction UpperCase(value) {\n  arity.exact(1, arguments, UpperCase.name)\n  return new Expr({ uppercase: wrap(value) })\n}\n\n/**\n * Format values into a string.\n *\n * @param  {string}  string string with format specifiers\n * @param  {array}   values list of values to format\n * @return {string}         a string\n */\nfunction Format(string) {\n  arity.min(1, arguments, Format.name)\n  var args = argsToArray(arguments)\n  args.shift()\n  return new Expr({ format: wrap(string), values: wrap(varargs(args)) })\n}\n\n// Time and date functions\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#time-and-date).\n *\n * @param {module:query~ExprArg} string\n *   A string to converted to a time object.\n * @return {Expr}\n */\nfunction Time(string) {\n  arity.exact(1, arguments, Time.name)\n  return new Expr({ time: wrap(string) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#time-and-date).\n *\n * @param {module:query~ExprArg} number\n *   The number of `unit`s from Epoch\n * @param {module:query~ExprArg} unit\n *   The unit of `number`. One of second, millisecond, microsecond, nanosecond.\n * @return {Expr}\n */\nfunction Epoch(number, unit) {\n  arity.exact(2, arguments, Epoch.name)\n  return new Expr({ epoch: wrap(number), unit: wrap(unit) })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/timeadd).\n *\n * Returns a new time or date with the offset in terms of the unit\n * added.\n *\n * @param base the base time or data\n * @param offset the number of units\n * @param unit the unit type\n * @return {Expr}\n */\nfunction TimeAdd(base, offset, unit) {\n  arity.exact(3, arguments, TimeAdd.name)\n  return new Expr({\n    time_add: wrap(base),\n    offset: wrap(offset),\n    unit: wrap(unit),\n  })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/timesubtract).\n *\n * Returns a new time or date with the offset in terms of the unit\n * subtracted.\n *\n * @param base the base time or data\n * @param offset the number of units\n * @param unit the unit type\n * @return {Expr}\n */\nfunction TimeSubtract(base, offset, unit) {\n  arity.exact(3, arguments, TimeSubtract.name)\n  return new Expr({\n    time_subtract: wrap(base),\n    offset: wrap(offset),\n    unit: wrap(unit),\n  })\n}\n\n/**\n * See the [docs](https://docs.fauna.com/fauna/current/api/fql/functions/timediff).\n *\n * Returns the number of intervals in terms of the unit between\n * two times or dates. Both start and finish must be of the same\n * type.\n *\n * @param start the starting time or date, inclusive\n * @param finish the ending time or date, exclusive\n * @param unit the unit type\n * @return {Expr}\n */\nfunction TimeDiff(start, finish, unit) {\n  arity.exact(3, arguments, TimeDiff.name)\n  return new Expr({\n    time_diff: wrap(start),\n    other: wrap(finish),\n    unit: wrap(unit),\n  })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#time-and-date).\n *\n * @param {module:query~ExprArg} string\n *   A string to convert to a Date object\n * @return {Expr}\n */\nfunction Date(string) {\n  arity.exact(1, arguments, Date.name)\n  return new Expr({ date: wrap(string) })\n}\n\n/**\n * Returns the current snapshot time.\n *\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/now\">Now function</a>\n */\nfunction Now() {\n  arity.exact(0, arguments, Now.name)\n  return new Expr({ now: wrap(null) })\n}\n\n// Miscellaneous functions\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @deprecated use NewId instead\n * @return {Expr}\n */\nfunction NextId() {\n  arity.exact(0, arguments, NextId.name)\n  return new Expr({ next_id: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @return {Expr}\n */\nfunction NewId() {\n  arity.exact(0, arguments, NewId.name)\n  return new Expr({ new_id: null })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the database.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the database's scope.\n * @return {Expr}\n */\nfunction Database(name, scope) {\n  arity.between(1, 2, arguments, Database.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ database: wrap(name) })\n    case 2:\n      return new Expr({ database: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the index.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the index's scope.\n * @return {Expr}\n */\nfunction Index(name, scope) {\n  arity.between(1, 2, arguments, Index.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ index: wrap(name) })\n    case 2:\n      return new Expr({ index: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the class.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the class's scope.\n * @return {Expr}\n *\n * @deprecated Class is deprecated, use Collection instead\n */\nfunction Class(name, scope) {\n  arity.between(1, 2, arguments, Class.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ class: wrap(name) })\n    case 2:\n      return new Expr({ class: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the collection.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the collection's scope.\n * @return {Expr}\n */\nfunction Collection(name, scope) {\n  arity.between(1, 2, arguments, Collection.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ collection: wrap(name) })\n    case 2:\n      return new Expr({ collection: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the user defined function.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the user defined function's scope.\n * @return {Expr}\n */\nfunction FunctionFn(name, scope) {\n  arity.between(1, 2, arguments, FunctionFn.name)\n  switch (arguments.length) {\n    case 1:\n      return new Expr({ function: wrap(name) })\n    case 2:\n      return new Expr({ function: wrap(name), scope: wrap(scope) })\n  }\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} name\n *   The name of the role.\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the role's scope.\n * @return {Expr}\n */\nfunction Role(name, scope) {\n  arity.between(1, 2, arguments, Role.name)\n  scope = util.defaults(scope, null)\n  return new Expr(params({ role: wrap(name) }, { scope: wrap(scope) }))\n}\n\n/**\n *\n * @param {module:query~ExprArg} scope\n *   The Ref of the database set's scope.\n * @return {Expr}\n */\nfunction AccessProviders(scope) {\n  arity.max(1, arguments, AccessProviders.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ access_providers: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `classes` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the class set's scope.\n * @return {Expr}\n */\nfunction Classes(scope) {\n  arity.max(1, arguments, Classes.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ classes: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `collections` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the collection set's scope.\n * @return {Expr}\n */\nfunction Collections(scope) {\n  arity.max(1, arguments, Collections.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ collections: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `databases` functions that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the database set's scope.\n * @return {Expr}\n */\nfunction Databases(scope) {\n  arity.max(1, arguments, Databases.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ databases: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs an `indexes` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the index set's scope.\n * @return {Expr}\n */\nfunction Indexes(scope) {\n  arity.max(1, arguments, Indexes.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ indexes: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `functions` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the user defined function set's scope.\n * @return {Expr}\n */\nfunction Functions(scope) {\n  arity.max(1, arguments, Functions.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ functions: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `roles` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the role set's scope.\n * @return {Expr}\n */\nfunction Roles(scope) {\n  arity.max(1, arguments, Roles.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ roles: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `keys` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the key set's scope.\n * @return {Expr}\n */\nfunction Keys(scope) {\n  arity.max(1, arguments, Keys.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ keys: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `tokens` function that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the token set's scope.\n * @return {Expr}\n */\nfunction Tokens(scope) {\n  arity.max(1, arguments, Tokens.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ tokens: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * Constructs a `credentials` functions that, when evaluated, returns a Ref value.\n *\n * @param {module:query~ExprArg} [scope]\n *   The Ref of the credential set's scope.\n * @return {Expr}\n */\nfunction Credentials(scope) {\n  arity.max(1, arguments, Credentials.name)\n  scope = util.defaults(scope, null)\n  return new Expr({ credentials: wrap(scope) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of expressions to check for equivalence.\n * @return {Expr}\n */\nfunction Equals() {\n  arity.min(1, arguments, Equals.name)\n  return new Expr({ equals: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to check for the existence of.\n * @param {module:query~ExprArg} in\n *   An object to search against.\n * @return {Expr}\n *\n * @deprecated use ContainsPath instead\n */\nfunction Contains(path, _in) {\n  arity.exact(2, arguments, Contains.name)\n  return new Expr({ contains: wrap(path), in: wrap(_in) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} value\n *   Represent the value we want to search for.\n * @param {module:query~ExprArg} in\n *   An object we will search for the value passed in.\n * @return {Expr}\n */\nfunction ContainsValue(value, _in) {\n  arity.exact(2, arguments, ContainsValue.name)\n  return new Expr({ contains_value: wrap(value), in: wrap(_in) })\n}\n\n/**\n * @param {string} field\n *   A field name we want to confirm exists.\n * @param {module:query~ExprArg} obj\n *   An object to search against.\n * @return {Expr}\n */\nfunction ContainsField(field, obj) {\n  arity.exact(2, arguments, ContainsField.name)\n  return new Expr({ contains_field: wrap(field), in: wrap(obj) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to check for the existence of.\n * @param {module:query~ExprArg} in\n *   An object to search against.\n * @return {Expr}\n */\nfunction ContainsPath(path, _in) {\n  arity.exact(2, arguments, ContainsPath.name)\n  return new Expr({ contains_path: wrap(path), in: wrap(_in) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to pull from an object.\n * @param {module:query~ExprArg} from\n *   The object to select from\n * @param {?module:query~ExprArg} default\n *   A default value if the path does not exist.\n * @return {Expr}\n */\nfunction Select(path, from, _default) {\n  arity.between(2, 3, arguments, Select.name)\n  var exprObj = { select: wrap(path), from: wrap(from) }\n  if (_default !== undefined) {\n    exprObj.default = wrap(_default)\n  }\n  return new Expr(exprObj)\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions).\n *\n * @param {module:query~ExprArg} path\n *   An array representing a path to pull from an object.\n * @param {module:query~ExprArg} from\n *   The object to select from\n * @return {Expr}\n *\n * @deprecated avoid using\n */\nfunction SelectAll(path, from) {\n  arity.exact(2, arguments, SelectAll.name)\n  return new Expr({ select_all: wrap(path), from: wrap(from) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to provide the absolute value.\n * @return {Expr}\n */\nfunction Abs(expr) {\n  arity.exact(1, arguments, Abs.name)\n  return new Expr({ abs: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to sum together.\n * @return {Expr}\n */\nfunction Add() {\n  arity.min(1, arguments, Add.name)\n  return new Expr({ add: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to bitwise and together.\n * @return {Expr}\n */\nfunction BitAnd() {\n  arity.min(1, arguments, BitAnd.name)\n  return new Expr({ bitand: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to provide the bitwise not.\n * @return {Expr}\n */\nfunction BitNot(expr) {\n  arity.exact(1, arguments, BitNot.name)\n  return new Expr({ bitnot: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to bitwise Or'd together.\n * @return {Expr}\n */\nfunction BitOr() {\n  arity.min(1, arguments, BitOr.name)\n  return new Expr({ bitor: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to bitwise Xor'd together.\n * @return {Expr}\n */\nfunction BitXor() {\n  arity.min(1, arguments, BitXor.name)\n  return new Expr({ bitxor: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The least integer that is greater than or equal to the number\n * @return {Expr}\n */\nfunction Ceil(expr) {\n  arity.exact(1, arguments, Ceil.name)\n  return new Expr({ ceil: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to compute the quotient of.\n * @return {Expr}\n */\nfunction Divide() {\n  arity.min(1, arguments, Divide.name)\n  return new Expr({ divide: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The greatest integer that is less than or equal to the number\n * @return {Expr}\n */\nfunction Floor(expr) {\n  arity.exact(1, arguments, Floor.name)\n  return new Expr({ floor: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to multiply together.\n * @return {Expr}\n */\nfunction Max() {\n  arity.min(1, arguments, Max.name)\n  return new Expr({ max: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to multiply together.\n * @return {Expr}\n */\nfunction Min() {\n  arity.min(1, arguments, Min.name)\n  return new Expr({ min: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to compute the quotient of. The remainder will be returned.\n * @return {Expr}\n */\nfunction Modulo() {\n  arity.min(1, arguments, Modulo.name)\n  return new Expr({ modulo: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to multiply together.\n * @return {Expr}\n */\nfunction Multiply() {\n  arity.min(1, arguments, Multiply.name)\n  return new Expr({ multiply: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to round.\n * @param {...module:query~ExprArg} terms\n *   An optional precision\n * @return {Expr}\n */\nfunction Round(value, precision) {\n  arity.min(1, arguments, Round.name)\n  precision = util.defaults(precision, null)\n  return new Expr(\n    params({ round: wrap(value) }, { precision: wrap(precision) })\n  )\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of numbers to compute the difference of.\n * @return {Expr}\n */\nfunction Subtract() {\n  arity.min(1, arguments, Subtract.name)\n  return new Expr({ subtract: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The sign of the number is returned as positive 1, zero 0 , negative -1\n * @return {Expr}\n */\nfunction Sign(expr) {\n  arity.exact(1, arguments, Sign.name)\n  return new Expr({ sign: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The square root of the number\n * @return {Expr}\n */\nfunction Sqrt(expr) {\n  arity.exact(1, arguments, Sqrt.name)\n  return new Expr({ sqrt: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to truncate.\n * @param {...module:query~ExprArg} terms\n *   An optional precision\n * @return {Expr}\n */\nfunction Trunc(value, precision) {\n  arity.min(1, arguments, Trunc.name)\n  precision = util.defaults(precision, null)\n  return new Expr(\n    params({ trunc: wrap(value) }, { precision: wrap(precision) })\n  )\n}\n\n/**\n *\n * Count the number of elements in the collection.\n *\n * @param {array}    - array of items\n * @return {integer} - number of items in the collection\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/count\">Count function</a>\n */\nfunction Count(collection) {\n  arity.exact(1, arguments, Count.name)\n  return new Expr({ count: wrap(collection) })\n}\n\n/**\n *\n * Sum the elements in the collection.\n *\n * @param {array} - collection of numbers\n * @return {integer} - total of all numbers in collection\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/sum\">Sum function</a>\n */\nfunction Sum(collection) {\n  arity.exact(1, arguments, Sum.name)\n  return new Expr({ sum: wrap(collection) })\n}\n\n/**\n *\n * Returns the mean of all elements in the collection.\n *\n * @param {array} - collection the numbers\n * @return {float} - the mean of all numbers in the collection\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/mean\">Mean function</a>\n */\nfunction Mean(collection) {\n  arity.exact(1, arguments, Mean.name)\n  return new Expr({ mean: wrap(collection) })\n}\n\n/**\n *\n * Evaluates to true if any element of the collection is true.\n *\n * @param {array} - collection the collection\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/any\">Any function</a>\n */\nfunction Any(collection) {\n  arity.exact(1, arguments, Any.name)\n  return new Expr({ any: wrap(collection) })\n}\n\n/**\n *\n * Evaluates to true if all elements of the collection are true.\n *\n * @param {array} - collection the collection\n * @return {Expr}\n * @see <a href=\"https://docs.fauna.com/fauna/current/api/fql/functions/all\">All function</a>\n */\nfunction All(collection) {\n  arity.exact(1, arguments, All.name)\n  return new Expr({ all: wrap(collection) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The arc cosine of the number\n * @return {Expr}\n */\nfunction Acos(expr) {\n  arity.exact(1, arguments, Acos.name)\n  return new Expr({ acos: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The arc sine of the number\n * @return {Expr}\n */\nfunction Asin(expr) {\n  arity.exact(1, arguments, Asin.name)\n  return new Expr({ asin: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The arc tangent of the number\n * @return {Expr}\n */\nfunction Atan(expr) {\n  arity.exact(1, arguments, Atan.name)\n  return new Expr({ atan: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The cosine of a number\n * @return {Expr}\n */\nfunction Cos(expr) {\n  arity.exact(1, arguments, Cos.name)\n  return new Expr({ cos: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The hyperbolic cosine of the number\n * @return {Expr}\n */\nfunction Cosh(expr) {\n  arity.exact(1, arguments, Cosh.name)\n  return new Expr({ cosh: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   Take radians and convert it to degrees 360 degrees = 2 * pi radians\n * @return {Expr}\n */\nfunction Degrees(expr) {\n  arity.exact(1, arguments, Degrees.name)\n  return new Expr({ degrees: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The e raised to an exponent number\n * @return {Expr}\n */\nfunction Exp(expr) {\n  arity.exact(1, arguments, Exp.name)\n  return new Expr({ exp: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A side of the right triangle\n * @param {...module:query~ExprArg} terms\n *   The second side of a right triange, defaults to the first side\n * @return {Expr}\n */\nfunction Hypot(value, side) {\n  arity.min(1, arguments, Hypot.name)\n  side = util.defaults(side, null)\n  return new Expr(params({ hypot: wrap(value) }, { b: wrap(side) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The natural log of the number\n * @return {Expr}\n */\nfunction Ln(expr) {\n  arity.exact(1, arguments, Ln.name)\n  return new Expr({ ln: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The log base 10 of a number\n * @return {Expr}\n */\nfunction Log(expr) {\n  arity.exact(1, arguments, Log.name)\n  return new Expr({ log: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A numbers to raise to the power.\n * @param {...module:query~ExprArg} terms\n *   An optional exponent\n * @return {Expr}\n */\nfunction Pow(value, exponent) {\n  arity.min(1, arguments, Pow.name)\n  exponent = util.defaults(exponent, null)\n  return new Expr(params({ pow: wrap(value) }, { exp: wrap(exponent) }))\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   Take degrees and convert the number to radians 2 * pi = 360 degrees\n * @return {Expr}\n */\nfunction Radians(expr) {\n  arity.exact(1, arguments, Radians.name)\n  return new Expr({ radians: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The sine of a number\n * @return {Expr}\n */\nfunction Sin(expr) {\n  arity.exact(1, arguments, Sin.name)\n  return new Expr({ sin: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The hyperbolic sine of a number\n * @return {Expr}\n */\nfunction Sinh(expr) {\n  arity.exact(1, arguments, Sinh.name)\n  return new Expr({ sinh: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The Tangent of a number\n * @return {Expr}\n */\nfunction Tan(expr) {\n  arity.exact(1, arguments, Tan.name)\n  return new Expr({ tan: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#mathematical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   The hyberbolic tangent of a number\n * @return {Expr}\n */\nfunction Tanh(expr) {\n  arity.exact(1, arguments, Tanh.name)\n  return new Expr({ tanh: wrap(expr) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction LT() {\n  arity.min(1, arguments, LT.name)\n  return new Expr({ lt: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction LTE() {\n  arity.min(1, arguments, LTE.name)\n  return new Expr({ lte: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction GT() {\n  arity.min(1, arguments, GT.name)\n  return new Expr({ gt: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection of terms to compare.\n * @return {Expr}\n */\nfunction GTE() {\n  arity.min(1, arguments, GTE.name)\n  return new Expr({ gte: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection to compute the conjunction of.\n * @return {Expr}\n */\nfunction And() {\n  arity.min(1, arguments, And.name)\n  return new Expr({ and: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {...module:query~ExprArg} terms\n *   A collection to compute the disjunction of.\n * @return {Expr}\n */\nfunction Or() {\n  arity.min(1, arguments, Or.name)\n  return new Expr({ or: wrap(varargs(arguments)) })\n}\n\n/**\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi#logical-functions).\n *\n * @param {module:query~ExprArg} boolean\n *   A boolean to produce the negation of.\n * @return {Expr}\n */\nfunction Not(boolean) {\n  arity.exact(1, arguments, Not.name)\n  return new Expr({ not: wrap(boolean) })\n}\n\n/**\n * Converts an expression to a string literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a string.\n * @return {Expr}\n */\nfunction ToString(expr) {\n  arity.exact(1, arguments, ToString.name)\n  return new Expr({ to_string: wrap(expr) })\n}\n\n/**\n * Converts an expression to a number literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a number.\n * @return {Expr}\n */\nfunction ToNumber(expr) {\n  arity.exact(1, arguments, ToNumber.name)\n  return new Expr({ to_number: wrap(expr) })\n}\n\n/**\n * Converts an expression to an Object.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to an Object.\n * @return {Expr}\n */\nfunction ToObject(expr) {\n  arity.exact(1, arguments, ToObject.name)\n  return new Expr({ to_object: wrap(expr) })\n}\n\n/**\n * Converts an expression to an Array.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to an Array.\n * @return {Expr}\n */\nfunction ToArray(expr) {\n  arity.exact(1, arguments, ToArray.name)\n  return new Expr({ to_array: wrap(expr) })\n}\n\n/**\n * Converts an expression to a double value, if possible.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a double.\n * @return {Expr}\n */\nfunction ToDouble(expr) {\n  arity.exact(1, arguments, ToDouble.name)\n  return new Expr({ to_double: wrap(expr) })\n}\n\n/**\n * Converts an expression to an integer value, if possible.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to an integer.\n * @return {Expr}\n */\nfunction ToInteger(expr) {\n  arity.exact(1, arguments, ToInteger.name)\n  return new Expr({ to_integer: wrap(expr) })\n}\n\n/**\n * Converts an expression to a time literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a time.\n * @return {Expr}\n */\nfunction ToTime(expr) {\n  arity.exact(1, arguments, ToTime.name)\n  return new Expr({ to_time: wrap(expr) })\n}\n\n/**\n * Converts an expression evaluating to a time to seconds since epoch.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to seconds numeric value.\n * @return {Expr}\n */\nfunction ToSeconds(expr) {\n  arity.exact(1, arguments, ToSeconds.name)\n  return new Expr({ to_seconds: wrap(expr) })\n}\n\n/**\n * Converts a time expression to milliseconds since the UNIX epoch.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to millisecond numeric value.\n * @return {Expr}\n */\nfunction ToMillis(expr) {\n  arity.exact(1, arguments, ToMillis.name)\n  return new Expr({ to_millis: wrap(expr) })\n}\n\n/**\n * Converts a time expression to microseconds since the UNIX epoch.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to microsecond numeric value.\n * @return {Expr}\n */\nfunction ToMicros(expr) {\n  arity.exact(1, arguments, ToMicros.name)\n  return new Expr({ to_micros: wrap(expr) })\n}\n\n/**\n * Returns a time expression's day of the week following ISO-8601 convention, from 1 (Monday) to 7 (Sunday).\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to day of week.\n * @return {Expr}\n */\nfunction DayOfWeek(expr) {\n  arity.exact(1, arguments, DayOfWeek.name)\n  return new Expr({ day_of_week: wrap(expr) })\n}\n\n/**\n * Returns a time expression's day of the year, from 1 to 365, or 366 in a leap year.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to day of year.\n * @return {Expr}\n */\nfunction DayOfYear(expr) {\n  arity.exact(1, arguments, DayOfYear.name)\n  return new Expr({ day_of_year: wrap(expr) })\n}\n\n/**\n * Returns a time expression's day of the month, from 1 to 31.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to day of month.\n * @return {Expr}\n */\nfunction DayOfMonth(expr) {\n  arity.exact(1, arguments, DayOfMonth.name)\n  return new Expr({ day_of_month: wrap(expr) })\n}\n\n/**\n * Returns a time expression's second of the minute, from 0 to 59.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a hour.\n * @return {Expr}\n */\nfunction Hour(expr) {\n  arity.exact(1, arguments, Hour.name)\n  return new Expr({ hour: wrap(expr) })\n}\n\n/**\n * Returns a time expression's second of the minute, from 0 to 59.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a month.\n * @return {Expr}\n */\nfunction Minute(expr) {\n  arity.exact(1, arguments, Minute.name)\n  return new Expr({ minute: wrap(expr) })\n}\n\n/**\n * Returns a time expression's second of the minute, from 0 to 59.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a month.\n * @return {Expr}\n */\nfunction Second(expr) {\n  arity.exact(1, arguments, Second.name)\n  return new Expr({ second: wrap(expr) })\n}\n\n/**\n * Returns a time expression's month of the year, from 1 to 12.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a month.\n * @return {Expr}\n */\nfunction Month(expr) {\n  arity.exact(1, arguments, Month.name)\n  return new Expr({ month: wrap(expr) })\n}\n\n/**\n * Returns the time expression's year, following the ISO-8601 standard.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a year.\n * @return {Expr}\n */\nfunction Year(expr) {\n  arity.exact(1, arguments, Year.name)\n  return new Expr({ year: wrap(expr) })\n}\n\n/**\n * Converts an expression to a date literal.\n *\n * @param {module:query~ExprArg} expression\n *   An expression to convert to a date.\n * @return {Expr}\n */\nfunction ToDate(expr) {\n  arity.exact(1, arguments, ToDate.name)\n  return new Expr({ to_date: wrap(expr) })\n}\n\n/**\n * Move database to a new hierarchy.\n *\n * @param {string}  from database reference to be moved.\n * @param {string}  to new parent database reference.\n * @return {Expr}   The expression wrapping the provided object.\n * @see <a href=\"https://app.fauna.com/documentation/reference/queryapi#write-functions\">FaunaDB Write Functions</a>\n */\nfunction MoveDatabase(from, to) {\n  arity.exact(2, arguments, MoveDatabase.name)\n  return new Expr({ move_database: wrap(from), to: wrap(to) })\n}\n\n/**\n * Returns a set of all documents in the given collection.\n * A set must be paginated in order to retrieve its values.\n *\n * @param collection a reference to the collection. Type: Ref\n * @return a new {@link Expr} instance\n * @see #Paginate(Expr)\n */\nfunction Documents(collection) {\n  arity.exact(1, arguments, Documents.name)\n  return new Expr({ documents: wrap(collection) })\n}\n\n/**\n *\n * @param {module:query~ExprArg} expr\n *  An expression (i.e. Set, Page, or Array) to reverse\n * @return {Expr}\n */\nfunction Reverse(expr) {\n  arity.exact(1, arguments, Reverse.name)\n  return new Expr({ reverse: wrap(expr) })\n}\n\n/**\n *\n * @param {module:query~ExprArg} name\n * A string representing an AccessProvider's name\n * @return {Expr}\n */\nfunction AccessProvider(name) {\n  arity.exact(1, arguments, AccessProvider.name)\n  return new Expr({ access_provider: wrap(name) })\n}\n\n// Helpers\n\n/**\n * @ignore\n */\nfunction arity(min, max, args, callerFunc) {\n  if (\n    (min !== null && args.length < min) ||\n    (max !== null && args.length > max)\n  ) {\n    throw new errors.InvalidArity(min, max, args.length, callerFunc)\n  }\n}\n\narity.exact = function(n, args, callerFunc) {\n  arity(n, n, args, callerFunc)\n}\narity.max = function(n, args, callerFunc) {\n  arity(null, n, args, callerFunc)\n}\narity.min = function(n, args, callerFunc) {\n  arity(n, null, args, callerFunc)\n}\narity.between = function(min, max, args, callerFunc) {\n  arity(min, max, args, callerFunc)\n}\n\n/** Adds optional parameters to the query.\n *\n * @ignore\n * */\nfunction params(mainParams, optionalParams) {\n  for (var key in optionalParams) {\n    var val = optionalParams[key]\n    if (val !== null && val !== undefined) {\n      mainParams[key] = val\n    }\n  }\n  return mainParams\n}\n\n/**\n * Called on rest arguments.\n * This ensures that a single value passed is not put in an array, so\n * `query.add([1, 2])` will work as well as `query.add(1, 2)`.\n *\n * @ignore\n */\nfunction varargs(values) {\n  var valuesAsArr = Array.isArray(values)\n    ? values\n    : Array.prototype.slice.call(values)\n  return values.length === 1 ? values[0] : valuesAsArr\n}\n\n/**\n * @ignore\n */\nfunction argsToArray(args) {\n  var rv = []\n  rv.push.apply(rv, args)\n  return rv\n}\n\n/**\n * Wraps an object as an Expression. This will automatically wrap any bare objects with\n * the appropriate {@link object} escaping.\n * @param {Object} obj\n *  The object to be wrapped as an Expression.\n * @returns {Expr}\n *   The expression wrapping the provided object.\n * @private\n */\nfunction wrap(obj) {\n  arity.exact(1, arguments, wrap.name)\n  if (obj === null) {\n    return null\n  } else if (\n    obj instanceof Expr ||\n    util.checkInstanceHasProperty(obj, '_isFaunaExpr')\n  ) {\n    return obj\n  } else if (typeof obj === 'symbol') {\n    return obj.toString().replace(/Symbol\\((.*)\\)/, function(str, symbol) {\n      return symbol\n    })\n  } else if (typeof obj === 'function') {\n    return Lambda(obj)\n  } else if (Array.isArray(obj)) {\n    return new Expr(\n      obj.map(function(elem) {\n        return wrap(elem)\n      })\n    )\n  } else if (obj instanceof Uint8Array || obj instanceof ArrayBuffer) {\n    return new values.Bytes(obj)\n  } else if (typeof obj === 'object') {\n    return new Expr({ object: wrapValues(obj) })\n  } else {\n    return obj\n  }\n}\n\n/**\n * Wraps all of the values of a provided Object, while leaving the parent object unwrapped.\n * @param {Object} obj\n *  The object whose values are to be wrapped as Expressions.\n * @returns {Object}\n *  A copy of the provided object, with the values wrapped as Expressions.\n * @private\n */\nfunction wrapValues(obj) {\n  if (obj !== null) {\n    var rv = {}\n\n    Object.keys(obj).forEach(function(key) {\n      rv[key] = wrap(obj[key])\n    })\n\n    return rv\n  } else {\n    return null\n  }\n}\n\nmodule.exports = {\n  Ref: Ref,\n  Bytes: Bytes,\n  Abort: Abort,\n  At: At,\n  Let: Let,\n  Var: Var,\n  If: If,\n  Do: Do,\n  Object: objectFunction,\n  Lambda: Lambda,\n  Call: Call,\n  Query: Query,\n  Map: Map,\n  Foreach: Foreach,\n  Filter: Filter,\n  Take: Take,\n  Drop: Drop,\n  Prepend: Prepend,\n  Append: Append,\n  IsEmpty: IsEmpty,\n  IsNonEmpty: IsNonEmpty,\n  IsNumber: IsNumber,\n  IsDouble: IsDouble,\n  IsInteger: IsInteger,\n  IsBoolean: IsBoolean,\n  IsNull: IsNull,\n  IsBytes: IsBytes,\n  IsTimestamp: IsTimestamp,\n  IsDate: IsDate,\n  IsString: IsString,\n  IsArray: IsArray,\n  IsObject: IsObject,\n  IsRef: IsRef,\n  IsSet: IsSet,\n  IsDoc: IsDoc,\n  IsLambda: IsLambda,\n  IsCollection: IsCollection,\n  IsDatabase: IsDatabase,\n  IsIndex: IsIndex,\n  IsFunction: IsFunction,\n  IsKey: IsKey,\n  IsToken: IsToken,\n  IsCredentials: IsCredentials,\n  IsRole: IsRole,\n  Get: Get,\n  KeyFromSecret: KeyFromSecret,\n  Reduce: Reduce,\n  Paginate: Paginate,\n  Exists: Exists,\n  Create: Create,\n  Update: Update,\n  Replace: Replace,\n  Delete: Delete,\n  Insert: Insert,\n  Remove: Remove,\n  CreateClass: deprecate(\n    CreateClass,\n    'CreateClass() is deprecated, use CreateCollection() instead'\n  ),\n  CreateCollection: CreateCollection,\n  CreateDatabase: CreateDatabase,\n  CreateIndex: CreateIndex,\n  CreateKey: CreateKey,\n  CreateFunction: CreateFunction,\n  CreateRole: CreateRole,\n  CreateAccessProvider: CreateAccessProvider,\n  Singleton: Singleton,\n  Events: Events,\n  Match: Match,\n  Union: Union,\n  Merge: Merge,\n  Intersection: Intersection,\n  Difference: Difference,\n  Distinct: Distinct,\n  Join: Join,\n  Range: Range,\n  Login: Login,\n  Logout: Logout,\n  Identify: Identify,\n  Identity: deprecate(\n    Identity,\n    'Identity() is deprecated, use CurrentIdentity() instead'\n  ),\n  CurrentIdentity: CurrentIdentity,\n  HasIdentity: deprecate(\n    HasIdentity,\n    'HasIdentity() is deprecated, use HasCurrentIdentity() instead'\n  ),\n  HasCurrentIdentity: HasCurrentIdentity,\n  CurrentToken: CurrentToken,\n  HasCurrentToken: HasCurrentToken,\n  Concat: Concat,\n  Casefold: Casefold,\n  ContainsStr: ContainsStr,\n  ContainsStrRegex: ContainsStrRegex,\n  StartsWith: StartsWith,\n  EndsWith: EndsWith,\n  FindStr: FindStr,\n  FindStrRegex: FindStrRegex,\n  Length: Length,\n  LowerCase: LowerCase,\n  LTrim: LTrim,\n  NGram: NGram,\n  Repeat: Repeat,\n  ReplaceStr: ReplaceStr,\n  ReplaceStrRegex: ReplaceStrRegex,\n  RegexEscape: RegexEscape,\n  RTrim: RTrim,\n  Space: Space,\n  SubString: SubString,\n  TitleCase: TitleCase,\n  Trim: Trim,\n  UpperCase: UpperCase,\n  Format: Format,\n  Time: Time,\n  TimeAdd: TimeAdd,\n  TimeSubtract: TimeSubtract,\n  TimeDiff: TimeDiff,\n  Epoch: Epoch,\n  Date: Date,\n  Now: Now,\n  NextId: deprecate(NextId, 'NextId() is deprecated, use NewId() instead'),\n  NewId: NewId,\n  Database: Database,\n  Index: Index,\n  Class: deprecate(Class, 'Class() is deprecated, use Collection() instead'),\n  Collection: Collection,\n  Function: FunctionFn,\n  Role: Role,\n  AccessProviders: AccessProviders,\n  Classes: deprecate(\n    Classes,\n    'Classes() is deprecated, use Collections() instead'\n  ),\n  Collections: Collections,\n  Databases: Databases,\n  Indexes: Indexes,\n  Functions: Functions,\n  Roles: Roles,\n  Keys: Keys,\n  Tokens: Tokens,\n  Credentials: Credentials,\n  Equals: Equals,\n  Contains: deprecate(\n    Contains,\n    'Contains() is deprecated, use ContainsPath() instead'\n  ),\n  ContainsPath: ContainsPath,\n  ContainsField: ContainsField,\n  ContainsValue: ContainsValue,\n  Select: Select,\n  SelectAll: deprecate(SelectAll, 'SelectAll() is deprecated. Avoid use.'),\n  Abs: Abs,\n  Add: Add,\n  BitAnd: BitAnd,\n  BitNot: BitNot,\n  BitOr: BitOr,\n  BitXor: BitXor,\n  Ceil: Ceil,\n  Divide: Divide,\n  Floor: Floor,\n  Max: Max,\n  Min: Min,\n  Modulo: Modulo,\n  Multiply: Multiply,\n  Round: Round,\n  Subtract: Subtract,\n  Sign: Sign,\n  Sqrt: Sqrt,\n  Trunc: Trunc,\n  Count: Count,\n  Sum: Sum,\n  Mean: Mean,\n  Any: Any,\n  All: All,\n  Acos: Acos,\n  Asin: Asin,\n  Atan: Atan,\n  Cos: Cos,\n  Cosh: Cosh,\n  Degrees: Degrees,\n  Exp: Exp,\n  Hypot: Hypot,\n  Ln: Ln,\n  Log: Log,\n  Pow: Pow,\n  Radians: Radians,\n  Sin: Sin,\n  Sinh: Sinh,\n  Tan: Tan,\n  Tanh: Tanh,\n  LT: LT,\n  LTE: LTE,\n  GT: GT,\n  GTE: GTE,\n  And: And,\n  Or: Or,\n  Not: Not,\n  ToString: ToString,\n  ToNumber: ToNumber,\n  ToObject: ToObject,\n  ToArray: ToArray,\n  ToDouble: ToDouble,\n  ToInteger: ToInteger,\n  ToTime: ToTime,\n  ToSeconds: ToSeconds,\n  ToMicros: ToMicros,\n  ToMillis: ToMillis,\n  DayOfMonth: DayOfMonth,\n  DayOfWeek: DayOfWeek,\n  DayOfYear: DayOfYear,\n  Second: Second,\n  Minute: Minute,\n  Hour: Hour,\n  Month: Month,\n  Year: Year,\n  ToDate: ToDate,\n  MoveDatabase: MoveDatabase,\n  Documents: Documents,\n  Reverse: Reverse,\n  AccessProvider: AccessProvider,\n  wrap: wrap,\n}\n", "'use strict'\n\nvar values = require('./values')\n\nfunction toJSON(object, pretty) {\n  pretty = typeof pretty !== 'undefined' ? pretty : false\n\n  if (pretty) {\n    return JSON.stringify(object, null, '  ')\n  } else {\n    return JSON.stringify(object)\n  }\n}\n\nfunction parseJSON(json) {\n  return JSON.parse(json, json_parse)\n}\n\n/*\n * Parses a line-separated JSON stream. For backwards compatibility with\n * concatenated JSON objects, it attempts to parse the received content as a\n * JSON object. Failures should occur when partial or multiple line-separated\n * JSON objects are received. Upon a parsing failure, attempt paring the\n * received content as line-separated JSON objects.\n *\n * See https://en.wikipedia.org/wiki/JSON_streaming#Line-delimited_JSON\n * See https://en.wikipedia.org/wiki/JSON_streaming#Concatenated_JSON\n *\n * @private\n */\nfunction parseJSONStreaming(content) {\n  var values = []\n\n  try {\n    values.push(parseJSON(content))\n    content = '' // whole content parsed\n  } catch (err) {\n    while (true) {\n      var pos = content.indexOf('\\n') + 1 // include \\n\n      if (pos <= 0) {\n        break\n      }\n      var slice = content.slice(0, pos).trim()\n      if (slice.length > 0) {\n        // discards empty slices due to leading \\n\n        values.push(parseJSON(slice))\n      }\n      content = content.slice(pos)\n    }\n  }\n\n  return {\n    values: values,\n    buffer: content,\n  }\n}\n\nfunction json_parse(_, val) {\n  if (typeof val !== 'object' || val === null) {\n    return val\n  } else if ('@ref' in val) {\n    var ref = val['@ref']\n\n    if (!('collection' in ref) && !('database' in ref)) {\n      return values.Native.fromName(ref['id'])\n    }\n\n    var col = json_parse('collection', ref['collection'])\n    var db = json_parse('database', ref['database'])\n\n    return new values.Ref(ref['id'], col, db)\n  } else if ('@obj' in val) {\n    return val['@obj']\n  } else if ('@set' in val) {\n    return new values.SetRef(val['@set'])\n  } else if ('@ts' in val) {\n    return new values.FaunaTime(val['@ts'])\n  } else if ('@date' in val) {\n    return new values.FaunaDate(val['@date'])\n  } else if ('@bytes' in val) {\n    return new values.Bytes(val['@bytes'])\n  } else if ('@query' in val) {\n    return new values.Query(val['@query'])\n  } else {\n    return val\n  }\n}\n\nmodule.exports = {\n  toJSON: toJSON,\n  parseJSON: parseJSON,\n  parseJSONStreaming: parseJSONStreaming,\n}\n", "'use strict'\n\nvar query = require('./query')\nvar objectAssign = require('object-assign')\n\n/**\n * A FaunaDB Lambda expression to be passed into one of the collection\n * functions: Map or Filter.\n *\n * @callback PageHelper~collectionFunction\n * @param {any} var\n *   The variable passed in by FaunaDB when this Lambda\n *   function is executed.\n * @return {Expr}\n *   The FaunaDB query expression to be returned by this Lambda.\n */\n\n/**\n * @callback PageHelper~eachFunction\n * @param {Object} page\n *   A page returned by FaunaDB's Paginate function.\n */\n\n/**\n * A wrapper that provides a helpful API for consuming FaunaDB pages.\n *\n * Generally this is constructed through the {@link Client#paginate} method.\n *\n * The {@link PageHelper#map} and {@link PageHelper#filter} methods will wrap the underlying query with a Map\n * and Filter query function, respectively. These will be executed on the server when a promise-returning function\n * is called.\n *\n * The {@link PageHelper#each} and {@link PageHelper#eachReverse} functions dispatch queries to FaunaDB, and return Promises\n * representing the completion of those queries. The callbacks provided to these functions are executed locally when the\n * queries return.\n *\n * The {@link PageHelper#nextPage} and {@link PageHelper#previousPage} functions also dispatch queries to FaunaDB,\n * but return their responses in a wrapped Promise.\n *\n * @param {Client} client\n *   The FaunaDB client used to paginate.\n * @param {Object} set\n *   The set to paginate.\n * @param {?Object} params\n *   Parameters to be passed to the FaunaDB Paginate function.\n * @param {?Object} options\n *   Object that configures the current pagination, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @constructor\n */\nfunction PageHelper(client, set, params, options) {\n  if (params === undefined) {\n    params = {}\n  }\n\n  if (options === undefined) {\n    options = {}\n  }\n\n  this.reverse = false\n  this.params = {}\n\n  this.before = undefined\n  this.after = undefined\n\n  objectAssign(this.params, params)\n\n  var cursorParams = this.params.cursor || this.params\n\n  if ('before' in cursorParams) {\n    this.before = cursorParams.before\n    delete cursorParams.before\n  } else if ('after' in cursorParams) {\n    this.after = cursorParams.after\n    delete cursorParams.after\n  }\n\n  this.options = {}\n  objectAssign(this.options, options)\n\n  this.client = client\n  this.set = set\n\n  /**\n   * @member {Array.<Function>}\n   * @type {Array.<Function>}\n   * @private\n   */\n  this._faunaFunctions = []\n}\n\n/**\n * Wraps the set to be paginated with a FaunaDB Map function.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The Lambda expression to be passed into the Map function.\n * @return {PageHelper}\n *\n */\nPageHelper.prototype.map = function(lambda) {\n  var rv = this._clone()\n  rv._faunaFunctions.push(function(q) {\n    return query.Map(q, lambda)\n  })\n  return rv\n}\n\n/**\n * Wraps the set to be paginated with a FaunaDB Filter funciton.\n * As this function is executed on the server, the `lambda` param must\n * return a valid query expression.\n *\n * @param {PageHelper~collectionFunction} lambda\n *   The lambda expression to be passed into the Filter function.\n * @return {PageHelper}\n */\nPageHelper.prototype.filter = function(lambda) {\n  var rv = this._clone()\n  rv._faunaFunctions.push(function(q) {\n    return query.Filter(q, lambda)\n  })\n  return rv\n}\n\n/**\n * Executes the provided function for each page.\n *\n * @param {PageHelper~eachFunction} lambda\n *   A function to be executed for each page.\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.each = function(lambda) {\n  return this._retrieveNextPage(this.after, false).then(\n    this._consumePages(lambda, false)\n  )\n}\n\n/**\n * Executes the provided function for each page, in the reverse direction.\n * @param {PageHelper~eachFunction} lambda\n * @returns {external:Promise.<void>}\n */\nPageHelper.prototype.eachReverse = function(lambda) {\n  return this._retrieveNextPage(this.before, true).then(\n    this._consumePages(lambda, true)\n  )\n}\n\n/**\n * Queries for the previous page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.previousPage = function() {\n  var self = this\n  return this._retrieveNextPage(this.before, true).then(\n    this._adjustCursors.bind(self)\n  )\n}\n\n/**\n * Queries for the next page from the current cursor point; this mutates\n * the state of the PageHelper when the query completes, updating the internal\n * cursor state to that of the returned page.\n *\n * @returns {external:Promise.<object>}\n */\nPageHelper.prototype.nextPage = function() {\n  var self = this\n  return this._retrieveNextPage(this.after, false).then(\n    this._adjustCursors.bind(self)\n  )\n}\n\nPageHelper.prototype._adjustCursors = function(page) {\n  if (page.after !== undefined) {\n    this.after = page.after\n  }\n\n  if (page.before !== undefined) {\n    this.before = page.before\n  }\n\n  return page.data\n}\n\nPageHelper.prototype._consumePages = function(lambda, reverse) {\n  var self = this\n  return function(page) {\n    var data = []\n    page.data.forEach(function(item) {\n      if (item.document) {\n        item.instance = item.document\n      }\n      if (item.value && item.value.document) {\n        item.value.instance = item.value.document\n      }\n      data.push(item)\n    })\n    lambda(data)\n\n    var nextCursor\n    if (reverse) {\n      nextCursor = page.before\n    } else {\n      nextCursor = page.after\n    }\n\n    if (nextCursor !== undefined) {\n      return self\n        ._retrieveNextPage(nextCursor, reverse)\n        .then(self._consumePages(lambda, reverse))\n    } else {\n      return Promise.resolve()\n    }\n  }\n}\n\n/**\n *\n * @returns {external:Promise.<Object>}\n * @private\n */\nPageHelper.prototype._retrieveNextPage = function(cursor, reverse) {\n  var opts = {}\n  objectAssign(opts, this.params)\n  var cursorOpts = opts.cursor || opts\n\n  if (cursor !== undefined) {\n    if (reverse) {\n      cursorOpts.before = cursor\n    } else {\n      cursorOpts.after = cursor\n    }\n  } else {\n    if (reverse) {\n      cursorOpts.before = null\n    }\n  }\n\n  var q = query.Paginate(this.set, opts)\n\n  if (this._faunaFunctions.length > 0) {\n    this._faunaFunctions.forEach(function(lambda) {\n      q = lambda(q)\n    })\n  }\n\n  return this.client.query(q, this.options)\n}\n\n/**\n * @private\n * @returns {PageHelper}\n */\nPageHelper.prototype._clone = function() {\n  return Object.create(PageHelper.prototype, {\n    client: { value: this.client },\n    set: { value: this.set },\n    _faunaFunctions: { value: this._faunaFunctions },\n    before: { value: this.before },\n    after: { value: this.after },\n    params: { value: this.params },\n  })\n}\n\nmodule.exports = PageHelper\n", "'use strict'\n\n/**\n * A structure containing the request and response context for a given FaunaDB request.\n * Provided to an observer function optionally defined in the {@link Client} constructor.\n *\n * @param {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} method\n *   The HTTP method used in the request.\n * @param {string} path\n *   The path that was queried. Relative to the client's domain.\n * @param {string} query\n *   URL query parameters. Only set if `method` is \"GET\".\n * @param {Object} requestRaw\n *   The JSON request string.\n * @param {Object} requestContent\n *   The request data.\n * @param {string} responseRaw\n *   The unparsed response data, as a string.\n * @param {object | FaunaHttpErrorResponseContent} responseContent\n *   The response data parsed as JSON.\n * @param {number} statusCode\n *   The HTTP response status code.\n * @param {object} responseHeaders\n *   The HTTP headers returned in the response.\n * @param {number} startTime\n *   The time the request was issued by the client.\n * @param {number} endTime\n *   The time the response was received by the client.\n * @constructor\n */\nfunction RequestResult(\n  method,\n  path,\n  query,\n  requestRaw,\n  requestContent,\n  responseRaw,\n  responseContent,\n  statusCode,\n  responseHeaders,\n  startTime,\n  endTime\n) {\n  /** @type {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} */\n  this.method = method\n\n  /** @type {string} */\n  this.path = path\n\n  /**\n   * URL query. Null unless `method == 'get'`.\n   * *Not* related to {@link Client.query}.\n   * @type {object}\n   */\n  this.query = query\n\n  /** @type {string} */\n  this.requestRaw = requestRaw\n\n  /** @type {object} */\n  this.requestContent = requestContent\n\n  /** @type {string} */\n  this.responseRaw = responseRaw\n\n  /**\n   * Parsed value returned by the server.\n   * Includes \"resource\" wrapper dict, or may be an FaunaHttpErrorResponseContent instead\n   * @type {object | FaunaHttpErrorResponseContent}\n   */\n  this.responseContent = responseContent\n\n  /** @type {number} */\n  this.statusCode = statusCode\n\n  /** @type {object} */\n  this.responseHeaders = responseHeaders\n\n  /** @type {number} */\n  this.startTime = startTime\n\n  /** @type {number} */\n  this.endTime = endTime\n}\n\n/**\n * `this.endTime - this.startTime`: Time taken in milliseconds.\n * @type {number}\n */\nObject.defineProperty(RequestResult.prototype, 'timeTaken', {\n  get: function() {\n    return this.endTime - this.startTime\n  },\n})\n\nmodule.exports = RequestResult\n", "'use strict'\nvar util = require('../_util')\n\n/**\n * Thrown by HttpClient when request hits specified timeout.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\nfunction TimeoutError(message) {\n  Error.call(this)\n\n  this.message = message || 'Request aborted due to timeout'\n  this.isTimeoutError = true\n}\n\nutil.inherits(TimeoutError, Error)\n\n/**\n * Thrown by HttpClient when request is aborted via Signal interface.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\nfunction AbortError(message) {\n  Error.call(this)\n\n  this.message = message || 'Request aborted'\n  this.isAbortError = true\n}\n\nutil.inherits(AbortError, Error)\n\nmodule.exports = {\n  TimeoutError: TimeoutError,\n  AbortError: AbortError,\n}\n", "", "'use strict'\nvar http2 = require('http2')\nvar errors = require('./errors')\nvar faunaErrors = require('../errors')\nvar util = require('../_util')\n\nvar STREAM_PREFIX = 'stream::'\n\n/**\n * Http client adapter built around NodeJS http2 module.\n *\n * @constructor\n * @param {object} options Http2Adapter options.\n * @param {number} options.http2SessionIdleTime The time (in milliseconds) that\n * an HTTP2 session may live when there's no activity.\n * @private\n */\nfunction Http2Adapter(options) {\n  /**\n   * Identifies a type of adapter.\n   *\n   * @type {string}\n   */\n  this.type = 'http2'\n  /**\n   * Serves for reusing http2 sessions between multiple calls.\n   *\n   * @type {object}\n   * @private\n   */\n  this._sessionMap = {}\n  /**\n   * The time (in ms) that an HTTP2 session may live when there's no activity.\n   *\n   * @type {number}\n   * @private\n   */\n  this._http2SessionIdleTime = options.http2SessionIdleTime\n  /**\n   * Indicates whether the .close method has been called.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this._closed = false\n}\n\n/**\n * Resolves ClientHttp2Session to be reused across multiple requests.\n *\n * @param {string} origin Request origin to connect to.\n * @param {?boolean} isStreaming Whether it's a streaming request. A separate session\n * is created for streaming requests to avoid shared resources with regular\n * ones for the purpose of reliability.\n * @returns {object} An interface to operate with HTTP2 session.\n */\nHttp2Adapter.prototype._resolveSessionFor = function(origin, isStreaming) {\n  var sessionKey = isStreaming ? STREAM_PREFIX + origin : origin\n\n  if (this._sessionMap[sessionKey]) {\n    return this._sessionMap[sessionKey]\n  }\n\n  var self = this\n  var timerId = null\n  var ongoingRequests = 0\n\n  var cleanup = function() {\n    self._cleanupSessionFor(origin, isStreaming)\n  }\n\n  var clearInactivityTimeout = function() {\n    if (timerId) {\n      clearTimeout(timerId)\n      timerId = null\n    }\n  }\n\n  var setInactivityTimeout = function() {\n    clearInactivityTimeout()\n\n    if (self._http2SessionIdleTime === Infinity) {\n      return\n    }\n\n    var onTimeout = function() {\n      timerId = null\n\n      if (ongoingRequests === 0) {\n        cleanup()\n      }\n    }\n\n    timerId = setTimeout(onTimeout, self._http2SessionIdleTime)\n  }\n\n  var close = function(force) {\n    clearInactivityTimeout()\n\n    var shouldDestroy = force || isStreaming\n\n    if (shouldDestroy) {\n      session.destroy()\n\n      return Promise.resolve()\n    }\n\n    return new Promise(function(resolve) {\n      session.close(resolve)\n    })\n  }\n\n  var onRequestStart = function() {\n    ++ongoingRequests\n    clearInactivityTimeout()\n  }\n\n  var onRequestEnd = function() {\n    --ongoingRequests\n\n    var noOngoingRequests = ongoingRequests === 0\n    var isSessionClosed = self._closed || session.closed || session.destroyed\n\n    if (noOngoingRequests && !isSessionClosed) {\n      setInactivityTimeout()\n    }\n  }\n\n  var session = http2\n    .connect(origin)\n    .once('error', cleanup)\n    .once('goaway', cleanup)\n  var sessionInterface = {\n    session: session,\n    close: close,\n    onRequestStart: onRequestStart,\n    onRequestEnd: onRequestEnd,\n  }\n\n  this._sessionMap[sessionKey] = sessionInterface\n\n  return sessionInterface\n}\n\n/**\n * Performs cleanup for broken session.\n *\n * @param {string} origin Request origin to connect to.\n * @param {?boolean} isStreaming Whether it's a streaming request.\n * @returns {void}\n */\nHttp2Adapter.prototype._cleanupSessionFor = function(origin, isStreaming) {\n  var sessionKey = isStreaming ? STREAM_PREFIX + origin : origin\n\n  if (this._sessionMap[sessionKey]) {\n    this._sessionMap[sessionKey].session.close()\n    delete this._sessionMap[sessionKey]\n  }\n}\n\n/**\n * Issues http requests using http2 module.\n *\n * @param {object} options Request options.\n * @param {string} options.origin Request origin.\n * @param {string} options.path Request path.\n * @param {?object} options.query Request query.\n * @param {string} options.method Request method.\n * @param {?object} options.headers Request headers.\n * @param {?string} options.body Request body utf8 string.\n * @params {?object} options.streamConsumer Stream consumer.\n * @param {?object} options.signal Abort signal object.\n * @param {?number} options.timeout Request timeout.\n * @returns {Promise} Request result.\n */\nHttp2Adapter.prototype.execute = function(options) {\n  if (this._closed) {\n    return Promise.reject(\n      new faunaErrors.ClientClosed(\n        'The Client has already been closed',\n        'No subsequent requests can be issued after the .close method is called. ' +\n          'Consider creating a new Client instance'\n      )\n    )\n  }\n\n  var self = this\n  var isStreaming = options.streamConsumer != null\n\n  return new Promise(function(resolvePromise, rejectPromise) {\n    var isPromiseSettled = false\n    var isCanceled = false\n\n    var resolve = function(value) {\n      isPromiseSettled = true\n      resolvePromise(value)\n    }\n\n    // If an error has occurred after the Promise is settled\n    // we need to call streamConsumer.onError instead of reject function.\n    // Possible scenario is aborting request when stream is already being consumed.\n    var rejectOrOnError = function(error) {\n      var remapped = remapHttp2Error({ error, isClosed: self._closed })\n\n      if (isPromiseSettled && isStreaming) {\n        return options.streamConsumer.onError(remapped)\n      }\n\n      isPromiseSettled = true\n      rejectPromise(remapped)\n    }\n\n    var onSettled = function() {\n      sessionInterface.onRequestEnd()\n\n      if (options.signal) {\n        options.signal.removeEventListener('abort', onAbort)\n      }\n    }\n\n    var onError = function(error) {\n      onSettled()\n      rejectOrOnError(error)\n    }\n\n    var onAbort = function() {\n      isCanceled = true\n      onSettled()\n      request.close(http2.constants.NGHTTP2_CANCEL)\n      rejectOrOnError(new errors.AbortError())\n    }\n\n    var onTimeout = function() {\n      isCanceled = true\n      onSettled()\n      request.close(http2.constants.NGHTTP2_CANCEL)\n      rejectOrOnError(new errors.TimeoutError())\n    }\n\n    var onResponse = function(responseHeaders) {\n      var status = responseHeaders[http2.constants.HTTP2_HEADER_STATUS]\n      var isOkStatus = status >= 200 && status < 400\n      var processStream = isOkStatus && isStreaming\n      var responseBody = ''\n\n      var onData = function(chunk) {\n        if (processStream) {\n          return options.streamConsumer.onData(chunk)\n        }\n\n        responseBody += chunk\n      }\n\n      var onEnd = function() {\n        if (!isCanceled) {\n          onSettled()\n        }\n\n        if (!processStream) {\n          return resolve({\n            body: responseBody,\n            headers: responseHeaders,\n            status: status,\n          })\n        }\n\n        // Call .onError with TypeError only if the request hasn't been canceled\n        // and the Client hasn't been closed in order to align on how\n        // FetchAdapter works - it throws the TypeError due to underlying fetch API mechanics.\n        if (!isCanceled && !self._closed) {\n          options.streamConsumer.onError(new TypeError('network error'))\n        }\n      }\n\n      if (processStream) {\n        resolve({\n          // Syntactic stream representation.\n          body: '[stream]',\n          headers: responseHeaders,\n          status: status,\n        })\n      }\n\n      request.on('data', onData).on('end', onEnd)\n    }\n\n    try {\n      var pathname =\n        (options.path[0] === '/' ? options.path : '/' + options.path) +\n        util.querystringify(options.query, '?')\n      var requestHeaders = Object.assign({}, options.headers, {\n        [http2.constants.HTTP2_HEADER_PATH]: pathname,\n        [http2.constants.HTTP2_HEADER_METHOD]: options.method,\n      })\n      var sessionInterface = self._resolveSessionFor(\n        options.origin,\n        isStreaming\n      )\n      var request = sessionInterface.session\n        .request(requestHeaders)\n        .setEncoding('utf8')\n        .on('error', onError)\n        .on('response', onResponse)\n\n      sessionInterface.onRequestStart()\n\n      // Set up timeout only if no signal provided.\n      if (!options.signal && options.timeout) {\n        request.setTimeout(options.timeout, onTimeout)\n      }\n\n      if (options.signal) {\n        options.signal.addEventListener('abort', onAbort)\n      }\n\n      if (options.body != null) {\n        request.write(options.body)\n      }\n\n      request.end()\n    } catch (error) {\n      self._cleanupSessionFor(options.origin, isStreaming)\n      rejectOrOnError(error)\n    }\n  })\n}\n\n/**\n * Moves to the closed state, cleans up ongoing HTTP2 sessions if any.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Whether to force resources clean up.\n * @returns {Promise<void>}\n */\nHttp2Adapter.prototype.close = function(opts) {\n  opts = opts || {}\n\n  this._closed = true\n\n  var noop = function() {}\n\n  return Promise.all(\n    Object.values(this._sessionMap).map(function(sessionInterface) {\n      return sessionInterface.close(opts.force)\n    })\n  ).then(noop)\n}\n\n/**\n * Remaps internal NodeJS error into ClientClosed one.\n *\n * @private\n * @param {Error} error Error object.\n * @returns {Error} Remapped error.\n */\nfunction remapHttp2Error({ error, isClosed }) {\n  var shouldRemap =\n    isClosed &&\n    (error.code === 'ERR_HTTP2_GOAWAY_SESSION' ||\n      error.code === 'ERR_HTTP2_STREAM_CANCEL')\n\n  if (shouldRemap) {\n    return new faunaErrors.ClientClosed(\n      'The request is aborted due to the Client#close call'\n    )\n  }\n\n  return error\n}\n\nmodule.exports = Http2Adapter\n", "/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n", "import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n", "import {\n    // Event,\n    EventTarget,\n    // Type,\n    defineEventAttribute,\n} from \"event-target-shim\"\n\n// Known Limitation\n//   Use `any` because the type of `AbortSignal` in `lib.dom.d.ts` is wrong and\n//   to make assignable our `AbortSignal` into that.\n//   https://github.com/Microsoft/TSJS-lib-generator/pull/623\ntype Events = {\n    abort: any // Event & Type<\"abort\">\n}\ntype EventAttributes = {\n    onabort: any // Event & Type<\"abort\">\n}\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nexport default class AbortSignal extends EventTarget<Events, EventAttributes> {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    public constructor() {\n        super()\n        throw new TypeError(\"AbortSignal cannot be constructed directly\")\n    }\n\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    public get aborted(): boolean {\n        const aborted = abortedFlags.get(this)\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(\n                `Expected 'this' to be an 'AbortSignal' object, but got ${\n                    this === null ? \"null\" : typeof this\n                }`,\n            )\n        }\n        return aborted\n    }\n}\ndefineEventAttribute(AbortSignal.prototype, \"abort\")\n\n/**\n * Create an AbortSignal object.\n */\nexport function createAbortSignal(): AbortSignal {\n    const signal = Object.create(AbortSignal.prototype)\n    EventTarget.call(signal)\n    abortedFlags.set(signal, false)\n    return signal\n}\n\n/**\n * Abort a given signal.\n */\nexport function abortSignal(signal: AbortSignal): void {\n    if (abortedFlags.get(signal) !== false) {\n        return\n    }\n\n    abortedFlags.set(signal, true)\n    signal.dispatchEvent<\"abort\">({ type: \"abort\" })\n}\n\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap<AbortSignal, boolean>()\n\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n})\n\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    })\n}\n", "import AbortSignal, { abortSignal, createAbortSignal } from \"./abort-signal\"\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nexport default class AbortController {\n    /**\n     * Initialize this controller.\n     */\n    public constructor() {\n        signals.set(this, createAbortSignal())\n    }\n\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    public get signal(): AbortSignal {\n        return getSignal(this)\n    }\n\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    public abort(): void {\n        abortSignal(getSignal(this))\n    }\n}\n\n/**\n * Associated signals.\n */\nconst signals = new WeakMap<AbortController, AbortSignal>()\n\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller: AbortController): AbortSignal {\n    const signal = signals.get(controller)\n    if (signal == null) {\n        throw new TypeError(\n            `Expected 'this' to be an 'AbortController' object, but got ${\n                controller === null ? \"null\" : typeof controller\n            }`,\n        )\n    }\n    return signal\n}\n\n// Properties should be enumerable.\nObject.defineProperties(AbortController.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n})\n\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    })\n}\n\nexport { AbortController, AbortSignal }\n", "/*globals require, self, window */\n\"use strict\"\n\nconst ac = require(\"./dist/abort-controller\")\n\n/*eslint-disable @mysticatea/prettier */\nconst g =\n    typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    typeof global !== \"undefined\" ? global :\n    /* otherwise */ undefined\n/*eslint-enable @mysticatea/prettier */\n\nif (g) {\n    if (typeof g.AbortController === \"undefined\") {\n        g.AbortController = ac.AbortController\n    }\n    if (typeof g.AbortSignal === \"undefined\") {\n        g.AbortSignal = ac.AbortSignal\n    }\n}\n", "", "", "'use strict'\nrequire('abort-controller/polyfill')\nvar util = require('../_util')\nvar faunaErrors = require('../errors')\nvar errors = require('./errors')\n\n/**\n * Http client adapter built around fetch API.\n *\n * @constructor\n * @param {?object} options FetchAdapter options.\n * @param {?boolean} options.keepAlive Whether use keep-alive connection.\n * @param {?boolean} options.isHttps Whether use https connection.\n * @param {?function} options.fetch Fetch compatible API.\n * @private\n */\nfunction FetchAdapter(options) {\n  options = options || {}\n\n  /**\n   * Identifies a type of adapter.\n   *\n   * @type {string}\n   */\n  this.type = 'fetch'\n  /**\n   * Indicates whether the .close method has been called.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this._closed = false\n  this._fetch = util.resolveFetch(options.fetch)\n  /**\n   * A map that tracks ongoing requests to be able to cancel them when\n   * the .close method is called.\n   *\n   * @type {Map<Object, Object>}\n   * @private\n   */\n  this._pendingRequests = new Map()\n\n  if (util.isNodeEnv() && options.keepAlive) {\n    this._keepAliveEnabledAgent = new (options.isHttps\n      ? require('https')\n      : require('http')\n    ).Agent({ keepAlive: true })\n  }\n}\n\n/**\n * Issues http requests using fetch API.\n *\n * @param {object} options Request options.\n * @param {string} options.origin Request origin.\n * @param {string} options.path Request path.\n * @param {?object} options.query Request query.\n * @param {string} options.method Request method.\n * @param {?object} options.headers Request headers.\n * @param {?string} options.body Request body utf8 string.\n * @params {?object} options.streamConsumer Stream consumer.\n * @param {?object} options.signal Abort signal object.\n * @param {?number} options.timeout Request timeout.\n * @returns {Promise} Request result.\n */\nFetchAdapter.prototype.execute = function(options) {\n  if (this._closed) {\n    return Promise.reject(\n      new faunaErrors.ClientClosed(\n        'The Client has already been closed',\n        'No subsequent requests can be issued after the .close method is called. ' +\n          'Consider creating a new Client instance'\n      )\n    )\n  }\n\n  var self = this\n  var timerId = null\n  var isStreaming = options.streamConsumer != null\n  // Use timeout only if no signal provided\n  var useTimeout = !options.signal && !!options.timeout\n  var ctrl = new AbortController()\n  var pendingRequest = {\n    isStreaming: isStreaming,\n    isAbortedByClose: false,\n    // This callback can be set during the .close method call to be notified\n    // on request ending to resolve .close's Promise only after all of the requests complete.\n    onComplete: null,\n  }\n\n  self._pendingRequests.set(ctrl, pendingRequest)\n\n  var onComplete = function() {\n    self._pendingRequests.delete(ctrl)\n\n    if (options.signal) {\n      options.signal.removeEventListener('abort', onAbort)\n    }\n\n    if (pendingRequest.onComplete) {\n      pendingRequest.onComplete()\n    }\n  }\n\n  var onSettle = function() {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n  }\n\n  var onResponse = function(response) {\n    onSettle()\n\n    var headers = responseHeadersAsObject(response.headers)\n    var processStream = isStreaming && response.ok\n\n    // Regular request - return text content immediately.\n    if (!processStream) {\n      onComplete()\n\n      return response.text().then(function(content) {\n        return {\n          body: content,\n          headers: headers,\n          status: response.status,\n        }\n      })\n    }\n\n    attachStreamConsumer(response, options.streamConsumer, onComplete)\n\n    return {\n      // Syntactic stream representation.\n      body: '[stream]',\n      headers: headers,\n      status: response.status,\n    }\n  }\n\n  var onError = function(error) {\n    onSettle()\n    onComplete()\n\n    return Promise.reject(\n      remapIfAbortError(error, function() {\n        if (!isStreaming && pendingRequest.isAbortedByClose) {\n          return new faunaErrors.ClientClosed(\n            'The request is aborted due to the Client#close ' +\n              'call with the force=true option'\n          )\n        }\n\n        return useTimeout ? new errors.TimeoutError() : new errors.AbortError()\n      })\n    )\n  }\n\n  var onAbort = function() {\n    ctrl.abort()\n  }\n\n  if (useTimeout) {\n    timerId = setTimeout(function() {\n      timerId = null\n      ctrl.abort()\n    }, options.timeout)\n  }\n\n  if (options.signal) {\n    options.signal.addEventListener('abort', onAbort)\n  }\n\n  return this._fetch(\n    util.formatUrl(options.origin, options.path, options.query),\n    {\n      method: options.method,\n      headers: options.headers,\n      body: options.body,\n      agent: this._keepAliveEnabledAgent,\n      signal: ctrl.signal,\n    }\n  )\n    .then(onResponse)\n    .catch(onError)\n}\n\n/**\n * Moves to the closed state, aborts streaming requests.\n * Aborts non-streaming requests if force is true,\n * waits until they complete otherwise.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Whether to force resources clean up.\n * @returns {Promise<void>}\n */\nFetchAdapter.prototype.close = function(opts) {\n  opts = opts || {}\n\n  this._closed = true\n\n  var promises = []\n\n  var abortOrWait = function(pendingRequest, ctrl) {\n    var shouldAbort = pendingRequest.isStreaming || opts.force\n\n    if (shouldAbort) {\n      pendingRequest.isAbortedByClose = true\n\n      return ctrl.abort()\n    }\n\n    promises.push(\n      new Promise(function(resolve) {\n        pendingRequest.onComplete = resolve\n      })\n    )\n  }\n\n  this._pendingRequests.forEach(abortOrWait)\n\n  var noop = function() {}\n\n  return Promise.all(promises).then(noop)\n}\n\n/**\n * Attaches streamConsumer specifically either for browser or NodeJS.\n * Minimum browser compatibility based on current code:\n * Chrome                52\n * Edge                  79\n * Firefox               65\n * IE                    NA\n * Opera                 39\n * Safari                10.1\n * Android Webview       52\n * Chrome for Android    52\n * Firefox for Android   65\n * Opera for Android     41\n * Safari on iOS         10.3\n * Samsung Internet      6.0\n *\n * @param {object} response Fetch response.\n * @param {object} consumer StreamConsumer.\n * @param {function} onComplete Callback fired when the stream ends or errors.\n * @private\n */\nfunction attachStreamConsumer(response, consumer, onComplete) {\n  var onError = function(error) {\n    onComplete()\n    consumer.onError(remapIfAbortError(error))\n  }\n\n  if (util.isNodeEnv()) {\n    response.body\n      .on('error', onError)\n      .on('data', consumer.onData)\n      .on('end', function() {\n        onComplete()\n        // To simulate how browsers behave in case of \"end\" event.\n        consumer.onError(new TypeError('network error'))\n      })\n\n    return\n  }\n\n  // ATTENTION: The following code is meant to run in browsers and is not\n  // covered by current test automation. Manual testing on major browsers\n  // is required after making changes to it.\n  try {\n    var reader = response.body.getReader()\n    var decoder = new TextDecoder('utf-8')\n\n    function pump() {\n      return reader.read().then(function(msg) {\n        if (!msg.done) {\n          var chunk = decoder.decode(msg.value, { stream: true })\n\n          consumer.onData(chunk)\n\n          return pump()\n        }\n\n        onComplete()\n        // In case a browser hasn't thrown the \"network error\" on stream's end\n        // we need to force it in order to provide a way to handle stream's\n        // ending.\n        consumer.onError(new TypeError('network error'))\n      })\n    }\n\n    pump().catch(onError)\n  } catch (err) {\n    throw new faunaErrors.StreamsNotSupported(\n      'Please, consider providing a Fetch API-compatible function ' +\n        'with streamable response bodies. ' +\n        err\n    )\n  }\n}\n\n/**\n * Remaps an AbortError thrown by fetch to HttpClient's one\n * for timeout and abort use-cases.\n *\n * @param {Error} error Error object.\n * @param {?function} errorFactory A factory called to construct an abort error.\n * @returns {Error} Remapped or original error.\n * @private\n */\nfunction remapIfAbortError(error, errorFactory) {\n  var isAbortError = error && error.name === 'AbortError'\n\n  if (!isAbortError) {\n    return error\n  }\n\n  if (errorFactory) {\n    return errorFactory()\n  }\n\n  return new errors.AbortError()\n}\n\n/**\n * Converts fetch Headers object into POJO.\n *\n * @param {object} headers Fetch Headers object.\n * @returns {object} Response headers as a plain object.\n * @private\n */\nfunction responseHeadersAsObject(headers) {\n  var result = {}\n\n  for (var header of headers.entries()) {\n    var key = header[0]\n    var value = header[1]\n\n    result[key] = value\n  }\n\n  return result\n}\n\nmodule.exports = FetchAdapter\n", "", "'use strict'\nvar packageJson = require('../../package.json')\nconst { getBrowserOsDetails } = require('../_util')\nvar util = require('../_util')\nvar errors = require('./errors')\n\n/**\n * The driver's internal HTTP client.\n *\n * @constructor\n * @param {Object} options Same as the {@link Client} options.\n * @private\n */\nfunction HttpClient(options) {\n  var isHttps = options.scheme === 'https'\n\n  // If the port is a falsy value - replace it with default one.\n  if (!options.port) {\n    options.port = isHttps ? 443 : 80\n  }\n\n  // HTTP2 adapter is applicable only if it's NodeJS env and\n  // no fetch API override provided (to preserve backward-compatibility).\n  var useHttp2Adapter = !options.fetch && util.isNodeEnv() && isHttp2Supported()\n\n  this._adapter = useHttp2Adapter\n    ? new (require('./http2Adapter'))({\n        http2SessionIdleTime: options.http2SessionIdleTime,\n      })\n    : new (require('./fetchAdapter'))({\n        isHttps: isHttps,\n        fetch: options.fetch,\n        keepAlive: options.keepAlive,\n      })\n  this._baseUrl = options.scheme + '://' + options.domain + ':' + options.port\n  this._secret = options.secret\n  this._headers = Object.assign({}, options.headers, getDefaultHeaders())\n  this._queryTimeout = options.queryTimeout\n  this._lastSeen = null\n  this._timeout = Math.floor(options.timeout * 1000)\n}\n\n/**\n * Returns last seen transaction time.\n *\n * @returns {number} The last seen transaction time.\n */\nHttpClient.prototype.getLastTxnTime = function() {\n  return this._lastSeen\n}\n\n/**\n * Sets the last seen transaction if the given timestamp is greater than then\n * know last seen timestamp.\n *\n * @param {number} time transaction timestamp.\n */\nHttpClient.prototype.syncLastTxnTime = function(time) {\n  if (this._lastSeen == null || this._lastSeen < time) {\n    this._lastSeen = time\n  }\n}\n\n/**\n * Cleans up any held resources.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Whether to force resources clean up.\n * @returns {Promise<void>}\n */\nHttpClient.prototype.close = function(opts) {\n  return this._adapter.close(opts)\n}\n\n/**\n * Executes an HTTP request.\n *\n * @param {?object} options Request parameters.\n * @param {?string} options.method Request method.\n * @param {?string} options.path Request path.\n * @param {?string} options.body Request body.\n * @param {?object} options.query Request query.\n * @params {?object} options.streamConsumer Stream consumer, if presented\n * the request will be \"streamed\" into streamConsumer.onData function.\n * @params {function} options.streamConsumer.onData Function called with a chunk of data.\n * @params {function} options.streamConsumer.onError Function called\n * when an error occurred.\n * when the stream is ended.\n * @param {?object} options.signal Abort signal object.\n * @param {?object} options.fetch Fetch API compatible function.\n * @param {?object} options.secret FaunaDB secret.\n * @param {?object} options.queryTimeout FaunaDB query timeout.\n * @returns {Promise} The response promise.\n */\nHttpClient.prototype.execute = function(options) {\n  options = options || {}\n\n  var invalidStreamConsumer =\n    options.streamConsumer &&\n    (typeof options.streamConsumer.onData !== 'function' ||\n      typeof options.streamConsumer.onError !== 'function')\n\n  if (invalidStreamConsumer) {\n    return Promise.reject(new TypeError('Invalid \"streamConsumer\" provided'))\n  }\n\n  var secret = options.secret || this._secret\n  var queryTimeout = options.queryTimeout || this._queryTimeout\n  var headers = this._headers\n\n  headers['Authorization'] = secret && secretHeader(secret)\n  headers['X-Last-Seen-Txn'] = this._lastSeen\n  headers['X-Query-Timeout'] = queryTimeout\n\n  return this._adapter.execute({\n    origin: this._baseUrl,\n    path: options.path || '/',\n    query: options.query,\n    method: options.method || 'GET',\n    headers: util.removeNullAndUndefinedValues(headers),\n    body: options.body,\n    signal: options.signal,\n    timeout: this._timeout,\n    streamConsumer: options.streamConsumer,\n  })\n}\n\nfunction secretHeader(secret) {\n  return 'Bearer ' + secret\n}\n\n/** @ignore */\nfunction getDefaultHeaders() {\n  var driverEnv = {\n    driver: ['javascript', packageJson.version].join('-'),\n  }\n\n  var isServiceWorker\n\n  try {\n    isServiceWorker = global instanceof ServiceWorkerGlobalScope\n  } catch (error) {\n    isServiceWorker = false\n  }\n\n  try {\n    if (util.isNodeEnv()) {\n      driverEnv.runtime = ['nodejs', process.version].join('-')\n      driverEnv.env = util.getNodeRuntimeEnv()\n      var os = require('os')\n      driverEnv.os = [os.platform(), os.release()].join('-')\n    } else if (isServiceWorker) {\n      driverEnv.runtime = 'Service Worker'\n    } else {\n      driverEnv.runtime = util.getBrowserDetails()\n      driverEnv.env = 'browser'\n      driverEnv.os = getBrowserOsDetails()\n    }\n  } catch (_) {}\n\n  var headers = {\n    'X-FaunaDB-API-Version': packageJson.apiVersion,\n  }\n\n  // TODO: api cors must be enabled to accept header X-Driver-Env\n  if (util.isNodeEnv()) {\n    headers['X-Driver-Env'] = Object.keys(driverEnv)\n      .map(key => [key, driverEnv[key].toLowerCase()].join('='))\n      .join('; ')\n  }\n  return headers\n}\n\nfunction isHttp2Supported() {\n  try {\n    require('http2')\n\n    return true\n  } catch (_) {\n    return false\n  }\n}\n\nmodule.exports = {\n  HttpClient: HttpClient,\n  TimeoutError: errors.TimeoutError,\n  AbortError: errors.AbortError,\n}\n", "'use strict'\n\n/** @module stream */\n\n// NOTE: Although implemented in a separate module, streaming shares internal\n// responsibilities with both Client and HTTP interfaces, such as updating last\n// seen transaction timestamp. Therefore, this implementation\n// sometimes breaks encapsulation and calls internal getters and methods. As a\n// general rule: it's okay to call internal methods. You can interpret this\n// as calling for a package visible method in languages with fine-grained\n// visibility control. However, DO NOT change any internal state from outside of\n// its context as it'd most certainly lead to errors.\n\nrequire('abort-controller/polyfill')\nvar RequestResult = require('./RequestResult')\nvar errors = require('./errors')\nvar json = require('./_json')\nvar http = require('./_http')\nvar q = require('./query')\nvar util = require('./_util')\n\nvar DefaultEvents = ['start', 'error', 'version', 'history_rewrite']\nvar DocumentStreamEvents = DefaultEvents.concat(['snapshot'])\n\n/**\n * The internal stream client interface. This class handles the network side of\n * a stream subscription.\n *\n * @constructor\n * @param {Client} client The FaunaDB client.\n * @param {module:query~ExprArg} expression The FQL expression you are subscribing to.\n * @param {module:stream~Options} options The stream options.\n * @param {function} onEvent The stream event's callback function.\n * @private\n */\nfunction StreamClient(client, expression, options, onEvent) {\n  options = util.applyDefaults(options, {\n    fields: null,\n  })\n\n  this._client = client\n  this._onEvent = onEvent\n  this._query = q.wrap(expression)\n  this._urlParams = options.fields ? { fields: options.fields.join(',') } : null\n  this._abort = new AbortController()\n  this._state = 'idle'\n}\n\n/**\n * Takes a snapshot of the current query. Assumes the subscribed query returns a\n * reference.\n */\nStreamClient.prototype.snapshot = function() {\n  var self = this\n  self._client\n    .query(q.Get(self._query))\n    .then(function(doc) {\n      self._onEvent({\n        type: 'snapshot',\n        event: doc,\n      })\n    })\n    .catch(function(error) {\n      self._onEvent({\n        type: 'error',\n        event: error,\n      })\n    })\n}\n\n/** Initiates the stream subscription.  */\nStreamClient.prototype.subscribe = function() {\n  var self = this\n\n  if (self._state === 'idle') {\n    self._state = 'open'\n  } else {\n    throw new Error(\n      'Subscription#start should not be called several times, ' +\n        'consider instantiating a new stream instead.'\n    )\n  }\n\n  var body = JSON.stringify(self._query)\n  var startTime = Date.now()\n  var buffer = ''\n\n  function onResponse(response) {\n    var endTime = Date.now()\n    var parsed\n\n    try {\n      parsed = json.parseJSON(response.body)\n    } catch (_) {\n      parsed = response.body\n    }\n\n    var result = new RequestResult(\n      'POST',\n      'stream',\n      self._urlParams,\n      body,\n      self._query,\n      response.body,\n      parsed,\n      response.status,\n      response.headers,\n      startTime,\n      endTime\n    )\n\n    self._client._handleRequestResult(response, result)\n  }\n\n  function onData(data) {\n    var result = json.parseJSONStreaming(buffer + data)\n\n    buffer = result.buffer\n\n    result.values.forEach(function(event) {\n      if (event.txn !== undefined) {\n        self._client.syncLastTxnTime(event.txn)\n      }\n\n      if (event.event === 'error') {\n        onError(new errors.StreamErrorEvent(event))\n      } else {\n        self._onEvent(event)\n      }\n    })\n  }\n\n  function onError(error) {\n    // AbortError is triggered as result of calling\n    // close() on a Subscription. There's no need to relay this event back up.\n    if (error instanceof http.AbortError) {\n      return\n    }\n\n    self._onEvent({\n      type: 'error',\n      event: error,\n    })\n  }\n\n  self._client._http\n    .execute({\n      method: 'POST',\n      path: 'stream',\n      body: body,\n      query: self._urlParams,\n      signal: this._abort.signal,\n      streamConsumer: {\n        onError: onError,\n        onData: onData,\n      },\n    })\n    .then(onResponse)\n    .catch(onError)\n}\n\n/** Closes the stream subscription by aborting its underlying http request. */\nStreamClient.prototype.close = function() {\n  if (this._state !== 'closed') {\n    this._state = 'closed'\n    this._abort.abort()\n  }\n}\n\n/**\n * Event dispatch interface for stream subscription.\n *\n * @constructor\n * @param {string[]} allowedEvents List of allowed events.\n * @private\n */\nfunction EventDispatcher(allowedEvents) {\n  this._allowedEvents = allowedEvents\n  this._listeners = {}\n}\n\n/** Subscribe to an event\n *\n * @param {string} type The event type.\n * @param {module:stream~Subscription~eventCalllback} callback\n *   The event's callback.\n */\nEventDispatcher.prototype.on = function(type, callback) {\n  if (this._allowedEvents.indexOf(type) === -1) {\n    throw new Error('Unknown event type: ' + type)\n  }\n  if (this._listeners[type] === undefined) {\n    this._listeners[type] = []\n  }\n  this._listeners[type].push(callback)\n}\n\n/**\n * Dispatch the given event to the appropriate listeners.\n *\n * @param {Object} event The event.\n */\nEventDispatcher.prototype.dispatch = function(event) {\n  var listeners = this._listeners[event.type]\n  if (!listeners) {\n    return\n  }\n\n  for (var i = 0; i < listeners.length; i++) {\n    listeners[i].call(null, event.event, event)\n  }\n}\n\n/**\n * Stream's start event. A stream subscription always begins with a start event.\n * Upcoming events are guaranteed to have transaction timestamps equal to or greater than\n * the stream's start timestamp.\n *\n * @event module:stream~Subscription#start\n * @type {object}\n * @property {string} type='start'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {module:number} event\n *   The stream start timestamp.\n */\n\n/**\n * A version event occurs upon any modifications to the current state of the\n * subscribed document.\n *\n * @event module:stream~Subscription#version\n * @type {object}\n * @property {string} type='version'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {object} event\n *   The event's data.\n */\n\n/**\n * A history rewrite event occurs upon any modifications to the history of the\n * subscribed document.\n *\n * @event module:stream~Subscription#history_rewrite\n * @type {object}\n * @property {string} type='history_rewrite'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {object} event\n *   The event's data.\n */\n\n/**\n * A snapshot event. A snapshot event is fired once the `document` stream helper\n * finishes loading the subscribed document's snapshot data. See {@link\n * Client#stream} for more details on the `document` stream helper.\n *\n * @event module:stream~Subscription#snapshot\n * @type {object}\n * @property {string} type='snapshot'\n *   The event type.\n * @property {number} txn\n *   The event's transaction timestamp.\n * @property {object} event\n *   The event's data.\n */\n\n/**\n * An error event is fired both for client and server errors that may occur as\n * a result of a subscription.\n *\n * @event module:stream~Subscription#error\n * @type {object}\n * @property {string} type='error'\n *   The event type.\n * @property {?number} txn\n *   The event's transaction timestamp.\n * @property {Error} event\n *   The underlying error.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string[]} [fields=['action', 'document', 'diff', 'prev']]\n *   The fields event fields to opt-in during stream subscription. Possible\n *   options:\n *   * 'action': The action type\n *   * 'document': The document's data\n *   * 'diff': The difference between 'document' and 'prev'\n *   * 'prev': The event's previous data\n */\n\n/**\n * The callback to be executed when an new event occurs.\n *\n * @callback module:stream~Subscription~eventCalllback\n * @param {any} data The event's data field.\n * @param {object} event The event's entire object.\n */\n\n/**\n * A stream subscription which dispatches events received to the registered\n * listener functions. This class must be constructed via {@link Client#stream}\n * method.\n *\n * @constructor\n * @param {StreamClient} client\n *   Internal stream client interface.\n * @param {EventDispatcher} dispatcher\n *   Internal event dispatcher interface.\n */\nfunction Subscription(client, dispatcher) {\n  this._client = client\n  this._dispatcher = dispatcher\n}\n\n/**\n * Subscribes to an event type.\n *\n * @param {string} event\n *   The event's type.\n * @param {module:stream~Subscription~eventCalllback} callback\n *   A callback function.\n *\n * @returns {module:stream~Subscription} This instance.\n */\nSubscription.prototype.on = function(type, callback) {\n  this._dispatcher.on(type, callback)\n  return this\n}\n\n/**\n * Initiates the underlying subscription network calls.\n * @returns {module:stream~Subscription} This instance.\n */\nSubscription.prototype.start = function() {\n  this._client.subscribe()\n  return this\n}\n\n/**\n * Stops the current subscription and closes the underlying network connection.\n */\nSubscription.prototype.close = function() {\n  this._client.close()\n}\n\n/**\n * Stream API factory function. See {@link Client#stream} for details on how to\n * use stream's public interface.\n * @private\n */\nfunction StreamAPI(client) {\n  var api = function(expression, options) {\n    var dispatcher = new EventDispatcher(DefaultEvents)\n    var streamClient = new StreamClient(client, expression, options, function(\n      event\n    ) {\n      dispatcher.dispatch(event)\n    })\n    return new Subscription(streamClient, dispatcher)\n  }\n\n  api.document = function(expression, options) {\n    var buffer = []\n    var buffering = true\n    var dispatcher = new EventDispatcher(DocumentStreamEvents)\n    var streamClient = new StreamClient(client, expression, options, onEvent)\n\n    function onEvent(event) {\n      switch (event.type) {\n        case 'start':\n          dispatcher.dispatch(event)\n          streamClient.snapshot()\n          break\n        case 'snapshot':\n          resume(event)\n          break\n        case 'error':\n          dispatcher.dispatch(event)\n          break\n        default:\n          if (buffering) {\n            buffer.push(event)\n          } else {\n            dispatcher.dispatch(event)\n          }\n      }\n    }\n\n    function resume(snapshotEvent) {\n      dispatcher.dispatch(snapshotEvent)\n      for (var i = 0; i < buffer.length; i++) {\n        var bufferedEvent = buffer[i]\n        if (bufferedEvent.txn > snapshotEvent.event.ts) {\n          dispatcher.dispatch(bufferedEvent)\n        }\n      }\n      buffering = false\n      buffer = null\n    }\n\n    return new Subscription(streamClient, dispatcher)\n  }\n\n  return api\n}\n\nmodule.exports = {\n  StreamAPI: StreamAPI,\n}\n", "'use strict'\n\nvar packageJson = require('../package.json')\nvar PageHelper = require('./PageHelper')\nvar RequestResult = require('./RequestResult')\nvar errors = require('./errors')\nvar http = require('./_http')\nvar json = require('./_json')\nvar query = require('./query')\nvar stream = require('./stream')\nvar util = require('./_util')\nvar values = require('./values')\n\nvar notifyAboutNewVersion = util.notifyAboutNewVersion()\n\n/**\n * The callback that will be executed after every completed request.\n *\n * @callback Client~observerCallback\n * @param {RequestResult} res\n */\n\n/**\n * **WARNING: This is an experimental feature. There are no guarantees to\n * its API stability and/or service availability. DO NOT USE IT IN\n * PRODUCTION**.\n *\n * Creates a subscription to the result of the given read-only expression. When\n * executed, the expression must only perform reads and produce a single\n * streamable type, such as a reference or a version. Expressions that attempt\n * to perform writes or produce non-streamable types will result in an error.\n * Otherwise, any expression can be used to initiate a stream, including\n * user-defined function calls.\n *\n * The subscription returned by this method does not issue any requests until\n * the {@link module:stream~Subscription#start} method is called. Make sure to\n * subscribe to the events of interest, otherwise the received events are simply\n * ignored. For example:\n *\n * ```\n * client.stream(document.ref)\n *   .on('version', version => console.log(version))\n *   .on('error', error => console.log(error))\n *   .start()\n * ```\n *\n * Please note that streams are not temporal, meaning that there is no option to\n * configure its starting timestamp. The stream will, however, state its initial\n * subscription time via the {@link module:stream~Subscription#event:start}\n * event. A common programming mistake is to read a document, then initiate a\n * subscription. This approach can miss events that occurred between the initial\n * read and the subscription request. To prevent event loss, make sure the\n * subscription has started before performing a data load. The following example\n * buffer events until the document's data is loaded:\n *\n * ```\n * var buffer = []\n * var loaded = false\n *\n * client.stream(document.ref)\n *   .on('start', ts => {\n *     loadData(ts).then(data => {\n *       processData(data)\n *       processBuffer(buffer)\n *       loaded = true\n *     })\n *   })\n *   .on('version', version => {\n *     if (loaded) {\n *       processVersion(version)\n *     } else {\n *       buffer.push(version)\n *     }\n *   })\n *   .start()\n * ```\n *\n * The reduce boilerplate, the `document` helper implements a similar\n * functionality, except it discards events prior to the document's snapshot\n * time. The expression given to this helper must be a reference as it\n * internally runs a {@link module:query~Get} call with it. The example above\n * can be rewritten as:\n *\n * ```\n * client.stream.document(document.ref)\n *   .on('snapshot', data => processData(data))\n *   .on('version', version => processVersion(version))\n *   .start()\n * ```\n *\n * Be aware that streams are not available in all browsers. If the client can't\n * initiate a stream, an error event with the {@link\n * module:errors~StreamsNotSupported} error will be emmited.\n *\n * To stop a subscription, call the {@link module:stream~Subscription#close}\n * method:\n *\n * ```\n * var subscription = client.stream(document.ref)\n *   .on('version', version => processVersion(version))\n *   .start()\n *\n * // ...\n * subscription.close()\n * ```\n *\n * @param {module:query~ExprArg} expression\n *   The expression to subscribe to. Created from {@link module:query}\n *   functions.\n *\n * @param {?module:stream~Options} options\n *   Object that configures the stream.\n *\n * @property {function} document\n *  A document stream helper. See {@link Client#stream} for more information.\n *\n * @see module:stream~Subscription\n *\n * @function\n * @name Client#stream\n * @returns {module:stream~Subscription} A new subscription instance.\n */\n\n/**\n * A client for interacting with FaunaDB.\n *\n * Users will mainly call the {@link Client#query} method to execute queries, or\n * the {@link Client#stream} method to subscribe to streams.\n *\n * See the [FaunaDB Documentation](https://fauna.com/documentation) for detailed examples.\n *\n * All methods return promises containing a JSON object that represents the FaunaDB response.\n * Literal types in the response object will remain as strings, Arrays, and objects.\n * FaunaDB types, such as {@link Ref}, {@link SetRef}, {@link FaunaTime}, and {@link FaunaDate} will\n * be converted into the appropriate object.\n *\n * (So if a response contains `{ \"@ref\": \"collections/frogs/123\" }`,\n * it will be returned as `new Ref(\"collections/frogs/123\")`.)\n *\n * @constructor\n * @param {?Object} options\n *   Object that configures this FaunaDB client.\n * @param {?string} options.domain\n *   Base URL for the FaunaDB server.\n * @param {?{ string: string }} options.headers\n *   Base URL for the FaunaDB server.\n * @param {?('http'|'https')} options.scheme\n *   HTTP scheme to use.\n * @param {?number} options.port\n *   Port of the FaunaDB server.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @param {?number} options.timeout Read timeout in seconds.\n * @param {?Client~observerCallback} options.observer\n *   Callback that will be called after every completed request.\n * @param {?boolean} options.keepAlive\n *   Configures http/https keepAlive option (ignored in browser environments)\n * @param {?fetch} options.fetch\n *   a fetch compatible [API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) for making a request\n * @param {?number} options.queryTimeout\n *   Sets the maximum amount of time (in milliseconds) for query execution on the server\n * @param {?number} options.http2SessionIdleTime\n *   Sets the maximum amount of time (in milliseconds) an HTTP2 session may live\n *   when there's no activity. Must either be a non-negative integer, or Infinity to allow the\n *   HTTP2 session to live indefinitely (use `Client#close` to manually terminate the client).\n *   Only applicable for NodeJS environment (when http2 module is used). Default is 500ms;\n *   can also be configured via the FAUNADB_HTTP2_SESSION_IDLE_TIME environment variable\n *   which has the highest priority and overrides the option passed into the Client constructor.\n * @param {?boolean} options.checkNewVersion\n *   Enabled by default. Prints a message to the terminal when a newer driver is available.\n */\nfunction Client(options) {\n  var http2SessionIdleTime = getHttp2SessionIdleTime()\n\n  options = util.applyDefaults(options, {\n    domain: 'db.fauna.com',\n    scheme: 'https',\n    port: null,\n    secret: null,\n    timeout: 60,\n    observer: null,\n    keepAlive: true,\n    headers: {},\n    fetch: undefined,\n    queryTimeout: null,\n    http2SessionIdleTime: http2SessionIdleTime.value,\n    checkNewVersion: true,\n  })\n  notifyAboutNewVersion(options.checkNewVersion)\n\n  if (http2SessionIdleTime.shouldOverride) {\n    options.http2SessionIdleTime = http2SessionIdleTime.value\n  }\n\n  this._observer = options.observer\n  this._http = new http.HttpClient(options)\n  this.stream = stream.StreamAPI(this)\n}\n\n/**\n * Current API version.\n *\n * @type {string}\n */\nClient.apiVersion = packageJson.apiVersion\n\n/**\n * Executes a query via the FaunaDB Query API.\n * See the [docs](https://app.fauna.com/documentation/reference/queryapi),\n * and the query functions in this documentation.\n * @param expression {module:query~ExprArg}\n *   The query to execute. Created from {@link module:query} functions.\n * @param {?Object} options\n *   Object that configures the current query, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @return {external:Promise<Object>} FaunaDB response object.\n */\nClient.prototype.query = function(expression, options) {\n  return this._execute('POST', '', query.wrap(expression), null, options)\n}\n\n/**\n * Returns a {@link PageHelper} for the given Query expression.\n * This provides a helpful API for paginating over FaunaDB responses.\n * @param expression {Expr}\n *   The Query expression to paginate over.\n * @param params {Object}\n *   Options to be passed to the paginate function. See [paginate](https://app.fauna.com/documentation/reference/queryapi#read-functions).\n * @param options {?Object}\n *   Object that configures the current pagination queries, overriding FaunaDB client options.\n * @param {?string} options.secret FaunaDB secret (see [Reference Documentation](https://app.fauna.com/documentation/intro/security))\n * @returns {PageHelper} A PageHelper that wraps the provided expression.\n */\nClient.prototype.paginate = function(expression, params, options) {\n  params = util.defaults(params, {})\n  options = util.defaults(options, {})\n\n  return new PageHelper(this, expression, params, options)\n}\n\n/**\n * Sends a `ping` request to FaunaDB.\n * @return {external:Promise<string>} Ping response.\n */\nClient.prototype.ping = function(scope, timeout) {\n  return this._execute('GET', 'ping', null, { scope: scope, timeout: timeout })\n}\n\n/**\n * Get the freshest timestamp reported to this client.\n * @returns {number} the last seen transaction time\n */\nClient.prototype.getLastTxnTime = function() {\n  return this._http.getLastTxnTime()\n}\n\n/**\n * Sync the freshest timestamp seen by this client.\n *\n * This has no effect if staler than currently stored timestamp.\n * WARNING: This should be used only when coordinating timestamps across\n *          multiple clients. Moving the timestamp arbitrarily forward into\n *          the future will cause transactions to stall.\n * @param time {number} the last seen transaction time\n */\nClient.prototype.syncLastTxnTime = function(time) {\n  this._http.syncLastTxnTime(time)\n}\n\n/**\n * Closes the client session and cleans up any held resources.\n * By default, it will wait for any ongoing requests to complete on their own;\n * streaming requests are terminated forcibly. Any subsequent requests will\n * error after the .close method is called.\n * Should be used at application termination in order to release any open resources\n * and allow the process to terminate e.g. when the custom http2SessionIdleTime parameter is used.\n *\n * @param {?object} opts Close options.\n * @param {?boolean} opts.force Specifying this property will force any ongoing\n * requests to terminate instead of gracefully waiting until they complete.\n * This may result in an ERR_HTTP2_STREAM_CANCEL error for NodeJS.\n * @returns {Promise<void>}\n */\nClient.prototype.close = function(opts) {\n  return this._http.close(opts)\n}\n\nClient.prototype._execute = function(method, path, data, query, options) {\n  query = util.defaults(query, null)\n\n  if (\n    path instanceof values.Ref ||\n    util.checkInstanceHasProperty(path, '_isFaunaRef')\n  ) {\n    path = path.value\n  }\n\n  if (query !== null) {\n    query = util.removeUndefinedValues(query)\n  }\n\n  var startTime = Date.now()\n  var self = this\n  var body =\n    ['GET', 'HEAD'].indexOf(method) >= 0 ? undefined : JSON.stringify(data)\n\n  return this._http\n    .execute(\n      Object.assign({}, options, {\n        path: path,\n        query: query,\n        method: method,\n        body: body,\n      })\n    )\n    .then(function(response) {\n      var endTime = Date.now()\n      var responseObject = json.parseJSON(response.body)\n      var result = new RequestResult(\n        method,\n        path,\n        query,\n        body,\n        data,\n        response.body,\n        responseObject,\n        response.status,\n        response.headers,\n        startTime,\n        endTime\n      )\n      self._handleRequestResult(response, result, options)\n\n      return responseObject['resource']\n    })\n}\n\nClient.prototype._handleRequestResult = function(response, result, options) {\n  var txnTimeHeaderKey = 'x-txn-time'\n\n  if (response.headers[txnTimeHeaderKey] != null) {\n    this.syncLastTxnTime(parseInt(response.headers[txnTimeHeaderKey], 10))\n  }\n\n  var observers = [this._observer, options && options.observer]\n\n  observers.forEach(observer => {\n    if (typeof observer == 'function') {\n      observer(result, this)\n    }\n  })\n\n  errors.FaunaHTTPError.raiseForStatusCode(result)\n}\n\nfunction getHttp2SessionIdleTime() {\n  var fromEnv = util.getEnvVariable('FAUNADB_HTTP2_SESSION_IDLE_TIME')\n  var parsed =\n    // Allow either \"Infinity\" or parsable integer string.\n    fromEnv === 'Infinity' ? Infinity : parseInt(fromEnv, 10)\n  var useEnvVar = !isNaN(parsed)\n\n  return {\n    shouldOverride: useEnvVar,\n    value: useEnvVar ? parsed : 500,\n  }\n}\n\nmodule.exports = Client\nmodule.exports.resetNotifyAboutNewVersion = function() {\n  notifyAboutNewVersion = util.notifyAboutNewVersion()\n}\n", "'use strict'\n\nvar json = require('./_json')\n\n/**\n * Functions to assist with debug logging.\n * @module clientLogger\n */\n\n/**\n * A user provided log line handler.\n *\n * @callback loggerCallback\n * @param {string} logged\n */\n\n/**\n * Function that can be the `observer` for a {@link Client}.\n * Will call `loggerFunction` with a string representation of each {@link RequestResult}.\n *\n * An example logging string:\n * ```plain\n * Fauna POST /\n * Request JSON: {\n *   \"data\": ...\n * }\n * Response headers: {\n *    \"x-faunadb-host\": ...,\n *    \"x-faunadb-build\": ...,\n *    \"connection\": \"close\",\n *    \"content-length\": ...,\n *    \"content-type\": \"application/json;charset=utf-8\"\n *  }\n * Response JSON: {\n *    \"resource\": {\n *      \"ref\": { ... },\n *      \"class\": { ... },\n *      \"ts\": ...\n *    }\n *  }\n * Response (201): Network latency 13ms\n * ```\n *\n * @param {loggerCallback} loggerFunction\n * @return {Client~observerCallback}\n * @example\n * var client = new Client({\n *   ... other options ...\n *   observer: logger(console.log)\n * })\n * client.ping() // Logs the request and response.\n */\nfunction logger(loggerFunction) {\n  return function(requestResult, client) {\n    return loggerFunction(showRequestResult(requestResult), client)\n  }\n}\n\n/**\n * Convenience function used by {@link logger} to transform a {@link RequestResult}\n * to a string for logging.\n * @param {RequestResult} requestResult\n * @returns {string} string to be logged.\n */\nfunction showRequestResult(requestResult) {\n  var query = requestResult.query,\n    method = requestResult.method,\n    path = requestResult.path,\n    requestContent = requestResult.requestContent,\n    responseHeaders = requestResult.responseHeaders,\n    responseContent = requestResult.responseContent,\n    statusCode = requestResult.statusCode,\n    timeTaken = requestResult.timeTaken\n\n  var out = ''\n\n  function log(str) {\n    out = out + str\n  }\n\n  log('Fauna ' + method + ' /' + path + _queryString(query) + '\\n')\n  if (requestContent != null) {\n    log('  Request JSON: ' + _showJSON(requestContent) + '\\n')\n  }\n  log('  Response headers: ' + _showJSON(responseHeaders) + '\\n')\n  log('  Response JSON: ' + _showJSON(responseContent) + '\\n')\n  log('  Response (' + statusCode + '): Network latency ' + timeTaken + 'ms\\n')\n\n  return out\n}\n\nfunction _indent(str) {\n  var indentStr = '  '\n  return str.split('\\n').join('\\n' + indentStr)\n}\n\nfunction _showJSON(object) {\n  return _indent(json.toJSON(object, true))\n}\n\nfunction _queryString(query) {\n  if (query == null) {\n    return ''\n  }\n\n  var keys = Object.keys(query)\n  if (keys.length === 0) {\n    return ''\n  }\n\n  var pairs = keys.map(function(key) {\n    return key + '=' + query[key]\n  })\n  return '?' + pairs.join('&')\n}\n\nmodule.exports = {\n  logger: logger,\n  showRequestResult: showRequestResult,\n}\n", "var query = require('./src/query')\nvar util = require('./src/_util')\nvar parseJSON = require('./src/_json').parseJSON\n\nmodule.exports = util.mergeObjects(\n  {\n    Client: require('./src/Client'),\n    Expr: require('./src/Expr'),\n    PageHelper: require('./src/PageHelper'),\n    RequestResult: require('./src/RequestResult'),\n\n    clientLogger: require('./src/clientLogger'),\n    errors: require('./src/errors'),\n    values: require('./src/values'),\n    query: query,\n    parseJSON: parseJSON,\n  },\n  query\n)\n", "declare global {\n  interface Array<T> {\n    sortBy(\n      o: Partial<\n        Record<\n          keyof T,\n          keyof typeof sortOps\n        >\n      >\n    ): Array<T>;\n  }\n}\n\nconst sortOps = {\n  number: (a: number, b: number) =>\n    (a || 0) - (b || 0),\n  \"-number\": (a: number, b: number) =>\n    -((a || 0) - (b || 0)),\n  gl: (a: number, b: number) =>\n    a >= 0 ? a - b : b - a,\n  \"abs(number)\": (\n    a: number,\n    b: number\n  ) =>\n    Math.abs(a || 0) - Math.abs(b || 0),\n  \"-abs(number)\": (\n    a: number,\n    b: number\n  ) =>\n    -(\n      Math.abs(a || 0) -\n      Math.abs(b || 0)\n    ),\n  string: (a: string, b: string) =>\n    (a || \"\").localeCompare(b || \"\"),\n  date: (a: Date, b: Date) =>\n    (a || 0).valueOf() -\n    (b || 0).valueOf(),\n  noop: () => 0,\n};\n\nArray.prototype.sortBy = function <T>(\n  sortBy: Partial<\n    Record<\n      keyof T,\n      keyof typeof sortOps\n    >\n  >\n) {\n  return sort(this, sortBy);\n};\n\nexport function sort<T>(\n  items: Array<T>,\n  sortBy: Partial<\n    Record<\n      keyof T,\n      keyof typeof sortOps\n    >\n  >\n) {\n  const keys = Object.keys(sortBy);\n  return [...items].sort((a, b) => {\n    let result = 0;\n    keys.some(\n      (k) =>\n        !!(result = sortOps[sortBy[k]](\n          a[k],\n          b[k]\n        ))\n    );\n    return result;\n  });\n}\n", "import faunadb from \"faunadb\";\r\nimport { getGlobalState } from \"./fun/globalState\";\r\n\r\nclass GlobalModel {\r\n  #accessKeys = {\r\n    FAUNADB_SERVER_SECRET:\r\n      localStorage.getItem(\r\n        \"FAUNADB_SERVER_SECRET\"\r\n      ) as string,\r\n    FAUNADB_DOMAIN: \"db.us.fauna.com\",\r\n  };\r\n\r\n  public readonly CURRENT_USER =\r\n    localStorage.getItem(\"user\");\r\n\r\n  public readonly TAXRATE =\r\n    0.01 *\r\n    (getGlobalState<number>(\r\n      \"TAX_RATE\"\r\n    ) || 6.0);\r\n\r\n  public readonly BATCH_SIZE =\r\n    getGlobalState<number>(\r\n      \"BATCH_SIZE\"\r\n    ) || 1000;\r\n\r\n  public readonly primaryContact =\r\n    getGlobalState<{\r\n      companyName: string;\r\n      fullName: string;\r\n      addressLine1: string;\r\n      addressLine2: string;\r\n      telephone: string;\r\n    }>(\"primaryContact\") || {\r\n      companyName: \"Little Light Show\",\r\n      fullName: \"Nathan Alix\",\r\n      addressLine1: \"4 Andrea Lane\",\r\n      addressLine2:\r\n        \"Greenville, SC 29615\",\r\n      telephone: \"\",\r\n    };\r\n\r\n  constructor() {\r\n    if (\r\n      !this.#accessKeys\r\n        .FAUNADB_SERVER_SECRET\r\n    ) {\r\n      const secret =\r\n        prompt(\r\n          \"Provide the FAUNADB_SERVER_SECRET\"\r\n        ) || \"\";\r\n      this.#accessKeys.FAUNADB_SERVER_SECRET =\r\n        secret;\r\n      localStorage.setItem(\r\n        \"FAUNADB_SERVER_SECRET\",\r\n        secret\r\n      );\r\n    }\r\n  }\r\n\r\n  createClient() {\r\n    return new faunadb.Client({\r\n      secret:\r\n        this.#accessKeys\r\n          .FAUNADB_SERVER_SECRET,\r\n      domain:\r\n        this.#accessKeys.FAUNADB_DOMAIN,\r\n    });\r\n  }\r\n}\r\n\r\nexport const globals =\r\n  new GlobalModel();\r\n\r\nexport const createClient = () =>\r\n  globals.createClient();\r\n\r\nexport const isDebug =\r\n  location.href.includes(\"localhost\") ||\r\n  location.search.includes(\"debug\");\r\n\r\nexport const isOffline = () =>\r\n  true ===\r\n  getGlobalState<boolean>(\r\n    \"work_offline\"\r\n  );\r\n\r\nfunction isNetlifyBuildContext() {\r\n  return (\r\n    0 <=\r\n    location.href.indexOf(\"netlify\")\r\n  );\r\n}\r\n\r\nexport const CONTEXT =\r\n  isNetlifyBuildContext()\r\n    ? \"NETLIFY\"\r\n    : \"dev\";\r\n", "let globalState: Record<string, any>;\nfunction forceGlobalState() {\n  return (globalState =\n    globalState ||\n    JSON.parse(\n      localStorage.getItem(\n        \"__GLOBAL_STATE__\"\n      ) || \"{}\"\n    ));\n}\n\nexport function setGlobalState(\n  key: string,\n  value: any\n) {\n  const state = forceGlobalState();\n  const [head, ...tail] =\n    key.split(\".\");\n  if (!tail.length) {\n    state[key] = value;\n  } else {\n    let o = (state[head] =\n      state[head] || {});\n    tail.forEach(\n      (k) => (o[k] = o[k] || {})\n    );\n    o[tail[tail.length - 1]] = value;\n  }\n  localStorage.setItem(\n    \"__GLOBAL_STATE__\",\n    JSON.stringify(state)\n  );\n}\n\nexport function getGlobalState<T>(\n  key: string\n): T | null {\n  const state = forceGlobalState();\n  const [head, ...tail] =\n    key.split(\".\");\n  if (!tail.length)\n    return state[head] as T;\n\n  let value = state[head];\n  if (\n    !!value &&\n    typeof value !== \"object\"\n  )\n    throw `key does not define an object: ${head}`;\n  tail.every(\n    (k) =>\n      typeof value === \"object\" &&\n      (value = value[k]) &&\n      true\n  );\n  return value;\n}\n", "import { isDebug } from \"../globals\";\n\nfunction log(...message: Array<any>) {\n  if (!isDebug) return;\n  console.log(...message);\n}\n\nexport function on(\n  domNode: Element,\n  eventName: string,\n  cb: () => void\n) {\n  domNode.addEventListener(\n    eventName,\n    cb\n  );\n}\n\nexport function trigger(\n  domNode: Element,\n  eventName: string\n) {\n  log(\"trigger\", eventName);\n  domNode.dispatchEvent(\n    new Event(eventName)\n  );\n}\n", "export const routes = {\n  home: () => \"/index.html\",\n  identity: ({ context, target }) =>\n    `/app/identity.html?target=${target}&context=${context}`,\n  createInvoice: () =>\n    `/app/invoice/invoice.html`,\n  invoice: (id: string) =>\n    `/app/invoice/invoice.html?id=${id}`,\n  allInvoices: () =>\n    `/app/invoice/invoices.html`,\n  createInventory: () =>\n    `/app/inventory/index.html`,\n  inventory: (id: string) =>\n    `/app/inventory/index.html?id=${id}`,\n  allInventoryItems: () =>\n    `/app/inventory/index.html?id=all`,\n  allLedgers: () =>\n    `/app/gl/index.html?print=all`,\n  printLedger: (id: string) =>\n    `/app/gl/index.html?print=${id}`,\n  createLedger: () =>\n    \"/app/gl/index.html\",\n  editLedger: (id: string) =>\n    `/app/gl/index.html?id=${id}`,\n  dashboard: () => \"/app/index.html\",\n  admin: () => \"/app/admin/index.html\",\n  gl: {\n    byAccount: (id: string) =>\n      `/app/gl/index.html?account=${id}`,\n  },\n};\n", "export function asCurrency(\n  value: number\n) {\n  return (value || 0).toFixed(2);\n}\n\nexport function asQuantity(\n  value: number\n) {\n  if (typeof value === \"string\")\n    return value;\n  return (value || 0).toFixed(0);\n}\n", "export function ticksInSeconds(\n  ticks: number\n) {\n  return ticks / 1000;\n}\n", "import { isDebug } from \"../globals\";\nimport { getGlobalState } from \"../fun/globalState\";\nimport { ticksInSeconds } from \"../fun/ticksInSeconds\";\n\nconst MAX_AGE =\n  getGlobalState<number>(\n    \"CACHE_MAX_AGE\"\n  ) || 0;\n\nexport class ServiceCache<\n  T extends { id?: string }\n> {\n  lastWriteTime() {\n    return this.lastWrite;\n  }\n\n  renew() {\n    this.lastWrite = Date.now();\n    this.save();\n  }\n\n  private data: Array<T>;\n  private lastWrite: number;\n  private readonly table: string;\n\n  constructor(\n    private options: {\n      table: string;\n      maxAge?: number;\n    }\n  ) {\n    options.maxAge =\n      options.maxAge || MAX_AGE;\n    this.table = options.table;\n    const raw = localStorage.getItem(\n      `table_${this.table}`\n    );\n    if (!raw) {\n      this.data = [];\n      this.lastWrite = 0;\n    } else {\n      const info = JSON.parse(raw) as {\n        lastWrite: number;\n        data: T[];\n      };\n\n      this.lastWrite = info.lastWrite;\n      this.data = info.data;\n    }\n  }\n\n  private save() {\n    localStorage.setItem(\n      `table_${this.table}`,\n      JSON.stringify({\n        lastWrite: this.lastWrite,\n        data: this.data,\n      })\n    );\n  }\n\n  deleteLineItem(id: string) {\n    const index = this.data.findIndex(\n      (i) => i.id === id\n    );\n    if (-1 < index)\n      this.data.splice(index, 1);\n    this.save();\n  }\n\n  updateLineItem(lineItem: T) {\n    const index = this.data.findIndex(\n      (i) => i.id === lineItem.id\n    );\n    if (-1 < index) {\n      this.data[index] = lineItem;\n    } else {\n      this.data.push(lineItem);\n    }\n    this.save();\n  }\n\n  expired() {\n    const age = ticksInSeconds(\n      Date.now() - this.lastWrite\n    );\n    return this.options.maxAge! < age;\n  }\n\n  getById(id: string) {\n    return this.data.find(\n      (item) => item.id === id\n    );\n  }\n\n  get() {\n    return this.data;\n  }\n}\n", "import { ServiceCache } from \"./ServiceCache.js\";\nimport { query as q } from \"faunadb\";\nimport {\n  globals,\n  createClient,\n  isOffline as globalIsOffline,\n} from \"../globals.js\";\nimport {\n  getGlobalState,\n  setGlobalState,\n} from \"../fun/globalState\";\nimport { toast } from \"../ux/Toaster.js\";\nimport { getDatabaseTime } from \"./getDatabaseTime.js\";\n\nconst { BATCH_SIZE, CURRENT_USER } =\n  globals;\n\ninterface SynchronizationAttributes {\n  id?: string;\n  create_date: number;\n  update_date: number;\n  delete_date?: number;\n}\n\nexport class StorageModel<\n  T extends Partial<SynchronizationAttributes>\n> {\n  private tableName: string;\n  protected cache: ServiceCache<T>;\n\n  constructor(\n    private options: {\n      tableName: string;\n      maxAge?: number;\n      offline: boolean;\n    }\n  ) {\n    this.tableName = options.tableName;\n    this.cache = new ServiceCache<\n      T & SynchronizationAttributes\n    >({\n      table: options.tableName,\n      maxAge: options.maxAge,\n    });\n  }\n\n  private isOffline() {\n    return (\n      this.options.offline ||\n      globalIsOffline()\n    );\n  }\n\n  // return items [after_date, before_date)\n  async loadLatestData(args: {\n    lowerBound: number;\n    upperBound: number;\n  }) {\n    const size = BATCH_SIZE;\n\n    const { upperBound, lowerBound } =\n      args;\n\n    let after = null;\n    const client = createClient();\n    const result = [] as Array<\n      T & SynchronizationAttributes\n    >;\n\n    // only get one batch, advancing the sync time to date of last fetched record\n    // so if BATCH_SIZE items are fetched then the last item (and possibly more) will\n    // be fetched again, so BATCH_SIZE should be large.\n    let maximum_query_count = 1;\n    while (maximum_query_count--) {\n      const response =\n        (await client.query(\n          q.Map(\n            q.Paginate(\n              q.Filter(\n                q.Match(\n                  q.Index(\n                    `${this.tableName}_updates`\n                  )\n                ),\n                q.Lambda(\n                  \"item\",\n                  q.And(\n                    q.LTE(\n                      lowerBound,\n                      q.Select(\n                        [0],\n                        q.Var(\"item\")\n                      )\n                    ),\n                    q.LT(\n                      q.Select(\n                        [0],\n                        q.Var(\"item\")\n                      ),\n                      upperBound\n                    )\n                  )\n                )\n              ),\n              after\n                ? {\n                    size,\n                    after,\n                  }\n                : { size }\n            ),\n            q.Lambda(\n              \"item\",\n              q.Get(\n                q.Select(\n                  [1],\n                  q.Var(\"item\")\n                )\n              )\n            )\n          )\n        )) as {\n          after: any;\n          data: Array<{\n            ref: {\n              value: { id: string };\n            };\n            data: T &\n              SynchronizationAttributes;\n          }>;\n        };\n\n      const dataToImport =\n        response.data.map((item) => ({\n          ...item.data,\n          id: item.ref.value.id,\n        }));\n\n      result.push(...dataToImport);\n\n      // capture progress\n      // check for merge conflicts\n      dataToImport.forEach((item) => {\n        if (!item.id)\n          throw `item must have an id`;\n        const currentItem =\n          this.cache.getById(item.id);\n        if (\n          currentItem &&\n          this.isUpdated(currentItem)\n        ) {\n          toast(\n            `item changed remotely and locally: ${item.id}`\n          );\n        }\n        if (!!item.delete_date) {\n          this.cache.deleteLineItem(\n            item.id\n          );\n        } else {\n          this.cache.updateLineItem(\n            item\n          );\n        }\n      });\n\n      // capture progress\n      this.cache.renew();\n      dataToImport.length &&\n        setFutureSyncTime(\n          this.tableName,\n          dataToImport[\n            dataToImport.length - 1\n          ].update_date\n        );\n\n      after = response.after;\n      if (!after) {\n        // preserve the timestamp for a future sync run\n        // notice the next sync will pull in the data we just pushed\n        setFutureSyncTime(\n          this.tableName,\n          upperBound\n        );\n        break;\n      }\n    }\n\n    return result;\n  }\n\n  async synchronize() {\n    if (!CURRENT_USER)\n      throw \"user must be signed in\";\n\n    if (this.isOffline())\n      throw \"cannot synchronize in offline mode\";\n\n    const priorSyncTime =\n      getPriorSyncTime(this.tableName);\n\n    const currentSyncTime =\n      await getDatabaseTime();\n\n    // must capture before importing\n    // to prevent exporting what was imported\n    const dataToExport = this.cache\n      .get()\n      .filter(\n        (item) =>\n          item.update_date &&\n          item.update_date >\n            priorSyncTime\n      );\n\n    await this.loadLatestData({\n      lowerBound: priorSyncTime,\n      upperBound: currentSyncTime,\n    });\n\n    // apply local deletes\n    this.cache\n      .get()\n      .filter(\n        (item) => !!item.delete_date\n      )\n      .forEach(async (item) => {\n        if (!item.id)\n          throw \"all items must have an id\";\n        if (isOfflineId(item.id)) {\n          this.cache.deleteLineItem(\n            item.id\n          );\n        } else {\n          await this.removeItem(\n            item.id\n          );\n        }\n      });\n\n    // apply local updates\n    dataToExport.forEach(\n      async (item) => {\n        await this.upsertItem(item);\n      }\n    );\n\n    // reset the cache expiration stamp\n    this.cache.renew();\n  }\n\n  async removeItem(id: string) {\n    if (!CURRENT_USER)\n      throw \"user must be signed in\";\n\n    if (isOfflineId(id)) {\n      this.cache.deleteLineItem(id);\n      return;\n    }\n\n    if (this.isOffline()) {\n      const item =\n        this.cache.getById(id);\n      if (!item)\n        throw \"cannot remove an item that is not already there\";\n      item.delete_date = Date.now();\n      this.cache.updateLineItem(item);\n      return;\n    }\n\n    // online\n    const client = createClient();\n    await client.query(\n      q.Replace(\n        q.Ref(\n          q.Collection(this.tableName),\n          id\n        ),\n        {\n          data: {\n            id: id,\n            user: CURRENT_USER,\n            update_date: q.ToMillis(\n              q.Now()\n            ),\n            delete_date: q.ToMillis(\n              q.Now()\n            ),\n          },\n        }\n      )\n    );\n    this.cache.deleteLineItem(id);\n  }\n\n  async getItem(id: string) {\n    if (!CURRENT_USER)\n      throw \"user must be signed in\";\n\n    if (\n      !this.isOffline() &&\n      this.cache.expired()\n    ) {\n      await this.synchronize();\n    } else {\n      if (!!this.cache.getById(id)) {\n        this.cache.renew();\n      } else {\n        if (!this.isOffline())\n          await this.synchronize();\n      }\n    }\n\n    const result =\n      this.cache.getById(id);\n\n    if (!result)\n      throw `unable to load item: ${this.tableName} ${id}`;\n\n    if (!!result.delete_date)\n      throw \"item marked for deletion\";\n    return result;\n  }\n\n  async upsertItem(data: T) {\n    if (!CURRENT_USER)\n      throw \"user must be signed in\";\n\n    const client = createClient();\n\n    // copy into local cached temporarily\n    data.id =\n      data.id ||\n      `${\n        this.tableName\n      }:${Date.now().toFixed()}`;\n    data.update_date = Date.now();\n    this.cache.updateLineItem(data);\n\n    // if offline then that is all we can do\n    if (this.isOffline()) {\n      return;\n    }\n\n    // remember the offlineId so the proper cache item can be updated\n    const offlineId =\n      data.id && isOfflineId(data.id)\n        ? data.id\n        : \"\";\n\n    // clear the offline id so it is not sent to the server\n    if (offlineId) data.id = \"\";\n\n    if (!data.id) {\n      const result =\n        (await client.query(\n          q.Create(\n            q.Collection(\n              this.tableName\n            ),\n            {\n              data: {\n                ...data,\n                user: CURRENT_USER,\n                create_date: q.ToMillis(\n                  q.Now()\n                ),\n                update_date: q.ToMillis(\n                  q.Now()\n                ),\n              },\n            }\n          )\n        )) as {\n          data: T[];\n          ref: {\n            value: { id: string };\n          };\n        };\n\n      // replace the temporary item with the real one\n      {\n        offlineId &&\n          this.cache.deleteLineItem(\n            offlineId\n          );\n        data.id = result.ref.value.id;\n        this.cache.updateLineItem(data);\n      }\n      return;\n    }\n\n    // update an existing server-side collection\n    await client.query(\n      q.Replace(\n        q.Ref(\n          q.Collection(this.tableName),\n          data.id\n        ),\n        {\n          data: {\n            ...data,\n            user: CURRENT_USER,\n            update_date: q.ToMillis(\n              q.Now()\n            ),\n          },\n        }\n      )\n    );\n    this.cache.updateLineItem(data);\n  }\n\n  private isUpdated(data: T) {\n    return (\n      (data.update_date || 0) >\n      this.cache.lastWriteTime()\n    );\n  }\n\n  async getItems() {\n    if (!CURRENT_USER)\n      throw \"user must be signed in\";\n\n    if (\n      this.cache.expired() &&\n      !this.isOffline()\n    ) {\n      await this.synchronize();\n    } else {\n      this.cache.renew();\n    }\n\n    return this.cache\n      .get()\n      .filter(\n        (item) => !item.delete_date\n      );\n  }\n}\n\nfunction isOfflineId(itemId?: string) {\n  return !!itemId && \"9\" < itemId[0];\n}\n\nfunction getPriorSyncTime(\n  tableName: string\n) {\n  return (\n    getGlobalState<number>(\n      `timeOfLastSynchronization_${tableName}`\n    ) || 0\n  );\n}\n\nfunction setFutureSyncTime(\n  tableName: string,\n  syncTime: number\n) {\n  // preserve the timestamp for a future sync run\n  // notice the next sync will pull in the data we just pushed\n  setGlobalState(\n    `timeOfLastSynchronization_${tableName}`,\n    syncTime\n  );\n}\n", "const DEFAULT_DELAY = 5000;\n\nclass Toaster {\n  toast(options: {\n    message: string;\n    mode: string;\n  }) {\n    let target =\n      document.querySelector(\n        \"#toaster\"\n      );\n    if (!target) {\n      target =\n        document.createElement(\"div\");\n      target.id = \"toaster\";\n      target.classList.add(\n        \"toaster\",\n        \"rounded-top\",\n        \"fixed\",\n        \"bottom\",\n        \"right\"\n      );\n      document.body.appendChild(target);\n    }\n\n    const message =\n      document.createElement(\"div\");\n    message.classList.add(\n      options.mode || \"error\",\n      \"padding\",\n      \"margin\"\n    );\n    message.innerHTML = options.message;\n    message.addEventListener(\n      \"click\",\n      () => message.remove()\n    );\n    setTimeout(\n      () => message.remove(),\n      DEFAULT_DELAY\n    );\n\n    target.insertBefore(message, null);\n  }\n}\n\nconst toaster = new Toaster();\n\nexport function toast(\n  message: string,\n  options?: { mode: string }\n) {\n  if (!options)\n    options = { mode: \"info\" };\n  console.info(message, options);\n  toaster.toast({\n    message,\n    ...options,\n  });\n}\n\nexport function reportError(\n  message: any\n) {\n  toast(message + \"\", {\n    mode: \"error\",\n  });\n}\n", "import { query as q } from \"faunadb\";\nimport { createClient } from \"../globals\";\n\nexport async function getDatabaseTime() {\n  const client = createClient();\n  const response = (await client.query(\n    q.Now()\n  )) as { value: string };\n\n  return new Date(\n    response.value\n  ).valueOf();\n}\n", "import { asCurrency } from \"../fun/asCurrency\";\r\nimport { globals } from \"../globals.js\";\r\nconst { TAXRATE } = globals;\r\nimport { StorageModel } from \"./StorageModel\";\r\n\r\nconst INVOICE_TABLE = \"invoices\";\r\n\r\nexport interface InvoiceItem {\r\n  item: string;\r\n  description?: string;\r\n  quantity: number;\r\n  price: number;\r\n  total: number;\r\n  tax: number;\r\n}\r\n\r\nexport interface Invoice {\r\n  id?: string;\r\n  clientname: string;\r\n  billto: string;\r\n  telephone?: string;\r\n  email?: string;\r\n  date: number;\r\n  comments?: string;\r\n  // TODO: labor + additional should become mobs (method of billing)\r\n  labor: number;\r\n  // TODO: labor + additional should become mobs (method of billing)\r\n  additional: number;\r\n  items: Array<InvoiceItem>;\r\n  mops: Array<{\r\n    mop: string;\r\n    paid: number;\r\n  }>;\r\n  taxrate: number;\r\n}\r\n\r\nexport const invoiceModel =\r\n  new StorageModel<Invoice>({\r\n    tableName: INVOICE_TABLE,\r\n    offline: false,\r\n  });\r\n\r\nexport async function removeItem(\r\n  id: string\r\n) {\r\n  return invoiceModel.removeItem(id);\r\n}\r\n\r\nexport async function getItem(\r\n  id: string\r\n) {\r\n  return invoiceModel.getItem(id);\r\n}\r\n\r\nexport async function upsertItem(\r\n  data: Invoice\r\n) {\r\n  return invoiceModel.upsertItem(data);\r\n}\r\n\r\nexport async function getItems() {\r\n  const invoices =\r\n    await invoiceModel.getItems();\r\n\r\n  let normalizedInvoices = invoices.map(\r\n    normalizeInvoice\r\n  );\r\n\r\n  const response = normalizedInvoices\r\n    .filter((invoice) => invoice.items)\r\n    .map((invoice) => {\r\n      invoice.date =\r\n        invoice.date ||\r\n        (invoice as any).create_date;\r\n      invoice.labor =\r\n        (invoice.labor || 0) - 0;\r\n      invoice.additional =\r\n        (invoice.additional || 0) - 0;\r\n      invoice.items.forEach((item) => {\r\n        item.item = (\r\n          item.item || \"\"\r\n        ).toLocaleUpperCase();\r\n        item.quantity =\r\n          (item.quantity || 0) - 0;\r\n        item.price =\r\n          (item.price || 0) - 0;\r\n        item.total =\r\n          (item.total || 0) - 0;\r\n      });\r\n      return invoice;\r\n    })\r\n    .sortBy({ date: \"date\" })\r\n    .reverse();\r\n\r\n  return response;\r\n}\r\n\r\nfunction normalizeInvoice(\r\n  invoice: Invoice\r\n) {\r\n  let raw = invoice as any;\r\n  if (raw.data) {\r\n    raw.data.id = invoice.id;\r\n    raw.data.mops = invoice.mops || [];\r\n    invoice = raw = raw.data;\r\n  }\r\n  invoice.mops = invoice.mops || [];\r\n  invoice.items = invoice.items || [];\r\n\r\n  if (raw[\"paid\"] && raw[\"mop\"]) {\r\n    invoice.mops.push({\r\n      mop: raw[\"mop\"],\r\n      paid: raw[\"paid\"],\r\n    });\r\n    delete raw[\"paid\"];\r\n    delete raw[\"mop\"];\r\n  }\r\n\r\n  if (!invoice.taxrate && TAXRATE) {\r\n    invoice.taxrate = TAXRATE;\r\n    invoice.items.forEach(\r\n      (i) =>\r\n        (i.tax = parseFloat(\r\n          asCurrency(\r\n            i.total * invoice.taxrate\r\n          )\r\n        ))\r\n    );\r\n  }\r\n  return raw as Invoice;\r\n}\r\n", "interface Dictionary<T> {\r\n  [index: string]: T;\r\n}\r\n\r\nfunction asStyle(o: any) {\r\n  if (typeof o === \"string\") return o;\r\n  return Object.keys(o)\r\n    .map((k) => `${k}:${o[k]}`)\r\n    .join(\";\");\r\n}\r\n\r\n/**\r\n * shallow copies b into a, preserving any existing values in a\r\n * @param a target\r\n * @param b values to copy into target if they are not already present\r\n */\r\nfunction defaults<A>(a: A, ...b: Partial<A>[]): A {\r\n  b.filter((b) => !!b).forEach((b) => {\r\n    Object.keys(b)\r\n      .filter((k) => (<any>a)[k] === undefined)\r\n      .forEach((k) => ((<any>a)[k] = (<any>b)[k]));\r\n  });\r\n  return a;\r\n}\r\n\r\nconst rules: Dictionary<(v: any) => string> = {\r\n  style: asStyle,\r\n};\r\n\r\nconst default_args = {\r\n  button: {\r\n    type: \"button\",\r\n  },\r\n};\r\n\r\ntype Args = Dictionary<string | Function | Dictionary<string>>;\r\ntype ChildTypes = HTMLElement | string;\r\ntype ChildrenCollection = [ChildTypes | Array<ChildTypes>][];\r\ntype Widget = { setContent: Function; addChild: Function };\r\ntype WidgetFactory = (args: Args) => Widget;\r\n\r\n/**\r\n * This is a react.CreateElement implementation\r\n * import dom as the value in the tsconfig.json \"jsxFactory\"\r\n * @param tag\r\n * @param args\r\n * @param children\r\n */\r\nexport function dom(\r\n  tag: string,\r\n  args?: Args,\r\n  ...children: ChildrenCollection\r\n): HTMLElement;\r\nexport function dom(\r\n  tag: string | WidgetFactory,\r\n  args?: Args,\r\n  ...children: ChildrenCollection\r\n): HTMLElement | string | Widget;\r\nexport function dom(\r\n  tag: string | WidgetFactory,\r\n  args?: Args,\r\n  ...children: ChildrenCollection\r\n): HTMLElement | string | Widget {\r\n  if (typeof tag === \"string\") {\r\n    let element = document.createElement(tag);\r\n    if (default_args[tag]) {\r\n      args = defaults(args ?? {}, default_args[tag]);\r\n    }\r\n    if (args) {\r\n      Object.keys(args).forEach((key) => {\r\n        let value = rules[key] ? rules[key](args![key]) : args![key];\r\n        if (typeof value === \"string\") {\r\n          //if (key === \"class\") key = \"className\";\r\n          element.setAttribute(key, value);\r\n        } else if (value instanceof Function) {\r\n          element.addEventListener(<any>key, <any>value);\r\n        } else {\r\n          element.setAttribute(key, value + \"\");\r\n        }\r\n      });\r\n    }\r\n\r\n    let addChildren = (children: ChildrenCollection) => {\r\n      children &&\r\n        children.forEach((c) => {\r\n          if (typeof c === \"string\") {\r\n            element.appendChild(document.createTextNode(c));\r\n          } else if (c instanceof HTMLElement) {\r\n            element.appendChild(c);\r\n          } else if (c instanceof Array) {\r\n            addChildren(<ChildrenCollection>(<unknown>c));\r\n          } else {\r\n            console.log(\"addChildren cannot add to dom node\", c);\r\n          }\r\n        });\r\n    };\r\n\r\n    children && addChildren(children);\r\n\r\n    return element;\r\n  }\r\n\r\n  {\r\n    let element = tag(args!);\r\n\r\n    let addChildren = (children: ChildrenCollection) => {\r\n      children &&\r\n        children.forEach((c) => {\r\n          if (typeof c === \"string\" || c instanceof HTMLElement) {\r\n            element.setContent(c);\r\n          } else if (c instanceof Array) {\r\n            addChildren(<ChildrenCollection>(<unknown>c));\r\n          } else if (typeof c === \"object\") {\r\n            element.addChild(c);\r\n          } else {\r\n            console.log(\"addChildren cannot add to widget\", c);\r\n          }\r\n        });\r\n    };\r\n\r\n    children && addChildren(children);\r\n    return element;\r\n  }\r\n}\r\n", "export function asDateString(\n  date = new Date()\n) {\n  return date\n    .toISOString()\n    .split(\"T\")[0];\n}\n\nexport function asTimeString(\n  date = new Date()\n) {\n  return date\n    .toISOString()\n    .split(\"T\")[1]\n    .substring(0, 5);\n}\n", "export function moveChildren(\r\n  items: HTMLElement,\r\n  report: HTMLElement\r\n) {\r\n  while (items.firstChild)\r\n    report.appendChild(\r\n      items.firstChild\r\n    );\r\n}\r\n\r\nexport function moveChildrenBefore(\r\n  items: Element,\r\n  report: Element\r\n) {\r\n  while (items.firstChild)\r\n    report.before(items.firstChild);\r\n}\r\n\r\nexport function moveChildrenAfter(\r\n  items: Element,\r\n  report: Element\r\n) {\r\n  let head = report;\r\n  while (items.firstChild) {\r\n    const firstChild = items.firstChild;\r\n    head.after(firstChild);\r\n    head = firstChild as HTMLElement;\r\n  }\r\n}\r\n", "import {\n  getGlobalState,\n  setGlobalState,\n} from \"./globalState\";\nimport { on, trigger } from \"./on.js\";\n\nexport function hookupTriggers(\n  domNode: HTMLElement\n) {\n  domNode\n    .querySelectorAll(\"[data-event]\")\n    .forEach((eventItem) => {\n      const eventName = (\n        eventItem as HTMLElement\n      ).dataset[\"event\"];\n\n      if (!eventName)\n        throw \"item must define a data-event\";\n\n      const isInput =\n        isInputElement(eventItem);\n\n      const inputType =\n        getInputType(eventItem);\n\n      const isButton = isButtonElement(\n        eventItem,\n        isInput\n      );\n\n      const isCheckbox =\n        isCheckboxInput(eventItem);\n\n      if (isButton)\n        on(eventItem, \"click\", () => {\n          trigger(domNode, eventName);\n        });\n      else if (isCheckbox)\n        on(eventItem, \"click\", () => {\n          const checked = (\n            eventItem as HTMLInputElement\n          ).checked;\n          trigger(\n            domNode,\n            eventName +\n              (checked ? \":yes\" : \":no\")\n          );\n        });\n      else if (isInput)\n        on(eventItem, \"change\", () => {\n          trigger(domNode, eventName);\n        });\n      else\n        throw `data-event not supported for this item: ${eventItem.outerHTML}`;\n    });\n\n  domNode\n    .querySelectorAll(\"[data-bind]\")\n    .forEach((eventItem) => {\n      const bindTo = (\n        eventItem as HTMLElement\n      ).dataset[\"bind\"];\n\n      if (!bindTo)\n        throw \"item must define a data-bind\";\n\n      const valueInfo =\n        getGlobalState<any>(bindTo);\n\n      if (isCheckboxInput(eventItem)) {\n        (\n          eventItem as HTMLInputElement\n        ).checked = true === valueInfo;\n        on(eventItem, \"change\", () => {\n          setGlobalState(\n            bindTo,\n            (\n              eventItem as HTMLInputElement\n            ).checked\n          );\n        });\n      } else if (\n        isNumericInputElement(eventItem)\n      ) {\n        const item =\n          eventItem as HTMLInputElement;\n        item.valueAsNumber =\n          valueInfo || 0;\n        on(eventItem, \"change\", () => {\n          setGlobalState(\n            bindTo,\n            item.valueAsNumber\n          );\n        });\n      } else if (\n        isInputElement(eventItem)\n      ) {\n        const item =\n          eventItem as HTMLInputElement;\n        item.value = valueInfo || \"\";\n        on(eventItem, \"change\", () => {\n          setGlobalState(\n            bindTo,\n            item.value\n          );\n        });\n      } else if (\n        isTextAreaElement(eventItem)\n      ) {\n        const item =\n          eventItem as HTMLTextAreaElement;\n        item.value = valueInfo || \"\";\n        on(eventItem, \"change\", () => {\n          setGlobalState(\n            bindTo,\n            item.value\n          );\n        });\n      } else {\n        throw `unimplemented data-bind on element: ${eventItem.outerHTML}`;\n      }\n    });\n}\n\nfunction isCheckboxInput(\n  eventItem: Element\n) {\n  return (\n    isInputElement(eventItem) &&\n    getInputType(eventItem) ===\n      \"checkbox\"\n  );\n}\n\nfunction isButtonElement(\n  eventItem: Element,\n  isInput: boolean\n) {\n  return (\n    eventItem.tagName === \"BUTTON\" ||\n    (isInput &&\n      getInputType(eventItem) ===\n        \"button\")\n  );\n}\n\nfunction getInputType(\n  eventItem: Element\n) {\n  return (\n    isInputElement(eventItem) &&\n    (eventItem as HTMLInputElement).type\n  );\n}\n\nfunction isTextAreaElement(\n  eventItem: Element\n) {\n  return (\n    eventItem.tagName === \"TEXTAREA\"\n  );\n}\n\nfunction isInputElement(\n  eventItem: Element\n) {\n  return eventItem.tagName === \"INPUT\";\n}\n\nfunction isNumericInputElement(\n  item: Element\n) {\n  return (\n    isInputElement(item) &&\n    getInputType(item) === \"number\"\n  );\n}\n", "import { on } from \"../on.js\";\n\nexport function selectOnFocus(\n  element:\n    | HTMLInputElement\n    | HTMLTextAreaElement\n) {\n  on(element, \"focus\", () =>\n    element.select()\n  );\n}\n\nexport function formatAsCurrency(\n  input: HTMLInputElement\n) {\n  input.step = \"0.01\";\n  input.addEventListener(\n    \"change\",\n    () => {\n      const textValue = input.value;\n      const numericValue =\n        input.valueAsNumber?.toFixed(2);\n      if (textValue != numericValue) {\n        input.value = numericValue;\n      }\n    }\n  );\n}\n\nexport function formatUppercase(\n  input: HTMLInputElement\n) {\n  addFormatter(() => {\n    const textValue = (\n      input.value || \"\"\n    ).toUpperCase();\n    if (textValue != input.value) {\n      input.value = textValue;\n    }\n  }, input);\n}\n\nfunction addFormatter(\n  change: () => void,\n  input: HTMLInputElement\n) {\n  change();\n\n  input.addEventListener(\n    \"change\",\n    change\n  );\n}\n\nexport function formatTrim(\n  input: HTMLInputElement\n) {\n  addFormatter(() => {\n    const textValue = (\n      input.value || \"\"\n    ).trim();\n    if (textValue != input.value) {\n      input.value = textValue;\n    }\n  }, input);\n}\n\nexport function getValueAsNumber(\n  input: HTMLInputElement\n) {\n  if (!input.value) return 0;\n  return input.valueAsNumber;\n}\n", "import {\n  formatAsCurrency,\n  formatTrim,\n  formatUppercase,\n  selectOnFocus,\n} from \"./input\";\n\nexport function extendNumericInputBehaviors(\n  form: HTMLElement\n) {\n  const numberInput = Array.from(\n    form.querySelectorAll(\n      \"input[type=number]\"\n    )\n  ) as Array<HTMLInputElement>;\n  numberInput.forEach(selectOnFocus);\n\n  const currencyInput =\n    numberInput.filter((i) =>\n      i.classList.contains(\"currency\")\n    );\n  currencyInput.forEach(\n    formatAsCurrency\n  );\n}\n\nexport function extendTextInputBehaviors(\n  form: HTMLElement\n) {\n  const textInput = Array.from(\n    form.querySelectorAll(\n      \"input[type=text]\"\n    )\n  ) as Array<HTMLInputElement>;\n  textInput.forEach(selectOnFocus);\n\n  textInput\n    .filter((i) =>\n      i.classList.contains(\"trim\")\n    )\n    .forEach(formatTrim);\n\n  textInput\n    .filter((i) =>\n      i.classList.contains(\"uppercase\")\n    )\n    .forEach(formatUppercase);\n}\n", "import { StorageModel } from \"./StorageModel\";\r\n\r\nconst INVENTORY_TABLE = \"inventory\";\r\n\r\nexport interface Inventory {\r\n  id?: string;\r\n  code: string;\r\n  description?: string;\r\n  quantity: number;\r\n  price: number;\r\n  taxrate: number;\r\n}\r\n\r\nexport class InventoryModel extends StorageModel<Inventory> {\r\n  async upgradeTo104(): Promise<void> {\r\n    // clear temporary id values\r\n    const deleteTheseItems = this.cache\r\n      .get()\r\n      .filter(\r\n        (i) => i.id && i.id === i.code\r\n      )\r\n      .map((i) => i.id!);\r\n    deleteTheseItems.forEach((id) =>\r\n      this.cache.deleteLineItem(id)\r\n    );\r\n  }\r\n}\r\n\r\nexport const inventoryModel =\r\n  new InventoryModel({\r\n    tableName: INVENTORY_TABLE,\r\n    offline: false,\r\n  });\r\n\r\nexport async function forceDatalist() {\r\n  let dataList = document.querySelector(\r\n    `#inventory_list`\r\n  ) as HTMLDataListElement;\r\n  if (dataList) return dataList;\r\n  dataList =\r\n    document.createElement(\"datalist\");\r\n  dataList.id = \"inventory_list\";\r\n  const items =\r\n    await inventoryModel.getItems();\r\n  items\r\n    .sortBy({ code: \"string\" })\r\n    .forEach((item) => {\r\n      const option =\r\n        document.createElement(\r\n          \"option\"\r\n        );\r\n      option.value = item.code;\r\n      dataList.appendChild(option);\r\n    });\r\n  document.body.appendChild(dataList);\r\n  return dataList;\r\n}\r\n", "const TABLE_NAME = \"mops\";\n\nclass Manager<\n  T extends { id: string }\n> {\n  data = JSON.parse(\n    localStorage.getItem(TABLE_NAME) ||\n      \"{}\"\n  ) as Record<string, T>;\n\n  getItemByCode(code: string) {\n    return this.data[code];\n  }\n\n  persistItem(item: T) {\n    this.data[item.id] = item;\n  }\n\n  persistItems() {\n    localStorage.setItem(\n      TABLE_NAME,\n      JSON.stringify(this.data)\n    );\n  }\n}\n\nexport const manager = new Manager();\nmanager.persistItem({ id: \"CASH\" });\nmanager.persistItem({ id: \"CHECK\" });\nmanager.persistItems();\n\nexport function forceDatalist() {\n  let dataList = document.querySelector(\n    `#${TABLE_NAME}_list`\n  ) as HTMLDataListElement;\n  if (dataList) return dataList;\n  dataList =\n    document.createElement(\"datalist\");\n  dataList.id = `${TABLE_NAME}_list`;\n  Object.entries(manager.data).forEach(\n    ([key, value]) => {\n      const option =\n        document.createElement(\n          \"option\"\n        );\n      option.value = key;\n      dataList.appendChild(option);\n    }\n  );\n  document.body.appendChild(dataList);\n  return dataList;\n}\n", "export function asNumber(node: Element) {\n  return (node as HTMLInputElement).valueAsNumber || 0;\n}\n", "export function sum(values: Array<number>) {\n  if (!values.length) return 0;\n  return values.reduce((a, b) => a + b, 0);\n}\n", "export function gotoUrl(url: string) {\n  location.replace(url);\n}\n", "import { dom } from \"../../dom.js\";\r\nimport { asDateString } from \"../../fun/asDateString.js\";\r\nimport {\r\n  moveChildren,\r\n  moveChildrenBefore,\r\n} from \"../../fun/dom.js\";\r\nimport { hookupTriggers } from \"../../fun/hookupTriggers.js\";\r\nimport {\r\n  extendNumericInputBehaviors,\r\n  extendTextInputBehaviors,\r\n} from \"../../fun/behavior/form.js\";\r\nimport {\r\n  on,\r\n  trigger,\r\n} from \"../../fun/on.js\";\r\nimport { globals } from \"../../globals.js\";\r\nimport {\r\n  forceDatalist as forceInventoryDataList,\r\n  inventoryModel,\r\n} from \"../../services/inventory.js\";\r\nimport { forceDatalist as forceMopDataList } from \"../PaymentManager.js\";\r\n\r\nimport { routes } from \"../../router.js\";\r\nimport {\r\n  Invoice,\r\n  InvoiceItem,\r\n} from \"../../services/invoices.js\";\r\nimport { asCurrency } from \"../../fun/asCurrency.js\";\r\nimport { getValueAsNumber } from \"../../fun/behavior/input.js\";\r\nimport { asNumber } from \"../../fun/asNumber.js\";\r\nimport { sum } from \"../../fun/sum.js\";\r\nimport { gotoUrl } from \"../../fun/gotoUrl.js\";\r\n\r\nconst { primaryContact, TAXRATE } =\r\n  globals;\r\n\r\nconst itemsToRemove =\r\n  [] as Array<HTMLElement>;\r\n\r\nexport async function create(\r\n  invoice: Invoice\r\n) {\r\n  await forceInventoryDataList();\r\n\r\n  const form: HTMLFormElement = (\r\n    <form\r\n      class=\"grid-6\"\r\n      id=\"invoice-form\"\r\n    >\r\n      <h1 class=\"col-1-last centered\">\r\n        {`Invoice Form for ${primaryContact.companyName}`}\r\n      </h1>\r\n      <input\r\n        class=\"form-label hidden\"\r\n        readonly\r\n        type=\"text\"\r\n        name=\"id\"\r\n        value={invoice.id}\r\n      />\r\n      <div class=\"section-title col-1-last\">\r\n        Client\r\n      </div>\r\n      <label class=\"form-label col-1-3\">\r\n        Client Name\r\n      </label>\r\n      <label class=\"form-label col-4-last\">\r\n        Date\r\n      </label>\r\n      <input\r\n        class=\"col-1-3\"\r\n        type=\"text\"\r\n        placeholder=\"clientname\"\r\n        name=\"clientname\"\r\n        required\r\n        value={invoice.clientname}\r\n      />\r\n      <input\r\n        class=\"col-4-last\"\r\n        type=\"date\"\r\n        placeholder=\"Date\"\r\n        name=\"date\"\r\n        required\r\n        value={asDateString(\r\n          new Date(\r\n            invoice.date || Date.now()\r\n          )\r\n        )}\r\n      />\r\n      <label class=\"form-label col-1-3\">\r\n        Telephone\r\n      </label>\r\n      <label class=\"form-label col-4-last\">\r\n        Email\r\n      </label>\r\n      <input\r\n        type=\"tel\"\r\n        class=\"col-1-3\"\r\n        placeholder=\"telephone\"\r\n        name=\"telephone\"\r\n        value={invoice.telephone}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        class=\"col-4-last\"\r\n        placeholder=\"email\"\r\n        name=\"email\"\r\n        value={invoice.email}\r\n      />\r\n      <label class=\"form-label col-1-last\">\r\n        Bill To\r\n        <textarea\r\n          class=\"address\"\r\n          placeholder=\"billto\"\r\n          name=\"billto\"\r\n        >\r\n          {invoice.billto}\r\n        </textarea>\r\n      </label>\r\n      <label class=\"form-label col-1-last\">\r\n        Comments\r\n        <textarea\r\n          class=\"comments\"\r\n          placeholder=\"comments\"\r\n          name=\"comments\"\r\n        >\r\n          {invoice.comments}\r\n        </textarea>\r\n      </label>\r\n      <div class=\"vspacer col-1-last\"></div>\r\n      <section class=\"line-items grid-6 col-1-last\">\r\n        <div class=\"section-title col-1-last\">\r\n          Items\r\n        </div>\r\n      </section>\r\n      <div class=\"vspacer col-1-last\"></div>\r\n      <button\r\n        class=\"button col-1-3\"\r\n        data-event=\"add-another-item\"\r\n        type=\"button\"\r\n      >\r\n        Add item\r\n      </button>\r\n      <button\r\n        class=\"button col-4-last\"\r\n        data-event=\"remove-last-item\"\r\n        type=\"button\"\r\n      >\r\n        Remove Last Item\r\n      </button>\r\n      <div class=\"vspacer col-1-last\"></div>\r\n      <div class=\"section-title col-1-last\">\r\n        Summary\r\n      </div>\r\n      <label class=\"form-label col-1-2 currency\">\r\n        Labor\r\n      </label>\r\n      <label class=\"form-label col-3-2 currency\">\r\n        Other\r\n      </label>\r\n      <label class=\"form-label col-5-last currency\">\r\n        Total + Tax\r\n      </label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"currency col-1-2\"\r\n        placeholder=\"labor\"\r\n        name=\"labor\"\r\n        id=\"labor\"\r\n        value={invoice.labor.toFixed(2)}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        class=\"currency col-3-2\"\r\n        placeholder=\"additional\"\r\n        name=\"additional\"\r\n        value={invoice.additional.toFixed(\r\n          2\r\n        )}\r\n      />\r\n      <input\r\n        readonly\r\n        type=\"number\"\r\n        class=\"currency col-5-last\"\r\n        id=\"total_due\"\r\n        name=\"total_due\"\r\n      />\r\n      <div class=\"col-1 vspacer-1\"></div>\r\n\r\n      <div class=\"section-title col-1-last\">\r\n        Method of Payment\r\n      </div>\r\n      <div class=\"col-1-4\">\r\n        Payment Type\r\n      </div>\r\n      <div class=\"col-5-last currency\">\r\n        Amount\r\n      </div>\r\n      <div\r\n        id=\"mop-line-item-end\"\r\n        class=\"hidden\"\r\n      ></div>\r\n      <button\r\n        class=\"button col-1-2 if-desktop\"\r\n        data-event=\"add-method-of-payment\"\r\n        type=\"button\"\r\n      >\r\n        Add Payment\r\n      </button>\r\n      <div class=\"form-label col-5-last currency if-desktop\">\r\n        Balance Due\r\n      </div>\r\n      <input\r\n        readonly\r\n        class=\"currency col-5-last bold if-desktop\"\r\n        type=\"number\"\r\n        id=\"balance_due\"\r\n      />\r\n      <div class=\"vspacer-1 col-1-last flex\">\r\n        <button\r\n          class=\"bold button\"\r\n          data-event=\"submit\"\r\n          type=\"button\"\r\n        >\r\n          Save\r\n        </button>\r\n        <button\r\n          class=\"button if-print-to-pdf\"\r\n          data-event=\"print\"\r\n          type=\"button\"\r\n        >\r\n          Print\r\n        </button>\r\n        <button\r\n          class=\"button if-desktop\"\r\n          data-event=\"clear\"\r\n          type=\"button\"\r\n        >\r\n          Clear\r\n        </button>\r\n        <button\r\n          class=\"button if-desktop\"\r\n          data-event=\"delete\"\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n      <div class=\"vspacer-2\"></div>\r\n    </form>\r\n  );\r\n\r\n  const labor = form.querySelector(\r\n    \"[name=labor]\"\r\n  ) as HTMLInputElement;\r\n  const additional = form.querySelector(\r\n    \"[name=additional]\"\r\n  ) as HTMLInputElement;\r\n\r\n  on(labor, \"change\", () =>\r\n    trigger(form, \"change\")\r\n  );\r\n\r\n  on(additional, \"change\", () =>\r\n    trigger(form, \"change\")\r\n  );\r\n\r\n  // render line items\r\n  {\r\n    const lineItemsTarget =\r\n      form.querySelector(\r\n        \".line-items\"\r\n      ) as HTMLElement;\r\n\r\n    const lineItems = invoice.items.map(\r\n      renderInvoiceItem\r\n    );\r\n\r\n    lineItems.forEach((item) =>\r\n      setupComputeOnLineItem(form, item)\r\n    );\r\n\r\n    lineItems.forEach((item) =>\r\n      moveChildren(\r\n        item,\r\n        lineItemsTarget\r\n      )\r\n    );\r\n  }\r\n\r\n  // render payments\r\n  {\r\n    const payementsTarget =\r\n      form.querySelector(\r\n        \"#mop-line-item-end\"\r\n      ) as HTMLElement;\r\n\r\n    const paymentItems =\r\n      invoice.mops?.map(\r\n        renderMopLineItem\r\n      );\r\n\r\n    paymentItems?.forEach((item) => {});\r\n\r\n    paymentItems?.forEach((item) =>\r\n      moveChildrenBefore(\r\n        item,\r\n        payementsTarget\r\n      )\r\n    );\r\n  }\r\n\r\n  on(form, \"change\", () =>\r\n    compute(form)\r\n  );\r\n\r\n  extendNumericInputBehaviors(form);\r\n  extendTextInputBehaviors(form);\r\n  hookupTriggers(form);\r\n  hookupEvents(form);\r\n\r\n  if (!invoice.mops?.length) {\r\n    trigger(\r\n      form,\r\n      \"add-method-of-payment\"\r\n    );\r\n  }\r\n  compute(form);\r\n  return form;\r\n}\r\n\r\nfunction getFirstInput(\r\n  itemPanel: HTMLDivElement\r\n) {\r\n  return itemPanel.querySelector(\r\n    \"input\"\r\n  ) as HTMLInputElement;\r\n}\r\n\r\nfunction addAnotherItem(\r\n  formDom: HTMLFormElement\r\n) {\r\n  const itemPanel = renderInvoiceItem({\r\n    quantity: 1,\r\n    item: \"\",\r\n    price: 0,\r\n    total: 0,\r\n    tax: 0,\r\n  });\r\n  setupComputeOnLineItem(\r\n    formDom,\r\n    itemPanel\r\n  );\r\n  const toFocus =\r\n    getFirstInput(itemPanel);\r\n  const target: HTMLElement =\r\n    formDom.querySelector(\r\n      \".line-items\"\r\n    ) || formDom;\r\n  itemsToRemove.splice(\r\n    0,\r\n    itemsToRemove.length\r\n  );\r\n  for (\r\n    let i = 0;\r\n    i < itemPanel.children.length;\r\n    i++\r\n  ) {\r\n    itemsToRemove.push(\r\n      itemPanel.children[\r\n        i\r\n      ] as HTMLElement\r\n    );\r\n  }\r\n  extendNumericInputBehaviors(\r\n    itemPanel\r\n  );\r\n  moveChildren(itemPanel, target);\r\n  toFocus?.focus();\r\n}\r\n\r\nfunction hookupEvents(\r\n  formDom: HTMLFormElement\r\n) {\r\n  on(\r\n    formDom,\r\n    \"list-all-invoices\",\r\n    () => {\r\n      gotoUrl(routes.allInvoices());\r\n    }\r\n  );\r\n\r\n  on(\r\n    formDom,\r\n    \"remove-last-item\",\r\n    () => {\r\n      itemsToRemove.forEach((item) =>\r\n        item.remove()\r\n      );\r\n      trigger(formDom, \"change\");\r\n    }\r\n  );\r\n\r\n  on(\r\n    formDom,\r\n    \"add-another-item\",\r\n    () => {\r\n      if (!formDom.reportValidity())\r\n        return;\r\n      addAnotherItem(formDom);\r\n      trigger(formDom, \"change\");\r\n    }\r\n  );\r\n\r\n  on(\r\n    formDom,\r\n    \"add-method-of-payment\",\r\n    () => {\r\n      const target: HTMLElement =\r\n        formDom.querySelector(\r\n          \"#mop-line-item-end\"\r\n        ) || formDom;\r\n      const mopLineItem =\r\n        renderMopLineItem();\r\n\r\n      extendNumericInputBehaviors(\r\n        mopLineItem\r\n      );\r\n\r\n      const focus = getFirstInput(\r\n        mopLineItem\r\n      );\r\n\r\n      moveChildrenBefore(\r\n        mopLineItem,\r\n        target\r\n      );\r\n      focus.focus();\r\n    }\r\n  );\r\n\r\n  on(formDom, \"clear\", () => {\r\n    gotoUrl(routes.createInvoice());\r\n  });\r\n}\r\n\r\nfunction renderMopLineItem(item?: {\r\n  mop: string;\r\n  paid: number;\r\n}) {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"select\"\r\n        class=\"col-1-4\"\r\n        name=\"method_of_payment\"\r\n        value={item?.mop || \"\"}\r\n        list={forceMopDataList().id}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        class=\"col-5-last currency\"\r\n        name=\"amount_paid\"\r\n        placeholder=\"amount paid\"\r\n        value={asCurrency(\r\n          item?.paid || 0\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction compute(\r\n  form: HTMLFormElement\r\n) {\r\n  const labor = form.querySelector(\r\n    \"[name=labor]\"\r\n  ) as HTMLInputElement;\r\n  const additional = form.querySelector(\r\n    \"[name=additional]\"\r\n  ) as HTMLInputElement;\r\n  const total_due = form.querySelector(\r\n    \"[name=total_due]\"\r\n  ) as HTMLInputElement;\r\n  const balance_due =\r\n    form.querySelector(\r\n      \"#balance_due\"\r\n    ) as HTMLInputElement;\r\n  const totals = Array.from(\r\n    form.querySelectorAll(\r\n      \"input[name=total]\"\r\n    )\r\n  ).map((input) =>\r\n    parseFloat(\r\n      (input as HTMLInputElement)\r\n        .value || \"0\"\r\n    )\r\n  );\r\n  const total = totals.reduce(\r\n    (a, b) => a + b,\r\n    0\r\n  );\r\n\r\n  const tax = parseFloat(\r\n    asCurrency(total * TAXRATE)\r\n  );\r\n\r\n  const grandTotal =\r\n    labor.valueAsNumber +\r\n    additional.valueAsNumber +\r\n    tax +\r\n    total;\r\n  total_due.value =\r\n    grandTotal.toFixed(2);\r\n\r\n  const total_payments = sum(\r\n    Array.from(\r\n      form.querySelectorAll(\r\n        \"input[name=amount_paid]\"\r\n      )\r\n    ).map(asNumber)\r\n  );\r\n\r\n  balance_due.value = (\r\n    grandTotal - total_payments\r\n  ).toFixed(2);\r\n}\r\n\r\nfunction renderInvoiceItem(\r\n  item: InvoiceItem\r\n) {\r\n  const form: HTMLDivElement = (\r\n    <div>\r\n      <label class=\"form-label col-1-last\">\r\n        Item\r\n      </label>\r\n      <input\r\n        name=\"item\"\r\n        class=\"bold col-1-3 text trim\"\r\n        required\r\n        autocomplete=\"off\"\r\n        type=\"text\"\r\n        value={item.item}\r\n        list=\"inventory_list\"\r\n      />\r\n      <input\r\n        name=\"description\"\r\n        class=\"col-4-last text trim\"\r\n        type=\"text\"\r\n        value={item.description || \"\"}\r\n      />\r\n      <label class=\"form-label col-1-2 quantity\">\r\n        Quantity\r\n      </label>\r\n      <label class=\"form-label col-3-2 currency\">\r\n        Price\r\n      </label>\r\n      <label class=\"form-label col-5-last currency\">\r\n        Total\r\n      </label>\r\n      <input\r\n        name=\"quantity\"\r\n        required\r\n        class=\"quantity col-1-2\"\r\n        type=\"number\"\r\n        value={item.quantity}\r\n      />\r\n      <input\r\n        name=\"price\"\r\n        required\r\n        class=\"currency col-3-2\"\r\n        type=\"number\"\r\n        value={item.price.toFixed(2)}\r\n      />\r\n      <input\r\n        readonly\r\n        name=\"total\"\r\n        class=\"bold currency col-5-last\"\r\n        type=\"number\"\r\n        value={item.total.toFixed(2)}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return form;\r\n}\r\n\r\nfunction setupComputeOnLineItem(\r\n  event: HTMLElement,\r\n  form: HTMLDivElement\r\n) {\r\n  const itemInput = form.querySelector(\r\n    \"[name=item]\"\r\n  ) as HTMLInputElement;\r\n  const quantityInput =\r\n    form.querySelector(\r\n      \"[name=quantity]\"\r\n    ) as HTMLInputElement;\r\n  const priceInput = form.querySelector(\r\n    \"[name=price]\"\r\n  ) as HTMLInputElement;\r\n  const descriptionInput =\r\n    form.querySelector(\r\n      \"[name=description]\"\r\n    ) as HTMLInputElement;\r\n  const totalInput = form.querySelector(\r\n    \"[name=total]\"\r\n  ) as HTMLInputElement;\r\n  const computeTotal = () => {\r\n    const qty = getValueAsNumber(\r\n      quantityInput\r\n    );\r\n    const price =\r\n      getValueAsNumber(priceInput);\r\n    const value = qty * price;\r\n    totalInput.value = value.toFixed(2);\r\n    trigger(event, \"change\");\r\n  };\r\n  on(\r\n    quantityInput,\r\n    \"change\",\r\n    computeTotal\r\n  );\r\n  on(\r\n    priceInput,\r\n    \"change\",\r\n    computeTotal\r\n  );\r\n  on(itemInput, \"change\", async () => {\r\n    const item =\r\n      await getInventoryItemByCode(\r\n        itemInput.value\r\n      );\r\n    if (!item) return;\r\n    const price =\r\n      getValueAsNumber(priceInput);\r\n    if (item.price !== price) {\r\n      priceInput.value =\r\n        item.price.toFixed(2);\r\n      trigger(priceInput, \"change\");\r\n    }\r\n\r\n    if (item.description)\r\n      descriptionInput.value =\r\n        item.description;\r\n  });\r\n}\r\n\r\nasync function getInventoryItemByCode(\r\n  code: string\r\n) {\r\n  const items =\r\n    await inventoryModel.getItems();\r\n  return items.find(\r\n    (item) => item.code === code\r\n  );\r\n}\r\n", "import { dom } from \"../../dom.js\";\r\nimport { asCurrency } from \"../../fun/asCurrency.js\";\r\nimport { moveChildren } from \"../../fun/dom.js\";\r\nimport { sum } from \"../../fun/sum.js\";\r\nimport { globals } from \"../../globals.js\";\r\nimport {\r\n  Invoice,\r\n  InvoiceItem,\r\n} from \"../../services/invoices.js\";\r\n\r\nconst { primaryContact, TAXRATE } =\r\n  globals;\r\n\r\nexport function create(\r\n  invoice: Invoice\r\n) {\r\n  const report: HTMLDivElement = (\r\n    <div class=\"print page grid-6\">\r\n      <label class=\"bold col-1-2\">\r\n        Little Light Show\r\n      </label>\r\n      <label class=\"bold col-3-4 align-right\">\r\n        Invoice\r\n      </label>\r\n      <div class=\"line col-1-6\"></div>\r\n      <div class=\"col-1-6 vspacer\"></div>\r\n      <label class=\"col-1-2\">\r\n        {primaryContact.fullName}\r\n      </label>\r\n      <label class=\"col-5-2 align-right\">\r\n        {invoice.id}\r\n      </label>\r\n      <label class=\"col-1-2\">\r\n        {primaryContact.addressLine1}\r\n      </label>\r\n      <label class=\"col-5-2 align-right\">\r\n        {new Date().toDateString()}\r\n      </label>\r\n      <label class=\"col-1-2\">\r\n        {primaryContact.addressLine2}\r\n      </label>\r\n      <div class=\"vspacer-2 col-1-6\"></div>\r\n      <label class=\"bold col-1\">\r\n        Bill To:\r\n      </label>\r\n      <label class=\"col-2-2\">\r\n        {invoice.clientname}\r\n      </label>\r\n      {invoice.billto\r\n        .split(\"\\n\")\r\n        .map((n) => (\r\n          <label class=\"col-2-2\">\r\n            {n}\r\n          </label>\r\n        ))}\r\n      {invoice.comments && (\r\n        <div class=\"vspacer-2 col-1-6\"></div>\r\n      )}\r\n      {invoice.comments &&\r\n        invoice.comments\r\n          .split(\"\\n\")\r\n          .map((n) => (\r\n            <label class=\"col-2-5\">\r\n              {n}\r\n            </label>\r\n          ))}\r\n      <div class=\"vspacer-2 col-1-6\"></div>\r\n      <label class=\"bold col-1-3\">\r\n        Description\r\n      </label>\r\n      <label class=\"bold col-4 align-right\">\r\n        Quantity\r\n      </label>\r\n      <label class=\"bold col-5 align-right\">\r\n        Rate\r\n      </label>\r\n      <label class=\"bold col-6 align-right\">\r\n        Amount\r\n      </label>\r\n      <div class=\"line col-1-6\" />\r\n    </div>\r\n  );\r\n  {\r\n    invoice.items.forEach((item) => {\r\n      moveChildren(\r\n        invoiceItem(item),\r\n        report\r\n      );\r\n    });\r\n\r\n    const totalItems = sum(\r\n      invoice.items.map((i) => i.total)\r\n    );\r\n\r\n    const totalTax = sum(\r\n      invoice.items.map((i) => i.tax)\r\n    );\r\n\r\n    const summary = (\r\n      <div>\r\n        <div class=\"line col-1-6\" />\r\n        <div class=\"vspacer-2 col-1-6\"></div>\r\n        <label class=\"col-5\">\r\n          Total Supplies\r\n        </label>\r\n        <label class=\"col-6 align-right\">\r\n          {totalItems.toFixed(2)}\r\n        </label>\r\n        <label class=\"col-5\">\r\n          Tax ({100 * TAXRATE + \"\"}%)\r\n        </label>\r\n        <label class=\"col-6 align-right\">\r\n          {totalTax.toFixed(2)}\r\n        </label>\r\n        {invoice.labor && (\r\n          <label class=\"col-5\">\r\n            Labor\r\n          </label>\r\n        )}\r\n        {invoice.labor && (\r\n          <label class=\"col-6 align-right\">\r\n            {invoice.labor.toFixed(2)}\r\n          </label>\r\n        )}\r\n        {invoice.additional && (\r\n          <label class=\"col-5\">\r\n            Additional\r\n          </label>\r\n        )}\r\n        {invoice.additional && (\r\n          <label class=\"col-6 align-right\">\r\n            {invoice.additional.toFixed(\r\n              2\r\n            )}\r\n          </label>\r\n        )}\r\n        <label class=\"bold col-5\">\r\n          Balance Due\r\n        </label>\r\n        <label class=\"bold col-6 align-right\">\r\n          {(\r\n            (invoice.labor || 0) +\r\n            (invoice.additional || 0) +\r\n            totalItems +\r\n            totalTax\r\n          ).toFixed(2)}\r\n        </label>\r\n      </div>\r\n    );\r\n\r\n    moveChildren(summary, report);\r\n  }\r\n  return report;\r\n}\r\n\r\nfunction invoiceItem(\r\n  item: InvoiceItem\r\n): HTMLDivElement {\r\n  return (\r\n    <div>\r\n      <label class=\"tall col-1-3\">\r\n        {item.item}\r\n      </label>\r\n      <label class=\"tall col-4 align-right\">\r\n        {item.quantity.toFixed(2)}\r\n      </label>\r\n      <label class=\"tall col-5 align-right\">\r\n        {item.price.toFixed(2)}\r\n      </label>\r\n      <label class=\"tall col-6 align-right\">\r\n        {item.total.toFixed(2)}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n", "export function isZero(value: string) {\n  if (value === \"0.00\") return true;\n  if (value === \"-0.00\") return true;\n  return false;\n}\n\nexport function noZero(value: string) {\n  return isZero(value) ? \"\" : value;\n}\n", "import { dom } from \"../../dom.js\";\r\nimport { asCurrency } from \"../../fun/asCurrency.js\";\r\nimport { moveChildren } from \"../../fun/dom.js\";\r\nimport { hookupTriggers } from \"../../fun/hookupTriggers.js\";\r\nimport { noZero } from \"../../fun/isZero.js\";\r\nimport { sum } from \"../../fun/sum.js\";\r\nimport { globals } from \"../../globals.js\";\r\n\r\nimport { Invoice } from \"../../services/invoices.js\";\r\n\r\nexport function create(\r\n  invoices: Invoice[]\r\n) {\r\n  const total = sum(\r\n    invoices.map(totalInvoice)\r\n  );\r\n\r\n  const labor = sum(\r\n    invoices.map((i) => i.labor)\r\n  );\r\n\r\n  const payments = sum(\r\n    invoices.map(totalPayments)\r\n  );\r\n  const balanceDue = total - payments;\r\n\r\n  const target: HTMLFormElement =\r\n    invoices.length ? (\r\n      <form class=\"grid-6\">\r\n        <h1 class=\"centered col-1-last\">\r\n          {`Invoices for ${globals.primaryContact.companyName}`}\r\n        </h1>\r\n        <div class=\"bold col-1-4\">\r\n          Client\r\n        </div>\r\n        <div class=\"bold col-5 align-right\">\r\n          Labor\r\n        </div>\r\n        <div class=\"bold col-6 align-right\">\r\n          Total\r\n        </div>\r\n        <div class=\"bold col-7-last align-right\">\r\n          Balance Due\r\n        </div>\r\n        <div class=\"line col-1-last\"></div>\r\n      </form>\r\n    ) : (\r\n      <form class=\"grid-6\">\r\n        <div class=\"col-1-last centered\">\r\n          No invoices defined\r\n        </div>\r\n        <div class=\"line col-1-last\"></div>\r\n      </form>\r\n    );\r\n\r\n  invoices\r\n    .map(renderInvoice)\r\n    .forEach((item) =>\r\n      moveChildren(item, target)\r\n    );\r\n\r\n  invoices.length &&\r\n    moveChildren(\r\n      <div>\r\n        <div class=\"vspacer-1 col-1-last\"></div>\r\n        <div class=\"line col-1-last\"></div>\r\n        <label class=\"bold col-1-4\">\r\n          Total\r\n        </label>\r\n        <label class=\"bold col-5 currency\">\r\n          {asCurrency(labor)}\r\n        </label>\r\n        <label class=\"bold col-6 currency\">\r\n          {asCurrency(total)}\r\n        </label>\r\n        <label class=\"bold col-7-last currency\">\r\n          {asCurrency(balanceDue)}\r\n        </label>\r\n        <div class=\"vspacer-2 col-1-last\"></div>\r\n      </div>,\r\n      target\r\n    );\r\n\r\n  hookupTriggers(target);\r\n\r\n  return target;\r\n}\r\n\r\nfunction totalInvoice(\r\n  invoice: Invoice\r\n) {\r\n  const total = sum(\r\n    invoice.items.map((i) => i.total)\r\n  );\r\n\r\n  const tax = sum(\r\n    invoice.items.map((i) => i.tax)\r\n  );\r\n\r\n  return (\r\n    total +\r\n    tax +\r\n    invoice.labor +\r\n    invoice.additional\r\n  );\r\n}\r\n\r\nfunction renderInvoice(\r\n  invoice: Invoice\r\n): HTMLDivElement {\r\n  const invoiceTotal =\r\n    totalInvoice(invoice);\r\n  return (\r\n    <div>\r\n      <a\r\n        class=\"col-1-4\"\r\n        href={`invoice?id=${invoice.id}`}\r\n      >\r\n        {invoice.clientname}\r\n      </a>\r\n      <label class=\"col-5 currency\">\r\n        {asCurrency(invoice.labor)}\r\n      </label>\r\n      <label class=\"col-6 currency\">\r\n        {asCurrency(invoiceTotal)}\r\n      </label>\r\n      <label class=\"col-7 currency\">\r\n        {noZero(\r\n          asCurrency(\r\n            invoiceTotal -\r\n              totalPayments(invoice)\r\n          )\r\n        )}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\nfunction totalPayments(\r\n  invoice: Invoice\r\n): number {\r\n  return sum(\r\n    invoice.mops.map((i) => i.paid)\r\n  );\r\n}\r\n", "export function isDefined(value: any) {\n  return typeof value !== \"undefined\";\n}\n\nexport function get(\n  formDom: HTMLFormElement,\n  key: string\n) {\n  if (!isDefined(formDom[key]))\n    throw `form element not found: ${key}`;\n  return formDom[key].value;\n}\nexport function set(\n  formDom: HTMLFormElement,\n  values: object\n) {\n  const keys = Object.keys(values);\n  keys.forEach((key) => {\n    if (!isDefined(formDom[key]))\n      throw `form element not found: ${key}`;\n    formDom[key].value = values[key];\n  });\n}\n", "import { getGlobalState } from \"./globalState\";\n\nexport const modes = {\n  light_mode: \"light\",\n  dark_mode: \"dark\",\n  holiday_mode: \"holiday\",\n};\n\nexport function setMode(mode?: string) {\n  if (!mode)\n    mode =\n      localStorage.getItem(\"mode\") ||\n      modes.light_mode;\n\n  localStorage.setItem(\"mode\", mode);\n\n  document.body.classList.remove(\n    ...Object.values(modes)\n  );\n\n  document.body.classList.add(mode);\n\n  const isFontier =\n    true ==\n    getGlobalState<boolean>(\"textier\");\n  document.body.classList.toggle(\n    \"textier\",\n    isFontier\n  );\n}\n", "import { createClient } from \"../globals.js\";\r\nimport faunadb from \"faunadb\";\r\n\r\nconst { query } = faunadb;\r\nconst q = query;\r\n\r\nexport async function validate() {\r\n  const client = createClient();\r\n  await client.ping();\r\n}\r\n", "import {\r\n  CONTEXT,\r\n  isOffline,\r\n} from \"./globals.js\";\r\nimport { validate } from \"./services/validateAccessToken.js\";\r\nimport { routes } from \"./router.js\";\r\nimport { reportError } from \"./ux/Toaster.js\";\r\nimport { gotoUrl } from \"./fun/gotoUrl\";\r\n\r\nexport async function identify() {\r\n  if (isOffline()) return false;\r\n  if (!localStorage.getItem(\"user\")) {\r\n    gotoUrl(\r\n      routes.identity({\r\n        target: location.href,\r\n        context: CONTEXT,\r\n      })\r\n    );\r\n    return false;\r\n  }\r\n  return true;\r\n\r\n  try {\r\n    await validate();\r\n  } catch (ex) {\r\n    reportError(ex);\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n", "import { dom } from \"../dom.js\";\n\nexport function injectLabels(\n  domNode: HTMLElement\n) {\n  const inputsToWrap = Array.from(\n    domNode.querySelectorAll(\n      \"input.auto-label\"\n    )\n  ) as Array<HTMLInputElement>;\n\n  inputsToWrap.forEach((input) => {\n    const label = dom(\"label\");\n    label.className =\n      \"border padding rounded wrap \" +\n      input.className;\n    label.innerText = input.placeholder;\n    input.parentElement!.insertBefore(\n      label,\n      input\n    );\n    label.appendChild(input);\n  });\n}\n", "import { query as q } from \"faunadb\";\r\nimport { sum } from \"../fun/sum.js\";\r\nimport {\r\n  createClient,\r\n  globals,\r\n} from \"../globals.js\";\r\nconst { TAXRATE } = globals;\r\nimport {\r\n  Ledger,\r\n  upsertItem as saveLedger,\r\n  getItems as loadAllLedgers,\r\n} from \"./gl.js\";\r\nimport {\r\n  Invoice,\r\n  getItems as loadAllInvoices,\r\n} from \"./invoices.js\";\r\nimport { split } from \"../fun/split\";\r\nimport { distinct } from \"../fun/distinct.js\";\r\nimport { asCurrency } from \"../fun/asCurrency.js\";\r\nimport { inventoryModel } from \"./inventory.js\";\r\n\r\nexport async function removeDuplicateInventoryItems() {\r\n  const inventoryItems =\r\n    await inventoryModel.getItems();\r\n  const itemCodes = distinct(\r\n    inventoryItems.map((i) => i.code)\r\n  );\r\n  for (let code of itemCodes) {\r\n    const duplicates =\r\n      inventoryItems.filter(\r\n        (i) => i.code === code\r\n      );\r\n    if (duplicates.length <= 1)\r\n      continue;\r\n\r\n    const deleteOrder =\r\n      duplicates.sortBy({\r\n        taxrate: \"-number\",\r\n      });\r\n\r\n    while (deleteOrder.length > 1) {\r\n      const deleteMe =\r\n        deleteOrder.pop()!;\r\n      await inventoryModel.removeItem(\r\n        deleteMe.id!\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport async function forceUpdatestampTable(\r\n  tableName: string\r\n) {\r\n  const client = createClient();\r\n  return await client.query(\r\n    q.CreateCollection({\r\n      name: tableName,\r\n    })\r\n  );\r\n}\r\n\r\nexport async function forceUpdatestampIndex(\r\n  tableName: string\r\n) {\r\n  const client = createClient();\r\n\r\n  const query = q.CreateIndex({\r\n    name: `${tableName}_updates`,\r\n    source: q.Collection(tableName),\r\n    values: [\r\n      {\r\n        field: [\"data\", \"update_date\"],\r\n        reverse: false,\r\n      },\r\n      {\r\n        field: [\"ref\"],\r\n      },\r\n    ],\r\n  });\r\n\r\n  return await client.query(query);\r\n}\r\n\r\nexport async function importInvoicesToGeneralLedger() {\r\n  const invoices =\r\n    await loadAllInvoices();\r\n  const ledgers =\r\n    await loadAllLedgers();\r\n  const [\r\n    invoicesToImport,\r\n    invoicesToUpdate,\r\n  ] = split(\r\n    invoices,\r\n    (i) =>\r\n      !ledgers.find(\r\n        (l) =>\r\n          l.description ===\r\n          `INVOICE ${i.id}`\r\n      )\r\n  );\r\n\r\n  // update these invoices\r\n  invoicesToUpdate.forEach(\r\n    async (invoice) => {\r\n      const ledger = ledgers.find(\r\n        (l) =>\r\n          l.description ===\r\n          `INVOICE ${invoice.id}`\r\n      );\r\n      if (!ledger)\r\n        throw `ledger must exist for invoice: ${invoice.id}`;\r\n\r\n      const newLedger = {\r\n        ...createLedger(invoice),\r\n        id: ledger.id,\r\n      };\r\n\r\n      if (\r\n        JSON.stringify([\r\n          newLedger.date,\r\n          newLedger.items,\r\n        ]) !==\r\n        JSON.stringify([\r\n          ledger.date,\r\n          ledger.items,\r\n        ])\r\n      ) {\r\n        await saveLedger({\r\n          ...newLedger,\r\n          id: ledger.id,\r\n        });\r\n      }\r\n    }\r\n  );\r\n\r\n  while (invoicesToImport.length) {\r\n    const invoice =\r\n      invoicesToImport.shift()!;\r\n    const ledger =\r\n      createLedger(invoice);\r\n    await saveLedger(ledger);\r\n  }\r\n}\r\n\r\nfunction createLedger(\r\n  invoice: Invoice\r\n) {\r\n  const inventory = sum(\r\n    invoice.items.map((i) => i.total)\r\n  );\r\n  const tax = parseFloat(\r\n    asCurrency(inventory * TAXRATE)\r\n  );\r\n  const labor = invoice.labor;\r\n  const rent =\r\n    invoice.additional > 0\r\n      ? invoice.additional\r\n      : 0;\r\n  const discount =\r\n    invoice.additional < 0\r\n      ? invoice.additional\r\n      : 0;\r\n\r\n  const totalPayments = sum(\r\n    invoice.mops.map((i) => i.paid)\r\n  );\r\n\r\n  const payments = distinct(\r\n    invoice.mops.map((i) => i.mop)\r\n  ).map((mop) => ({\r\n    mop,\r\n    total: sum(\r\n      invoice.mops\r\n        .filter((i) => i.mop === mop)\r\n        .map((i) => i.paid)\r\n    ),\r\n  }));\r\n\r\n  const ledger: Ledger = {\r\n    date: invoice.date,\r\n    description: `INVOICE ${invoice.id}`,\r\n    items: [\r\n      {\r\n        account: \"AR\",\r\n        amount: inventory,\r\n        comment: \"INVENTORY\",\r\n      },\r\n      {\r\n        account: \"INVENTORY\",\r\n        amount: -inventory,\r\n        comment: \"INVENTORY\",\r\n      },\r\n      {\r\n        account: \"AR\",\r\n        amount: tax,\r\n        comment: \"TAX\",\r\n      },\r\n      {\r\n        account: \"TAX\",\r\n        amount: -tax,\r\n        comment: \"TAX\",\r\n      },\r\n      {\r\n        account: \"AR\",\r\n        amount: rent,\r\n        comment: \"RENT\",\r\n      },\r\n      {\r\n        account: \"RENT\",\r\n        amount: -rent,\r\n        comment: \"RENT\",\r\n      },\r\n      {\r\n        account: \"AR\",\r\n        amount: labor,\r\n        comment: \"LABOR\",\r\n      },\r\n      {\r\n        account: \"LABOR\",\r\n        amount: -labor,\r\n        comment: \"LABOR\",\r\n      },\r\n      {\r\n        account: \"AR\",\r\n        amount: discount,\r\n        comment: \"DISCOUNT\",\r\n      },\r\n      {\r\n        account: \"LABOR\",\r\n        amount: -discount,\r\n        comment: \"DISCOUNT\",\r\n      },\r\n      {\r\n        account: \"AR\",\r\n        amount: -totalPayments,\r\n        comment: \"PAYMENT\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  payments.forEach((payment) => {\r\n    ledger.items.push({\r\n      account: payment.mop,\r\n      amount: payment.total,\r\n      comment: `PAYMENT`,\r\n    });\r\n  });\r\n\r\n  ledger.items = ledger.items.filter(\r\n    (i) => 0 != i.amount\r\n  );\r\n  return ledger;\r\n}\r\n", "import { StorageModel } from \"./StorageModel.js\";\r\n\r\nconst LEDGER_TABLE = \"general_ledger\";\r\n\r\nexport interface LedgerItem {\r\n  comment: string;\r\n  account: string;\r\n  amount: number;\r\n}\r\n\r\nexport interface Ledger {\r\n  id?: string;\r\n  date: number;\r\n  description?: string;\r\n  items: Array<LedgerItem>;\r\n}\r\n\r\nexport const ledgerModel =\r\n  new StorageModel<Ledger>({\r\n    tableName: LEDGER_TABLE,\r\n    offline: false,\r\n  });\r\n\r\nexport async function removeItem(\r\n  id: string\r\n) {\r\n  return ledgerModel.removeItem(id);\r\n}\r\n\r\nexport async function getItem(\r\n  id: string\r\n) {\r\n  return ledgerModel.getItem(id);\r\n}\r\n\r\nexport async function upsertItem(\r\n  data: Ledger\r\n) {\r\n  return ledgerModel.upsertItem(data);\r\n}\r\n\r\nexport async function getItems() {\r\n  const items =\r\n    await ledgerModel.getItems();\r\n  return items.filter(\r\n    (ledger) =>\r\n      ledger.items &&\r\n      ledger.items[0] &&\r\n      ledger.items[0].account\r\n  );\r\n}\r\n", "export function isUndefined(\n  value: any\n) {\n  return typeof value === \"undefined\";\n}\n\nexport function isNull(value: any) {\n  return value === null;\n}\n", "const userAgent =\n  navigator.userAgent.toLocaleUpperCase();\n\nconst isChrome =\n  userAgent.includes(\"CHROME\");\n\nconst isMobile =\n  navigator.userAgent.match(\n    /(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i\n  );\n\nexport function removeCssRestrictors() {\n  if (isChrome) {\n    removeCssRule(\".if-print-to-pdf\");\n  }\n\n  if (!isMobile) {\n    removeCssRule(\".if-desktop\");\n  }\n}\n\nfunction removeCssRule(name: string) {\n  const sheets = document.styleSheets;\n  for (\n    let sheetIndex = 0;\n    sheetIndex < sheets.length;\n    sheetIndex++\n  ) {\n    const sheet = sheets[sheetIndex];\n    for (\n      let ruleIndex = 0;\n      ruleIndex < sheet.cssRules.length;\n      ruleIndex++\n    ) {\n      const rule = sheet.cssRules[\n        ruleIndex\n      ] as CSSStyleRule;\n      if (rule.selectorText === name) {\n        sheet.deleteRule(ruleIndex);\n        return;\n      }\n    }\n  }\n}\n", "import \"./fun/sort.js\";\nimport { setMode } from \"./fun/setMode\";\nimport {\n  globals,\n  isOffline,\n} from \"./globals\";\nconst { primaryContact } = globals;\nimport {\n  getGlobalState,\n  setGlobalState,\n} from \"./fun/globalState\";\nimport { identify } from \"./identify\";\nimport { extendNumericInputBehaviors } from \"./fun/behavior/form\";\nimport { hookupTriggers } from \"./fun/hookupTriggers\";\nimport { injectLabels } from \"./ux/injectLabels\";\nimport {\n  forceUpdatestampIndex,\n  forceUpdatestampTable,\n} from \"./services/admin\";\nimport { invoiceModel } from \"./services/invoices\";\nimport { inventoryModel } from \"./services/inventory\";\nimport { toast } from \"./ux/Toaster\";\nimport { isUndefined } from \"./fun/isUndefined\";\nimport { removeCssRestrictors } from \"./fun/detect.js\";\n\nexport { toast } from \"./ux/Toaster.js\";\nexport {\n  on,\n  trigger,\n} from \"./fun/on.js\";\n\nconst VERSION = \"1.0.5\";\n\nexport async function init() {\n  const domNode = document.body;\n\n  if (!isOffline()) {\n    await identify();\n    await registerServiceWorker();\n    setInitialState({\n      VERSION: \"1.0.3\",\n    });\n\n    setInitialState({\n      TAX_RATE: 6,\n      CACHE_MAX_AGE: 600,\n      BATCH_SIZE: 64,\n      work_offline: true,\n      VERSION,\n    });\n    setInitialState({ primaryContact });\n\n    await upgradeFromCurrentVersion();\n  }\n\n  injectLabels(domNode);\n  extendNumericInputBehaviors(domNode);\n  hookupTriggers(domNode);\n  setMode();\n  removeCssRestrictors();\n}\n\nfunction setInitialState(\n  data: Record<string, any>\n) {\n  Object.keys(data).forEach((key) => {\n    const value = getGlobalState(key);\n    if (isUndefined(value)) {\n      setGlobalState(key, data[key]);\n    }\n  });\n}\n\nasync function upgradeFromCurrentVersion() {\n  const currentVersion =\n    getGlobalState<string>(\"VERSION\");\n\n  switch (currentVersion) {\n    case \"1.0.3\":\n      await upgradeFrom103To105();\n      toast(\n        `upgraded to ${currentVersion}`\n      );\n      break;\n    case \"1.0.4\":\n      break; // nothing to do\n    case \"1.0.5\":\n      break; // nothing to do\n    default:\n      throw `unexpected version: ${currentVersion}`;\n  }\n}\n\nasync function upgradeFrom103To105() {\n  // delete local-only inventory items\n  inventoryModel.upgradeTo104();\n  // pull in actual inventory items\n  await inventoryModel.synchronize();\n\n  setGlobalState(\"VERSION\", VERSION);\n}\n\nasync function createInventoryCollection() {\n  await forceUpdatestampTable(\n    \"inventory\"\n  );\n  await forceUpdatestampIndex(\n    \"inventory\"\n  );\n}\n\nasync function populateInventoryFromInvoice() {\n  const taxrate =\n    getGlobalState<number>(\n      \"TAX_RATE\"\n    ) || 0;\n\n  const currentInventoryItems =\n    await inventoryModel.getItems();\n\n  const invoices =\n    await invoiceModel.getItems();\n  for (let invoice of invoices) {\n    invoice.items.forEach(\n      async (item) => {\n        // skip if already defined in inventory\n        if (\n          currentInventoryItems.some(\n            (i) => i.code === item.item\n          )\n        )\n          return;\n        await inventoryModel.upsertItem(\n          {\n            code: item.item,\n            description:\n              item.description,\n            quantity: item.quantity,\n            price: item.price,\n            taxrate:\n              item.tax === 0\n                ? 0\n                : taxrate,\n          }\n        );\n      }\n    );\n  }\n}\n\nasync function registerServiceWorker() {\n  const worker =\n    await navigator.serviceWorker.register(\n      \"/app/worker.js\",\n      { type: \"module\" }\n    );\n}\n", "import \"../fun/sort.js\"; // force Array.sortBy extension\r\nimport {\r\n  on,\r\n  trigger,\r\n} from \"../fun/on.js\";\r\nimport { routes } from \"../router.js\";\r\nimport {\r\n  upsertItem as saveInvoice,\r\n  removeItem,\r\n  getItem as getInvoice,\r\n  getItems as getAllInvoices,\r\n  Invoice,\r\n  InvoiceItem,\r\n  invoiceModel,\r\n} from \"../services/invoices.js\";\r\n\r\nimport { create as createFormTemplate } from \"./templates/invoice-form.js\";\r\nimport { create as createPrintTemplate } from \"./templates/invoice-print.js\";\r\nimport { create as createGridTemplate } from \"./templates/invoices-grid.js\";\r\nimport { get, set } from \"../fun/get\";\r\nimport {\r\n  reportError,\r\n  toast,\r\n} from \"../ux/Toaster.js\";\r\nimport { globals } from \"../globals.js\";\r\nconst { TAXRATE } = globals;\r\n\r\nimport { asCurrency } from \"../fun/asCurrency.js\";\r\nimport { gotoUrl } from \"../fun/gotoUrl.js\";\r\nimport { init as systemInit } from \"../index.js\";\r\n\r\nexport async function init(\r\n  target = document.body\r\n) {\r\n  try {\r\n    await systemInit();\r\n    const queryParams =\r\n      new URLSearchParams(\r\n        window.location.search\r\n      );\r\n    if (queryParams.has(\"id\")) {\r\n      await renderInvoice(\r\n        target,\r\n        queryParams.get(\"id\")!\r\n      );\r\n    } else {\r\n      await renderInvoice(target);\r\n    }\r\n  } catch (ex) {\r\n    reportError(ex);\r\n  }\r\n}\r\n\r\nexport async function renderInvoices(\r\n  target: HTMLElement\r\n) {\r\n  try {\r\n    await systemInit();\r\n    const invoices =\r\n      await getAllInvoices();\r\n    const formDom =\r\n      createGridTemplate(invoices);\r\n    target.appendChild(formDom);\r\n    on(\r\n      formDom,\r\n      \"create-invoice\",\r\n      () => {\r\n        try {\r\n          gotoUrl(\r\n            routes.createInvoice()\r\n          );\r\n        } catch (ex) {\r\n          reportError(ex);\r\n        }\r\n      }\r\n    );\r\n  } catch (ex) {\r\n    reportError(ex);\r\n  }\r\n}\r\n\r\nasync function renderInvoice(\r\n  target: HTMLElement,\r\n  invoiceId?: string\r\n) {\r\n  let invoice: Invoice | null;\r\n  if (invoiceId) {\r\n    invoice = await getInvoice(\r\n      invoiceId\r\n    );\r\n    if (!invoice)\r\n      throw \"invoice not found\";\r\n  } else {\r\n    // invoice is empty\r\n    invoice = {\r\n      id: \"\",\r\n      date: Date.now(),\r\n      clientname: \"\",\r\n      billto: \"\",\r\n      comments: \"\",\r\n      email: \"\",\r\n      telephone: \"\",\r\n      items: [],\r\n      labor: 0,\r\n      additional: 0,\r\n      mops: [],\r\n      taxrate: TAXRATE,\r\n    };\r\n  }\r\n  const formDom =\r\n    await createFormTemplate(invoice);\r\n  target.appendChild(formDom);\r\n\r\n  hookupEvents(formDom);\r\n\r\n  trigger(formDom, \"change\");\r\n}\r\n\r\n// events are normally hooked in the template\r\n// but these events require service dependencies\r\nfunction hookupEvents(\r\n  formDom: HTMLFormElement\r\n) {\r\n  on(formDom, \"print\", async () => {\r\n    if (\r\n      await tryToSaveInvoice(formDom)\r\n    ) {\r\n      const requestModel =\r\n        asModel(formDom);\r\n      print(\r\n        formDom.parentElement ||\r\n          formDom,\r\n        requestModel\r\n      );\r\n    }\r\n  });\r\n\r\n  on(formDom, \"delete\", async () => {\r\n    if (\r\n      await tryToDeleteInvoice(formDom)\r\n    )\r\n      trigger(\r\n        formDom,\r\n        \"list-all-invoices\"\r\n      );\r\n  });\r\n\r\n  on(formDom, \"submit\", async () => {\r\n    if (\r\n      await tryToSaveInvoice(formDom)\r\n    ) {\r\n      toast(\"Invoice saved\");\r\n    }\r\n  });\r\n}\r\n\r\nasync function tryToDeleteInvoice(\r\n  formDom: HTMLFormElement\r\n) {\r\n  const id = get(formDom, \"id\");\r\n  if (!id)\r\n    throw \"unable to delete this invoice\";\r\n  await removeItem(id);\r\n  return true;\r\n}\r\n\r\nasync function tryToSaveInvoice(\r\n  formDom: HTMLFormElement\r\n) {\r\n  if (!formDom.checkValidity()) {\r\n    formDom.reportValidity();\r\n    return false;\r\n  }\r\n  const requestModel = asModel(formDom);\r\n  if (requestModel.id) {\r\n    // confirm invoice changed\r\n    const priorModel =\r\n      await invoiceModel.getItem(\r\n        requestModel.id\r\n      );\r\n    if (\r\n      deepEqual(\r\n        requestModel,\r\n        priorModel\r\n      )\r\n    ) {\r\n      toast(\"No changes found\");\r\n      return false;\r\n    }\r\n  }\r\n  await saveInvoice(requestModel);\r\n  set(formDom, { id: requestModel.id });\r\n  return true;\r\n}\r\n\r\n// should I move services into the template?\r\n// I did with GL but seems good to let the template handle events only\r\n// this is more business logic and workflow but since it is using the form\r\n// as the data source perhaps it belongs closer to that view...move it?\r\n// 260 lines here + 470 lines in the form template.\r\nfunction asModel(\r\n  formDom: HTMLFormElement\r\n) {\r\n  const data = new FormData(formDom);\r\n  const requestModel: Invoice = {\r\n    id: data.get(\"id\") as string,\r\n    clientname: data.get(\r\n      \"clientname\"\r\n    ) as string,\r\n    date: new Date(\r\n      data.get(\"date\") as string\r\n    ).valueOf(),\r\n    billto: data.get(\r\n      \"billto\"\r\n    ) as string,\r\n    telephone: data.get(\r\n      \"telephone\"\r\n    ) as string,\r\n    email: data.get(\"email\") as string,\r\n    comments: data.get(\r\n      \"comments\"\r\n    ) as string,\r\n    items: [] as Array<InvoiceItem>,\r\n    labor: Number.parseFloat(\r\n      (data.get(\"labor\") as string) ||\r\n        \"0\"\r\n    ),\r\n    additional: Number.parseFloat(\r\n      (data.get(\r\n        \"additional\"\r\n      ) as string) || \"0\"\r\n    ),\r\n    mops: [] as Array<{\r\n      mop: string;\r\n      paid: number;\r\n    }>,\r\n    taxrate: TAXRATE,\r\n  };\r\n\r\n  const mops = data.getAll(\r\n    \"method_of_payment\"\r\n  );\r\n  const payments = data.getAll(\r\n    \"amount_paid\"\r\n  );\r\n\r\n  requestModel.mops = mops.map(\r\n    (mop, i) => ({\r\n      mop: mop as string,\r\n      paid: parseFloat(\r\n        payments[i] as string\r\n      ),\r\n    })\r\n  );\r\n\r\n  let currentItem: InvoiceItem | null =\r\n    null;\r\n  for (let [key, value] of (\r\n    data as any\r\n  ).entries()) {\r\n    switch (key) {\r\n      case \"item\":\r\n        currentItem = <InvoiceItem>{};\r\n        requestModel.items.push(\r\n          currentItem\r\n        );\r\n        currentItem.item =\r\n          value as string;\r\n        break;\r\n      case \"quantity\":\r\n        if (!currentItem)\r\n          throw \"item expected\";\r\n        currentItem.quantity =\r\n          parseFloat(value as string);\r\n        break;\r\n      case \"price\":\r\n        if (!currentItem)\r\n          throw \"item expected\";\r\n        currentItem.price = parseFloat(\r\n          value as string\r\n        );\r\n        break;\r\n      case \"total\":\r\n        if (!currentItem)\r\n          throw \"item expected\";\r\n        currentItem.total = parseFloat(\r\n          value as string\r\n        );\r\n        currentItem.tax = parseFloat(\r\n          asCurrency(\r\n            requestModel.taxrate *\r\n              currentItem.total\r\n          )\r\n        );\r\n        break;\r\n    }\r\n  }\r\n  return requestModel;\r\n}\r\n\r\nexport function print(\r\n  target: HTMLElement,\r\n  invoice: Invoice\r\n) {\r\n  try {\r\n    target.classList.add(\"print\");\r\n    const toPrint =\r\n      createPrintTemplate(invoice);\r\n    target.innerHTML = \"\";\r\n    target.appendChild(toPrint);\r\n    window.document.title =\r\n      invoice.clientname;\r\n    window.print();\r\n  } catch (ex) {\r\n    reportError(ex);\r\n  }\r\n}\r\nfunction deepEqual(\r\n  requestModel: Invoice,\r\n  priorModel: Invoice\r\n) {\r\n  return (\r\n    JSON.stringify(requestModel) ===\r\n    JSON.stringify(priorModel)\r\n  );\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
